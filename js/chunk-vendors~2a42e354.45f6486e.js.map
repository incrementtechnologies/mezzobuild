{"version":3,"sources":["webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/helpers/isAxiosError.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/bignumber.js/bignumber.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js"],"names":["utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","this","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","getUri","params","paramsSerializer","replace","data","module","exports","callback","arr","apply","fn","thisArg","args","Array","i","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","code","len","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","join","extraBytes","parts","maxChunkLength","len2","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","Object","toString","call","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","merge","enhanceError","message","error","__CANCEL__","encode","val","encodeURIComponent","serializedParams","key","isArray","v","isDate","toISOString","hashmarkIndex","slice","isAxiosError","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","isStandardBrowserEnv","originURL","msie","test","navigator","userAgent","urlParsingNode","document","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","isString","assert","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex","str","r","Math","min","c","parseBase","mul","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","createError","reject","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","isPlainObject","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","transformData","isCancel","throwIfCancellationRequested","cancelToken","throwIfRequested","reason","payload","Cancel","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","read","match","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","baseURL","requestedURL","CancelToken","executor","TypeError","resolvePromise","token","cancel","globalObject","BigNumber","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","configObject","convertBase","parseNumeric","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","_isBigNumber","String","substring","intCheck","DEBUG","toUpperCase","format","rm","id","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","normalise","pop","sd","d","ni","rd","xc","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","obj","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","sign","callerIsToString","multiply","temp","xlo","xhi","klo","khi","compare","aL","bL","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","times","integerValue","isEqualTo","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","intDigits","substr","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","zs","settle","cookies","buildFullPath","parseHeaders","isURLSameOrigin","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","fullPath","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","abort","send","ignoreDuplicateOf","line","trim","fns","bind","FormData","result","ArrayBuffer","isView","getPrototypeOf","isFunction","pipe","URLSearchParams","product","assignValue","extend","stripBOM","content","normalizedName","createInstance","defaultConfig","context","instance","axios","create","all","promises","spread","default","relativeURL","handlers","use","eject"],"mappings":"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","file":"js/chunk-vendors~2a42e354.45f6486e.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"sourceRoot":""}