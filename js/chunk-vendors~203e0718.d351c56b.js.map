{"version":3,"sources":["webpack:///./node_modules/gaxios/build/src/index.js","webpack:///./node_modules/gaxios/build/src/retry.js","webpack:///./node_modules/gcp-metadata/build/src/index.js","webpack:///./node_modules/gaxios/build/src/common.js","webpack:///./node_modules/gaxios/build/src/gaxios.js","webpack:///./node_modules/gaxios/node_modules/is-stream/index.js","webpack:///./node_modules/fast-text-encoding/text.min.js"],"names":["Object","defineProperty","exports","value","request","instance","Gaxios","gaxios_1","enumerable","get","common_1","async","opts","GaxiosError","getRetryConfig","err","_a","config","getConfig","retry","shouldRetry","currentRetryAttempt","undefined","httpMethodsToRetry","noResponseRetries","retryRanges","statusCodesToRetry","retryConfig","shouldRetryFn","shouldRetryRequest","retryDelay","delay","Math","pow","backoff","Promise","resolve","setTimeout","onRetryAttempt","name","response","method","indexOf","toUpperCase","status","isInRange","min","max","requestTimeout","resetIsAvailableCache","isAvailable","project","HEADERS","HEADER_VALUE","HEADER_NAME","SECONDARY_HOST_ADDRESS","HOST_ADDRESS","BASE_PATH","jsonBigint","getBaseUrl","baseUrl","GCE_METADATA_IP","GCE_METADATA_HOST","test","URL","href","validate","options","keys","forEach","key","Error","metadataAccessor","type","fastFail","property","requestMethod","fastFailMetadataRequest","res","url","headers","assign","params","responseType","timeout","toLowerCase","data","parse","e","message","secondaryOptions","replace","responded","r1","then","catch","r2","race","detectGCPAvailableRetries","DETECT_GCP_RETRIES","Number","cachedIsAvailableResponse","DEBUG_AUTH","console","info","code","includes","process","emitWarning","K_SERVICE","FUNCTION_NAME","freeze","super","this","toString","__importDefault","mod","__esModule","extend_1","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","retry_1","fetch","hasFetch","window","default","hasWindow","hasBuffer","Buffer","hasHeader","header","getHeader","HttpsProxyAgent","loadProxy","proxy","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","skipProxy","noProxyEnv","NO_PROXY","no_proxy","noProxyUrls","split","parsedURL","find","startsWith","hostname","endsWith","origin","getProxy","defaults","agentCache","Map","validateOpts","_request","fetchImpl","fetchImplementation","getResponseData","translateResponse","translatedResponse","adapter","_defaultAdapter","bind","validateStatus","body","text","JSON","arrayBuffer","blob","baseURL","paramsSerializer","length","additionalQueryParams","slice","prefix","maxContentLength","size","maxRedirects","follow","readable","isBuffer","stringify","has","agent","cert","port","host","protocol","set","Agent","statusText","responseURL","isStream","stream","pipe","writable","_write","_writableState","_read","_readableState","duplex","transform","_transform","module","m","k","a","c","fatal","r","RangeError","t","from","buffer","byteOffset","byteLength","u","createObjectURL","Blob","f","XMLHttpRequest","open","send","responseText","q","revokeObjectURL","Uint16Array","h","d","b","push","String","fromCharCode","apply","subarray","join","g","n","v","l","TextEncoder","TextDecoder","prototype","encode","Uint8Array","charCodeAt","p","decode","ArrayBuffer","global"],"mappings":"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","file":"js/chunk-vendors~203e0718.d351c56b.js","sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.request = exports.instance = exports.Gaxios = void 0;\nconst gaxios_1 = require(\"./gaxios\");\nObject.defineProperty(exports, \"Gaxios\", { enumerable: true, get: function () { return gaxios_1.Gaxios; } });\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"GaxiosError\", { enumerable: true, get: function () { return common_1.GaxiosError; } });\n/**\n * The default instance used when the `request` method is directly\n * invoked.\n */\nexports.instance = new gaxios_1.Gaxios();\n/**\n * Make an HTTP request using the given options.\n * @param opts Options for the request\n */\nasync function request(opts) {\n    return exports.instance.request(opts);\n}\nexports.request = request;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryConfig = void 0;\nasync function getRetryConfig(err) {\n    var _a;\n    let config = getConfig(err);\n    if (!err || !err.config || (!config && !err.config.retry)) {\n        return { shouldRetry: false };\n    }\n    config = config || {};\n    config.currentRetryAttempt = config.currentRetryAttempt || 0;\n    config.retry =\n        config.retry === undefined || config.retry === null ? 3 : config.retry;\n    config.httpMethodsToRetry = config.httpMethodsToRetry || [\n        'GET',\n        'HEAD',\n        'PUT',\n        'OPTIONS',\n        'DELETE',\n    ];\n    config.noResponseRetries =\n        config.noResponseRetries === undefined || config.noResponseRetries === null\n            ? 2\n            : config.noResponseRetries;\n    // If this wasn't in the list of status codes where we want\n    // to automatically retry, return.\n    const retryRanges = [\n        // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n        // 1xx - Retry (Informational, request still processing)\n        // 2xx - Do not retry (Success)\n        // 3xx - Do not retry (Redirect)\n        // 4xx - Do not retry (Client errors)\n        // 429 - Retry (\"Too Many Requests\")\n        // 5xx - Retry (Server errors)\n        [100, 199],\n        [429, 429],\n        [500, 599],\n    ];\n    config.statusCodesToRetry = config.statusCodesToRetry || retryRanges;\n    // Put the config back into the err\n    err.config.retryConfig = config;\n    // Determine if we should retry the request\n    const shouldRetryFn = config.shouldRetry || shouldRetryRequest;\n    if (!(await shouldRetryFn(err))) {\n        return { shouldRetry: false, config: err.config };\n    }\n    // Calculate time to wait with exponential backoff.\n    // If this is the first retry, look for a configured retryDelay.\n    const retryDelay = config.currentRetryAttempt ? 0 : (_a = config.retryDelay) !== null && _a !== void 0 ? _a : 100;\n    // Formula: retryDelay + ((2^c - 1 / 2) * 1000)\n    const delay = retryDelay + ((Math.pow(2, config.currentRetryAttempt) - 1) / 2) * 1000;\n    // We're going to retry!  Incremenent the counter.\n    err.config.retryConfig.currentRetryAttempt += 1;\n    // Create a promise that invokes the retry after the backOffDelay\n    const backoff = new Promise(resolve => {\n        setTimeout(resolve, delay);\n    });\n    // Notify the user if they added an `onRetryAttempt` handler\n    if (config.onRetryAttempt) {\n        config.onRetryAttempt(err);\n    }\n    // Return the promise in which recalls Gaxios to retry the request\n    await backoff;\n    return { shouldRetry: true, config: err.config };\n}\nexports.getRetryConfig = getRetryConfig;\n/**\n * Determine based on config if we should retry the request.\n * @param err The GaxiosError passed to the interceptor.\n */\nfunction shouldRetryRequest(err) {\n    const config = getConfig(err);\n    // node-fetch raises an AbortError if signaled:\n    // https://github.com/bitinn/node-fetch#request-cancellation-with-abortsignal\n    if (err.name === 'AbortError') {\n        return false;\n    }\n    // If there's no config, or retries are disabled, return.\n    if (!config || config.retry === 0) {\n        return false;\n    }\n    // Check if this error has no response (ETIMEDOUT, ENOTFOUND, etc)\n    if (!err.response &&\n        (config.currentRetryAttempt || 0) >= config.noResponseRetries) {\n        return false;\n    }\n    // Only retry with configured HttpMethods.\n    if (!err.config.method ||\n        config.httpMethodsToRetry.indexOf(err.config.method.toUpperCase()) < 0) {\n        return false;\n    }\n    // If this wasn't in the list of status codes where we want\n    // to automatically retry, return.\n    if (err.response && err.response.status) {\n        let isInRange = false;\n        for (const [min, max] of config.statusCodesToRetry) {\n            const status = err.response.status;\n            if (status >= min && status <= max) {\n                isInRange = true;\n                break;\n            }\n        }\n        if (!isInRange) {\n            return false;\n        }\n    }\n    // If we are out of retry attempts, return\n    config.currentRetryAttempt = config.currentRetryAttempt || 0;\n    if (config.currentRetryAttempt >= config.retry) {\n        return false;\n    }\n    return true;\n}\n/**\n * Acquire the raxConfig object from an GaxiosError if available.\n * @param err The Gaxios error with a config object.\n */\nfunction getConfig(err) {\n    if (err && err.config && err.config.retryConfig) {\n        return err.config.retryConfig;\n    }\n    return;\n}\n//# sourceMappingURL=retry.js.map","\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestTimeout = exports.resetIsAvailableCache = exports.isAvailable = exports.project = exports.instance = exports.HEADERS = exports.HEADER_VALUE = exports.HEADER_NAME = exports.SECONDARY_HOST_ADDRESS = exports.HOST_ADDRESS = exports.BASE_PATH = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst jsonBigint = require(\"json-bigint\");\nexports.BASE_PATH = '/computeMetadata/v1';\nexports.HOST_ADDRESS = 'http://169.254.169.254';\nexports.SECONDARY_HOST_ADDRESS = 'http://metadata.google.internal.';\nexports.HEADER_NAME = 'Metadata-Flavor';\nexports.HEADER_VALUE = 'Google';\nexports.HEADERS = Object.freeze({ [exports.HEADER_NAME]: exports.HEADER_VALUE });\n/**\n * Returns the base URL while taking into account the GCE_METADATA_HOST\n * environment variable if it exists.\n *\n * @returns The base URL, e.g., http://169.254.169.254/computeMetadata/v1.\n */\nfunction getBaseUrl(baseUrl) {\n    if (!baseUrl) {\n        baseUrl =\n            process.env.GCE_METADATA_IP ||\n                process.env.GCE_METADATA_HOST ||\n                exports.HOST_ADDRESS;\n    }\n    // If no scheme is provided default to HTTP:\n    if (!/^https?:\\/\\//.test(baseUrl)) {\n        baseUrl = `http://${baseUrl}`;\n    }\n    return new URL(exports.BASE_PATH, baseUrl).href;\n}\n// Accepts an options object passed from the user to the API. In previous\n// versions of the API, it referred to a `Request` or an `Axios` request\n// options object.  Now it refers to an object with very limited property\n// names. This is here to help ensure users don't pass invalid options when\n// they  upgrade from 0.4 to 0.5 to 0.8.\nfunction validate(options) {\n    Object.keys(options).forEach(key => {\n        switch (key) {\n            case 'params':\n            case 'property':\n            case 'headers':\n                break;\n            case 'qs':\n                throw new Error(\"'qs' is not a valid configuration option. Please use 'params' instead.\");\n            default:\n                throw new Error(`'${key}' is not a valid configuration option.`);\n        }\n    });\n}\nasync function metadataAccessor(type, options, noResponseRetries = 3, fastFail = false) {\n    options = options || {};\n    if (typeof options === 'string') {\n        options = { property: options };\n    }\n    let property = '';\n    if (typeof options === 'object' && options.property) {\n        property = '/' + options.property;\n    }\n    validate(options);\n    try {\n        const requestMethod = fastFail ? fastFailMetadataRequest : gaxios_1.request;\n        const res = await requestMethod({\n            url: `${getBaseUrl()}/${type}${property}`,\n            headers: Object.assign({}, exports.HEADERS, options.headers),\n            retryConfig: { noResponseRetries },\n            params: options.params,\n            responseType: 'text',\n            timeout: requestTimeout(),\n        });\n        // NOTE: node.js converts all incoming headers to lower case.\n        if (res.headers[exports.HEADER_NAME.toLowerCase()] !== exports.HEADER_VALUE) {\n            throw new Error(`Invalid response from metadata service: incorrect ${exports.HEADER_NAME} header.`);\n        }\n        else if (!res.data) {\n            throw new Error('Invalid response from the metadata service');\n        }\n        if (typeof res.data === 'string') {\n            try {\n                return jsonBigint.parse(res.data);\n            }\n            catch (_a) {\n                /* ignore */\n            }\n        }\n        return res.data;\n    }\n    catch (e) {\n        if (e.response && e.response.status !== 200) {\n            e.message = `Unsuccessful response status code. ${e.message}`;\n        }\n        throw e;\n    }\n}\nasync function fastFailMetadataRequest(options) {\n    const secondaryOptions = {\n        ...options,\n        url: options.url.replace(getBaseUrl(), getBaseUrl(exports.SECONDARY_HOST_ADDRESS)),\n    };\n    // We race a connection between DNS/IP to metadata server. There are a couple\n    // reasons for this:\n    //\n    // 1. the DNS is slow in some GCP environments; by checking both, we might\n    //    detect the runtime environment signficantly faster.\n    // 2. we can't just check the IP, which is tarpitted and slow to respond\n    //    on a user's local machine.\n    //\n    // Additional logic has been added to make sure that we don't create an\n    // unhandled rejection in scenarios where a failure happens sometime\n    // after a success.\n    //\n    // Note, however, if a failure happens prior to a success, a rejection should\n    // occur, this is for folks running locally.\n    //\n    let responded = false;\n    const r1 = gaxios_1.request(options)\n        .then(res => {\n        responded = true;\n        return res;\n    })\n        .catch(err => {\n        if (responded) {\n            return r2;\n        }\n        else {\n            responded = true;\n            throw err;\n        }\n    });\n    const r2 = gaxios_1.request(secondaryOptions)\n        .then(res => {\n        responded = true;\n        return res;\n    })\n        .catch(err => {\n        if (responded) {\n            return r1;\n        }\n        else {\n            responded = true;\n            throw err;\n        }\n    });\n    return Promise.race([r1, r2]);\n}\n/**\n * Obtain metadata for the current GCE instance\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instance(options) {\n    return metadataAccessor('instance', options);\n}\nexports.instance = instance;\n/**\n * Obtain metadata for the current GCP Project.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction project(options) {\n    return metadataAccessor('project', options);\n}\nexports.project = project;\n/*\n * How many times should we retry detecting GCP environment.\n */\nfunction detectGCPAvailableRetries() {\n    return process.env.DETECT_GCP_RETRIES\n        ? Number(process.env.DETECT_GCP_RETRIES)\n        : 0;\n}\nlet cachedIsAvailableResponse;\n/**\n * Determine if the metadata server is currently available.\n */\nasync function isAvailable() {\n    try {\n        // If a user is instantiating several GCP libraries at the same time,\n        // this may result in multiple calls to isAvailable(), to detect the\n        // runtime environment. We use the same promise for each of these calls\n        // to reduce the network load.\n        if (cachedIsAvailableResponse === undefined) {\n            cachedIsAvailableResponse = metadataAccessor('instance', undefined, detectGCPAvailableRetries(), \n            // If the default HOST_ADDRESS has been overridden, we should not\n            // make an effort to try SECONDARY_HOST_ADDRESS (as we are likely in\n            // a non-GCP environment):\n            !(process.env.GCE_METADATA_IP || process.env.GCE_METADATA_HOST));\n        }\n        await cachedIsAvailableResponse;\n        return true;\n    }\n    catch (err) {\n        if (process.env.DEBUG_AUTH) {\n            console.info(err);\n        }\n        if (err.type === 'request-timeout') {\n            // If running in a GCP environment, metadata endpoint should return\n            // within ms.\n            return false;\n        }\n        if (err.response && err.response.status === 404) {\n            return false;\n        }\n        else {\n            if (!(err.response && err.response.status === 404) &&\n                // A warning is emitted if we see an unexpected err.code, or err.code\n                // is not populated:\n                (!err.code ||\n                    ![\n                        'EHOSTDOWN',\n                        'EHOSTUNREACH',\n                        'ENETUNREACH',\n                        'ENOENT',\n                        'ENOTFOUND',\n                        'ECONNREFUSED',\n                    ].includes(err.code))) {\n                let code = 'UNKNOWN';\n                if (err.code)\n                    code = err.code;\n                process.emitWarning(`received unexpected error = ${err.message} code = ${code}`, 'MetadataLookupWarning');\n            }\n            // Failure to resolve the metadata service means that it is not available.\n            return false;\n        }\n    }\n}\nexports.isAvailable = isAvailable;\n/**\n * reset the memoized isAvailable() lookup.\n */\nfunction resetIsAvailableCache() {\n    cachedIsAvailableResponse = undefined;\n}\nexports.resetIsAvailableCache = resetIsAvailableCache;\n/**\n * Obtain the timeout for requests to the metadata server.\n */\nfunction requestTimeout() {\n    // In testing, we were able to reproduce behavior similar to\n    // https://github.com/googleapis/google-auth-library-nodejs/issues/798\n    // by making many concurrent network requests. Requests do not actually fail,\n    // rather they take significantly longer to complete (and we hit our\n    // default 3000ms timeout).\n    //\n    // This logic detects a GCF environment, using the documented environment\n    // variables K_SERVICE and FUNCTION_NAME:\n    // https://cloud.google.com/functions/docs/env-var and, in a GCF environment\n    // eliminates timeouts (by setting the value to 0 to disable).\n    return process.env.K_SERVICE || process.env.FUNCTION_NAME ? 0 : 3000;\n}\nexports.requestTimeout = requestTimeout;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GaxiosError = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass GaxiosError extends Error {\n    constructor(message, options, response) {\n        super(message);\n        this.response = response;\n        this.config = options;\n        this.code = response.status.toString();\n    }\n}\nexports.GaxiosError = GaxiosError;\n//# sourceMappingURL=common.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n    return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n    return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n    return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n    return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n    header = header.toLowerCase();\n    for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n        if (header === key.toLowerCase()) {\n            return options.headers[key];\n        }\n    }\n    return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n    const proxy = process.env.HTTPS_PROXY ||\n        process.env.https_proxy ||\n        process.env.HTTP_PROXY ||\n        process.env.http_proxy;\n    if (proxy) {\n        HttpsProxyAgent = require('https-proxy-agent');\n    }\n    return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n    var _a;\n    const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n    if (!noProxyEnv) {\n        return false;\n    }\n    const noProxyUrls = noProxyEnv.split(',');\n    const parsedURL = new url_1.URL(url);\n    return !!noProxyUrls.find(url => {\n        if (url.startsWith('*.') || url.startsWith('.')) {\n            url = url.replace('*', '');\n            return parsedURL.hostname.endsWith(url);\n        }\n        else {\n            return url === parsedURL.origin || url === parsedURL.hostname;\n        }\n    });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n    // If there is a match between the no_proxy env variables and the url, then do not proxy\n    if (skipProxy(url)) {\n        return undefined;\n        // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n    }\n    else {\n        return loadProxy();\n    }\n}\nclass Gaxios {\n    /**\n     * The Gaxios class is responsible for making HTTP requests.\n     * @param defaults The default set of options to be used for this instance.\n     */\n    constructor(defaults) {\n        this.agentCache = new Map();\n        this.defaults = defaults || {};\n    }\n    /**\n     * Perform an HTTP request with the given options.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async request(opts = {}) {\n        opts = this.validateOpts(opts);\n        return this._request(opts);\n    }\n    async _defaultAdapter(opts) {\n        const fetchImpl = opts.fetchImplementation || fetch;\n        const res = (await fetchImpl(opts.url, opts));\n        const data = await this.getResponseData(opts, res);\n        return this.translateResponse(opts, res, data);\n    }\n    /**\n     * Internal, retryable version of the `request` method.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async _request(opts = {}) {\n        try {\n            let translatedResponse;\n            if (opts.adapter) {\n                translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n            }\n            else {\n                translatedResponse = await this._defaultAdapter(opts);\n            }\n            if (!opts.validateStatus(translatedResponse.status)) {\n                throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n            }\n            return translatedResponse;\n        }\n        catch (e) {\n            const err = e;\n            err.config = opts;\n            const { shouldRetry, config } = await retry_1.getRetryConfig(e);\n            if (shouldRetry && config) {\n                err.config.retryConfig.currentRetryAttempt =\n                    config.retryConfig.currentRetryAttempt;\n                return this._request(err.config);\n            }\n            throw err;\n        }\n    }\n    async getResponseData(opts, res) {\n        switch (opts.responseType) {\n            case 'stream':\n                return res.body;\n            case 'json': {\n                let data = await res.text();\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (_a) {\n                    // continue\n                }\n                return data;\n            }\n            case 'arraybuffer':\n                return res.arrayBuffer();\n            case 'blob':\n                return res.blob();\n            default:\n                return res.text();\n        }\n    }\n    /**\n     * Validates the options, and merges them with defaults.\n     * @param opts The original options passed from the client.\n     */\n    validateOpts(options) {\n        const opts = extend_1.default(true, {}, this.defaults, options);\n        if (!opts.url) {\n            throw new Error('URL is required.');\n        }\n        // baseUrl has been deprecated, remove in 2.0\n        const baseUrl = opts.baseUrl || opts.baseURL;\n        if (baseUrl) {\n            opts.url = baseUrl + opts.url;\n        }\n        opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n        if (opts.params && Object.keys(opts.params).length > 0) {\n            let additionalQueryParams = opts.paramsSerializer(opts.params);\n            if (additionalQueryParams.startsWith('?')) {\n                additionalQueryParams = additionalQueryParams.slice(1);\n            }\n            const prefix = opts.url.includes('?') ? '&' : '?';\n            opts.url = opts.url + prefix + additionalQueryParams;\n        }\n        if (typeof options.maxContentLength === 'number') {\n            opts.size = options.maxContentLength;\n        }\n        if (typeof options.maxRedirects === 'number') {\n            opts.follow = options.maxRedirects;\n        }\n        opts.headers = opts.headers || {};\n        if (opts.data) {\n            if (is_stream_1.default.readable(opts.data)) {\n                opts.body = opts.data;\n            }\n            else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n                // Do not attempt to JSON.stringify() a Buffer:\n                opts.body = opts.data;\n                if (!hasHeader(opts, 'Content-Type')) {\n                    opts.headers['Content-Type'] = 'application/json';\n                }\n            }\n            else if (typeof opts.data === 'object') {\n                // If www-form-urlencoded content type has been set, but data is\n                // provided as an object, serialize the content using querystring:\n                if (getHeader(opts, 'content-type') ===\n                    'application/x-www-form-urlencoded') {\n                    opts.body = opts.paramsSerializer(opts.data);\n                }\n                else {\n                    if (!hasHeader(opts, 'Content-Type')) {\n                        opts.headers['Content-Type'] = 'application/json';\n                    }\n                    opts.body = JSON.stringify(opts.data);\n                }\n            }\n            else {\n                opts.body = opts.data;\n            }\n        }\n        opts.validateStatus = opts.validateStatus || this.validateStatus;\n        opts.responseType = opts.responseType || 'json';\n        if (!opts.headers['Accept'] && opts.responseType === 'json') {\n            opts.headers['Accept'] = 'application/json';\n        }\n        opts.method = opts.method || 'GET';\n        const proxy = getProxy(opts.url);\n        if (proxy) {\n            if (this.agentCache.has(proxy)) {\n                opts.agent = this.agentCache.get(proxy);\n            }\n            else {\n                // Proxy is being used in conjunction with mTLS.\n                if (opts.cert && opts.key) {\n                    const parsedURL = new url_1.URL(proxy);\n                    opts.agent = new HttpsProxyAgent({\n                        port: parsedURL.port,\n                        host: parsedURL.host,\n                        protocol: parsedURL.protocol,\n                        cert: opts.cert,\n                        key: opts.key,\n                    });\n                }\n                else {\n                    opts.agent = new HttpsProxyAgent(proxy);\n                }\n                this.agentCache.set(proxy, opts.agent);\n            }\n        }\n        else if (opts.cert && opts.key) {\n            // Configure client for mTLS:\n            if (this.agentCache.has(opts.key)) {\n                opts.agent = this.agentCache.get(opts.key);\n            }\n            else {\n                opts.agent = new https_1.Agent({\n                    cert: opts.cert,\n                    key: opts.key,\n                });\n                this.agentCache.set(opts.key, opts.agent);\n            }\n        }\n        return opts;\n    }\n    /**\n     * By default, throw for any non-2xx status code\n     * @param status status code from the HTTP response\n     */\n    validateStatus(status) {\n        return status >= 200 && status < 300;\n    }\n    /**\n     * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n     * @param params key value pars to encode\n     */\n    paramsSerializer(params) {\n        return querystring_1.default.stringify(params);\n    }\n    translateResponse(opts, res, data) {\n        // headers need to be converted from a map to an obj\n        const headers = {};\n        res.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            config: opts,\n            data: data,\n            headers,\n            status: res.status,\n            statusText: res.statusText,\n            // XMLHttpRequestLike\n            request: {\n                responseURL: res.url,\n            },\n        };\n    }\n}\nexports.Gaxios = Gaxios;\n//# sourceMappingURL=gaxios.js.map","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","(function(l){function m(){}function k(a,c){a=void 0===a?\"utf-8\":a;c=void 0===c?{fatal:!1}:c;if(-1===r.indexOf(a.toLowerCase()))throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\"+a+\"') is invalid.\");if(c.fatal)throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");}function t(a){return Buffer.from(a.buffer,a.byteOffset,a.byteLength).toString(\"utf-8\")}function u(a){var c=URL.createObjectURL(new Blob([a],{type:\"text/plain;charset=UTF-8\"}));\ntry{var f=new XMLHttpRequest;f.open(\"GET\",c,!1);f.send();return f.responseText}catch(e){return q(a)}finally{URL.revokeObjectURL(c)}}function q(a){for(var c=0,f=Math.min(65536,a.length+1),e=new Uint16Array(f),h=[],d=0;;){var b=c<a.length;if(!b||d>=f-1){h.push(String.fromCharCode.apply(null,e.subarray(0,d)));if(!b)return h.join(\"\");a=a.subarray(c);d=c=0}b=a[c++];if(0===(b&128))e[d++]=b;else if(192===(b&224)){var g=a[c++]&63;e[d++]=(b&31)<<6|g}else if(224===(b&240)){g=a[c++]&63;var n=a[c++]&63;e[d++]=\n(b&31)<<12|g<<6|n}else if(240===(b&248)){g=a[c++]&63;n=a[c++]&63;var v=a[c++]&63;b=(b&7)<<18|g<<12|n<<6|v;65535<b&&(b-=65536,e[d++]=b>>>10&1023|55296,b=56320|b&1023);e[d++]=b}}}if(l.TextEncoder&&l.TextDecoder)return!1;var r=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"];Object.defineProperty(m.prototype,\"encoding\",{value:\"utf-8\"});m.prototype.encode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to encode: the 'stream' option is unsupported.\");c=0;for(var f=a.length,e=0,h=Math.max(32,\nf+(f>>>1)+7),d=new Uint8Array(h>>>3<<3);c<f;){var b=a.charCodeAt(c++);if(55296<=b&&56319>=b){if(c<f){var g=a.charCodeAt(c);56320===(g&64512)&&(++c,b=((b&1023)<<10)+(g&1023)+65536)}if(55296<=b&&56319>=b)continue}e+4>d.length&&(h+=8,h*=1+c/a.length*2,h=h>>>3<<3,g=new Uint8Array(h),g.set(d),d=g);if(0===(b&4294967168))d[e++]=b;else{if(0===(b&4294965248))d[e++]=b>>>6&31|192;else if(0===(b&4294901760))d[e++]=b>>>12&15|224,d[e++]=b>>>6&63|128;else if(0===(b&4292870144))d[e++]=b>>>18&7|240,d[e++]=b>>>12&\n63|128,d[e++]=b>>>6&63|128;else continue;d[e++]=b&63|128}}return d.slice?d.slice(0,e):d.subarray(0,e)};Object.defineProperty(k.prototype,\"encoding\",{value:\"utf-8\"});Object.defineProperty(k.prototype,\"fatal\",{value:!1});Object.defineProperty(k.prototype,\"ignoreBOM\",{value:!1});var p=q;\"function\"===typeof Buffer&&Buffer.from?p=t:\"function\"===typeof Blob&&\"function\"===typeof URL&&\"function\"===typeof URL.createObjectURL&&(p=u);k.prototype.decode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\na=a instanceof Uint8Array?a:a.buffer instanceof ArrayBuffer?new Uint8Array(a.buffer):new Uint8Array(a);return p(a)};l.TextEncoder=m;l.TextDecoder=k})(\"undefined\"!==typeof window?window:\"undefined\"!==typeof global?global:this);\n"],"sourceRoot":""}