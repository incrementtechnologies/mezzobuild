{"version":3,"sources":["webpack:///./node_modules/gaxios/build/src/index.js","webpack:///./node_modules/google-auth-library/build/src/transporters.js","webpack:///./node_modules/google-auth-library/build/src/auth/refreshclient.js","webpack:///./node_modules/google-auth-library/build/src/auth/googleauth.js","webpack:///./node_modules/google-auth-library/build/src/auth/loginticket.js","webpack:///./node_modules/google-auth-library/build/src/auth/envDetect.js","webpack:///./node_modules/google-spreadsheet/lib/GoogleSpreadsheetCell.js","webpack:///./node_modules/gaxios/build/src/retry.js","webpack:///./node_modules/google-auth-library/build/src/index.js","webpack:///./node_modules/gcp-metadata/build/src/index.js","webpack:///./node_modules/google-auth-library/build/src/auth/oauth2client.js","webpack:///./node_modules/google-spreadsheet/lib/utils.js","webpack:///./node_modules/google-auth-library/build/src/auth/authclient.js","webpack:///./node_modules/google-auth-library/build/src/crypto/crypto.js","webpack:///./node_modules/gaxios/build/src/common.js","webpack:///./node_modules/google-auth-library/build/src/options.js","webpack:///./node_modules/google-auth-library/build/src/auth/iam.js","webpack:///./node_modules/google-spreadsheet/lib/GoogleSpreadsheetRow.js","webpack:///./node_modules/google-auth-library/build/src/auth/idtokenclient.js","webpack:///./node_modules/google-spreadsheet/lib/GoogleSpreadsheetWorksheet.js","webpack:///./node_modules/google-auth-library/build/src/crypto/browser/crypto.js","webpack:///./node_modules/gaxios/build/src/gaxios.js","webpack:///./node_modules/google-p12-pem/build/src/index.js","webpack:///./node_modules/google-spreadsheet/lib/errors.js","webpack:///./node_modules/google-auth-library/build/src/auth/jwtaccess.js","webpack:///./node_modules/google-spreadsheet/index.js","webpack:///./node_modules/google-auth-library/build/src/auth/jwtclient.js","webpack:///./node_modules/google-auth-library/build/src/auth/computeclient.js","webpack:///./node_modules/google-spreadsheet/lib/GoogleSpreadsheet.js","webpack:///./node_modules/google-auth-library/build/src/crypto/node/crypto.js","webpack:///./node_modules/gtoken/build/src/index.js","webpack:///./node_modules/fast-text-encoding/text.min.js"],"names":["Object","defineProperty","exports","value","request","instance","Gaxios","gaxios_1","enumerable","get","common_1","async","opts","GaxiosError","DefaultTransporter","options_1","pkg","PRODUCT_NAME","headers","window","uaValue","includes","USER_AGENT","authVersion","version","nodeVersion","process","replace","callback","this","configure","validate","e","catch","processError","then","r","res","response","err","body","data","error","status","message","code","toString","Array","isArray","errors","map","err2","join","UserRefreshClient","oauth2client_1","OAuth2Client","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","forceRefreshOnFailure","clientId","super","_refreshToken","credentials","refresh_token","refreshTokenNoCache","json","Error","type","client_id","client_secret","_clientId","_clientSecret","quotaProjectId","quota_project_id","inputStream","fromStreamAsync","Promise","resolve","reject","s","setEncoding","on","chunk","JSON","parse","fromJSON","GoogleAuth","CLOUD_SDK_CLIENT_ID","child_process_1","fs","gcpMetadata","os","path","crypto_1","transporters_1","computeclient_1","idtokenclient_1","envDetect_1","jwtclient_1","refreshclient_1","checkIsGCE","undefined","jsonContent","cachedCredential","_cachedProjectId","projectId","keyFilename","keyFile","scopes","clientOptions","getProjectIdAsync","_getDefaultProjectIdPromise","getProductionProjectId","getFileProjectId","getDefaultServiceProjectId","getGCEProjectId","optionsOrCallback","options","getApplicationDefaultAsync","credential","isGCE","_tryGetApplicationCredentialsFromEnvironmentVariable","JWT","defaultScopes","getProjectId","_tryGetApplicationCredentialsFromWellKnownFile","_checkIsGCE","Compute","isAvailable","credentialsPath","length","_getApplicationCredentialsFromFilePath","location","_isWindows","home","existsSync","client","filePath","realpathSync","lstatSync","isFile","readStream","createReadStream","fromStream","_cacheClientFromJSON","apiKey","fromAPIKey","sys","platform","substring","toLowerCase","exec","stdout","configuration","properties","core","project","creds","getClient","getCredentialsAsync","client_email","private_key","property","params","recursive","default","email","stream","targetAudience","IdTokenClient","idTokenProvider","getAccessToken","token","url","getRequestHeaders","uri","assign","getEnv","crypto","createCrypto","key","sign","getCredentials","method","payload","encodeBase64StringUtf8","signedBlob","LoginTicket","env","pay","envelope","getPayload","sub","getEnvelope","clear","GCPEnv","envPromise","getEnvMemoized","NONE","isAppEngine","APP_ENGINE","isCloudFunction","CLOUD_FUNCTIONS","isComputeEngine","isKubernetesEngine","KUBERNETES_ENGINE","COMPUTE_ENGINE","GAE_SERVICE","GAE_MODULE_NAME","FUNCTION_NAME","FUNCTION_TARGET","_","columnToLetter","GoogleSpreadsheetFormulaError","GoogleSpreadsheetCell","parentSheet","rowIndex","columnIndex","cellData","_sheet","_row","_column","_updateRawData","newData","_rawData","_draftData","_error","effectiveValue","errorValue","a1Column","a1Row","values","newValue","isBoolean","valueType","isString","substr","isFinite","isNil","keys","formattedValue","newVal","hyperlink","val","note","userEnteredFormat","effectiveFormat","param","freeze","isEqual","unset","set","clearFormat","_getFormatParam","_setFormatParam","saveUpdatedCells","isValueUpdated","isNoteUpdated","isFormatUpdated","isFormatCleared","some","format","updateCells","rows","userEnteredValue","fields","pickBy","start","sheetId","module","getRetryConfig","_a","config","getConfig","retry","shouldRetry","currentRetryAttempt","httpMethodsToRetry","noResponseRetries","retryRanges","statusCodesToRetry","retryConfig","shouldRetryFn","shouldRetryRequest","retryDelay","delay","Math","pow","backoff","setTimeout","onRetryAttempt","name","indexOf","toUpperCase","isInRange","min","max","auth","googleauth_1","iam_1","IAMAuth","jwtaccess_1","JWTAccess","CodeChallengeMethod","loginticket_1","requestTimeout","resetIsAvailableCache","HEADERS","HEADER_VALUE","HEADER_NAME","SECONDARY_HOST_ADDRESS","HOST_ADDRESS","BASE_PATH","jsonBigint","getBaseUrl","baseUrl","GCE_METADATA_IP","GCE_METADATA_HOST","test","URL","href","forEach","metadataAccessor","fastFail","requestMethod","fastFailMetadataRequest","responseType","timeout","secondaryOptions","responded","r1","r2","race","detectGCPAvailableRetries","DETECT_GCP_RETRIES","Number","cachedIsAvailableResponse","DEBUG_AUTH","console","info","emitWarning","K_SERVICE","CertificateFormat","querystring","formatEcdsa","authclient_1","AuthClient","redirectUri","certificateCache","certificateExpiry","certificateCacheFormat","PEM","refreshTokenPromises","Map","code_challenge_method","code_challenge","response_type","redirect_uri","scope","rootUrl","GOOGLE_OAUTH2_AUTH_BASE_URL_","stringify","randomString","randomBytesBase64","codeVerifier","unencodedCodeChallenge","sha256DigestBase64","codeChallenge","split","codeOrOptions","getTokenAsync","tokens","GOOGLE_OAUTH2_TOKEN_URL_","grant_type","code_verifier","transporter","expires_in","expiry_date","Date","getTime","emit","has","p","delete","refreshAccessTokenAsync","getAccessTokenAsync","shouldRefresh","access_token","isTokenExpiring","getRequestMetadataAsync","thisCreds","token_type","Authorization","addSharedMetadataHeaders","parameters","GOOGLE_OAUTH2_REVOKE_URL_","getRevokeTokenUrl","revokeCredentialsAsync","revokeToken","requestAsync","statusCode","mayRequireRefresh","isReadableStream","Readable","isAuthErr","verifyIdTokenAsync","idToken","getFederatedSignonCertsAsync","login","verifySignedJwtWithCertsAsync","certs","audience","ISSUERS_","maxExpiry","accessToken","GOOGLE_TOKEN_INFO_URL","nowTime","hasBrowserCrypto","JWK","GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_","GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_","cacheControl","cacheAge","pattern","RegExp","regexResult","certificates","kid","now","getIapPublicKeysAsync","pubkeys","GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_","jwt","requiredAudience","issuers","MAX_TOKEN_LIFETIME_SECS_","segments","signed","signature","decodeBase64StringUtf8","prototype","hasOwnProperty","call","cert","alg","joseToDer","verified","verify","iat","exp","isNaN","earliest","CLOCK_SKEW_SECS_","latest","iss","aud","audVerified","constructor","expiryDate","getFieldMask","obj","column","temp","letter","col","String","fromCharCode","letterToColumn","i","charCodeAt","events_1","EventEmitter","arguments","crypto_2","BrowserCrypto","NodeCrypto","subtle","vpairs","invalid","expected","pair","selector","GoogleSpreadsheetRow","rowNumber","_rowNumber","headerValues","propName","a1SheetName","_deleted","_spreadsheet","axios","encodeURIComponent","a1Range","valueInputOption","raw","includeValuesInResponse","range","majorDimension","updatedData","result","_makeSingleUpdateRequest","startRowIndex","endRowIndex","shiftDimension","id_token","fetchIdToken","getIdTokenExpiryDate","payloadB64","Buffer","from","checkForDuplicateHeaders","checkForDupes","groupBy","each","grouped","header","GoogleSpreadsheetWorksheet","parentSpreadsheet","_headerRowIndex","_rawProperties","_cells","_rowMetadata","_columnMetadata","_fillCellData","requestType","requestParams","dataOnly","dataRanges","startRow","startColumn","numRows","rowMetadata","numColumns","columnMetadata","actualRow","j","actualColumn","_ensureInfoLoaded","_getProp","_setProp","gridProperties","rowCount","columnCount","title","allCells","flatten","compact","nonEmpty","filter","c","loaded","total","a1Address","match","parseInt","getCell","sheetFilters","loadCells","filtersArray","startsWith","isObject","cellsToSave","_isDirty","saveCells","cellsToUpdate","requests","cell","_getUpdateRequest","responseRanges","_makeBatchUpdateRequest","headerRowIndex","getCellsInRange","lastColumnLetter","trim","trimmedHeaderValues","h","encodedA1SheetName","times","loadHeaderRow","rowsAsArrays","row","rowAsArray","push","insertDataOption","insert","updatedRange","updates","rowValues","addRows","offset","limit","firstRow","lastRow","lastColumn","rawRows","rowNum","end","post","updateProperties","updateGridProperties","columnsOrRows","bounds","dimension","startIndex","endIndex","mergeType","sourceSheetId","index","insertSheetIndex","id","newSheetId","newSheetName","sheetsById","inheritFromBefore","isInteger","deleteSheet","destinationSpreadsheetId","resetLocalCache","returnStreamInsteadOfBuffer","_downloadAs","base64js","TextEncoder","str","inputBuffer","encode","outputBuffer","digest","fromByteArray","Uint8Array","count","array","getRandomValues","base64","pubkey","algo","hash","dataArray","signatureArray","toByteArray","padBase64","cryptoKey","importKey","privateKey","uint8array","TextDecoder","decode","text","__importDefault","mod","__esModule","extend_1","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","retry_1","fetch","hasFetch","hasWindow","hasBuffer","hasHeader","getHeader","HttpsProxyAgent","loadProxy","proxy","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","skipProxy","noProxyEnv","NO_PROXY","no_proxy","noProxyUrls","parsedURL","find","hostname","endsWith","origin","getProxy","defaults","agentCache","validateOpts","_request","fetchImpl","fetchImplementation","getResponseData","translateResponse","translatedResponse","adapter","_defaultAdapter","bind","validateStatus","arrayBuffer","blob","baseURL","paramsSerializer","additionalQueryParams","slice","prefix","maxContentLength","size","maxRedirects","follow","isFormData","FormData","readable","isBuffer","agent","port","host","protocol","Agent","statusText","responseURL","getPem","forge","util_1","readFile","promisify","filename","getPemAsync","pem","encoding","keyp12","convertToPem","p12base64","p12Der","util","decode64","p12Asn1","asn1","fromDer","p12","pkcs12","pkcs12FromAsn1","bags","getBags","friendlyName","pki","privateKeyToPem","errorInfo","jws","LRU","DEFAULT_HEADER","typ","keyId","cache","maxAge","additionalClaims","cachedToken","expiration","floor","getExpirationTime","defaultClaims","claim","signedJWT","secret","private_key_id","project_id","GoogleSpreadsheet","gtoken_1","optionsOrEmail","subject","hasUserScopes","hasAnyScopes","target_audience","access","gtoken","GoogleToken","getToken","forceRefresh","authorizeAsync","createGToken","expiresAt","clientEmail","arrify","serviceAccountEmail","tokenPath","instanceOptions","wrapError","idTokenPath","Axios","GOOGLE_AUTH_SCOPES","AUTH_MODES","API_KEY","RAW_ACCESS_TOKEN","OAUTH","spreadsheetId","authMode","_rawSheets","_spreadsheetUrl","create","isParamTypeObject","isParamTypeArray","interceptors","use","_setAxiosRequestAuth","_handleAxiosResponse","_handleAxiosErrors","sheets","_updateOrCreateSheet","oAuth2Client","impersonateAs","jwtClient","renewJwtAuth","authorize","includeSpreadsheetInResponse","_updateRawProperties","updatedSpreadsheet","replies","responseIncludeGridData","newProperties","includeCells","includeGridData","spreadsheetUrl","loadInfo","sortBy","keyBy","omit","newSheet","setHeaderRow","addSheet","namedRangeId","filters","readOnlyMode","dataFilters","gridRange","ranges","sheet","fileType","worksheetId","exportUrl","gid","createHash","update","randomBytes","verifier","createVerify","signer","createSign","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","rawToken","cb","t","ext","extname","inFlightRequest","getTokenAsyncInner","ensureEmail","requestToken","revokeTokenAsync","assertion","tokenExpires","desc","error_description","B","f","buffer","byteOffset","byteLength","w","n","Uint16Array","o","subarray","m","apply","a","d","l","R","F","u","concat","x","A","v","U","Blob","createObjectURL","XMLHttpRequest","open","send","responseText","revokeObjectURL","O","S","T","y","E","g","fatal","isEncoding","RangeError","ignoreBOM","ArrayBuffer","global"],"mappings":"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","file":"js/chunk-vendors~203e0718.9c78dbb7.js","sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.request = exports.instance = exports.Gaxios = void 0;\nconst gaxios_1 = require(\"./gaxios\");\nObject.defineProperty(exports, \"Gaxios\", { enumerable: true, get: function () { return gaxios_1.Gaxios; } });\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"GaxiosError\", { enumerable: true, get: function () { return common_1.GaxiosError; } });\n/**\n * The default instance used when the `request` method is directly\n * invoked.\n */\nexports.instance = new gaxios_1.Gaxios();\n/**\n * Make an HTTP request using the given options.\n * @param opts Options for the request\n */\nasync function request(opts) {\n    return exports.instance.request(opts);\n}\nexports.request = request;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultTransporter = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst options_1 = require(\"./options\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\nconst PRODUCT_NAME = 'google-api-nodejs-client';\nclass DefaultTransporter {\n    /**\n     * Configures request options before making a request.\n     * @param opts GaxiosOptions options.\n     * @return Configured options.\n     */\n    configure(opts = {}) {\n        opts.headers = opts.headers || {};\n        if (typeof window === 'undefined') {\n            // set transporter user agent if not in browser\n            const uaValue = opts.headers['User-Agent'];\n            if (!uaValue) {\n                opts.headers['User-Agent'] = DefaultTransporter.USER_AGENT;\n            }\n            else if (!uaValue.includes(`${PRODUCT_NAME}/`)) {\n                opts.headers['User-Agent'] = `${uaValue} ${DefaultTransporter.USER_AGENT}`;\n            }\n            // track google-auth-library-nodejs version:\n            const authVersion = `auth/${pkg.version}`;\n            if (opts.headers['x-goog-api-client'] &&\n                !opts.headers['x-goog-api-client'].includes(authVersion)) {\n                opts.headers['x-goog-api-client'] = `${opts.headers['x-goog-api-client']} ${authVersion}`;\n            }\n            else if (!opts.headers['x-goog-api-client']) {\n                const nodeVersion = process.version.replace(/^v/, '');\n                opts.headers['x-goog-api-client'] = `gl-node/${nodeVersion} ${authVersion}`;\n            }\n        }\n        return opts;\n    }\n    request(opts, callback) {\n        // ensure the user isn't passing in request-style options\n        opts = this.configure(opts);\n        try {\n            options_1.validate(opts);\n        }\n        catch (e) {\n            if (callback) {\n                return callback(e);\n            }\n            else {\n                throw e;\n            }\n        }\n        if (callback) {\n            gaxios_1.request(opts).then(r => {\n                callback(null, r);\n            }, e => {\n                callback(this.processError(e));\n            });\n        }\n        else {\n            return gaxios_1.request(opts).catch(e => {\n                throw this.processError(e);\n            });\n        }\n    }\n    /**\n     * Changes the error to include details from the body.\n     */\n    processError(e) {\n        const res = e.response;\n        const err = e;\n        const body = res ? res.data : null;\n        if (res && body && body.error && res.status !== 200) {\n            if (typeof body.error === 'string') {\n                err.message = body.error;\n                err.code = res.status.toString();\n            }\n            else if (Array.isArray(body.error.errors)) {\n                err.message = body.error.errors\n                    .map((err2) => err2.message)\n                    .join('\\n');\n                err.code = body.error.code;\n                err.errors = body.error.errors;\n            }\n            else {\n                err.message = body.error.message;\n                err.code = body.error.code || res.status;\n            }\n        }\n        else if (res && res.status >= 400) {\n            // Consider all 4xx and 5xx responses errors.\n            err.message = body;\n            err.code = res.status.toString();\n        }\n        return err;\n    }\n}\nexports.DefaultTransporter = DefaultTransporter;\n/**\n * Default user agent.\n */\nDefaultTransporter.USER_AGENT = `${PRODUCT_NAME}/${pkg.version}`;\n//# sourceMappingURL=transporters.js.map","\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRefreshClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n                forceRefreshOnFailure,\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this._refreshToken = opts.refreshToken;\n        this.credentials.refresh_token = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.CLOUD_SDK_CLIENT_ID = void 0;\nconst child_process_1 = require(\"child_process\");\nconst fs = require(\"fs\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst transporters_1 = require(\"../transporters\");\nconst computeclient_1 = require(\"./computeclient\");\nconst idtokenclient_1 = require(\"./idtokenclient\");\nconst envDetect_1 = require(\"./envDetect\");\nconst jwtclient_1 = require(\"./jwtclient\");\nconst refreshclient_1 = require(\"./refreshclient\");\nexports.CLOUD_SDK_CLIENT_ID = '764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com';\nclass GoogleAuth {\n    constructor(opts) {\n        /**\n         * Caches a value indicating whether the auth layer is running on Google\n         * Compute Engine.\n         * @private\n         */\n        this.checkIsGCE = undefined;\n        // To save the contents of the JSON credential file\n        this.jsonContent = null;\n        this.cachedCredential = null;\n        opts = opts || {};\n        this._cachedProjectId = opts.projectId || null;\n        this.keyFilename = opts.keyFilename || opts.keyFile;\n        this.scopes = opts.scopes;\n        this.jsonContent = opts.credentials || null;\n        this.clientOptions = opts.clientOptions;\n    }\n    // Note:  this properly is only public to satisify unit tests.\n    // https://github.com/Microsoft/TypeScript/issues/5228\n    get isGCE() {\n        return this.checkIsGCE;\n    }\n    getProjectId(callback) {\n        if (callback) {\n            this.getProjectIdAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getProjectIdAsync();\n        }\n    }\n    getProjectIdAsync() {\n        if (this._cachedProjectId) {\n            return Promise.resolve(this._cachedProjectId);\n        }\n        // In implicit case, supports three environments. In order of precedence,\n        // the implicit environments are:\n        // - GCLOUD_PROJECT or GOOGLE_CLOUD_PROJECT environment variable\n        // - GOOGLE_APPLICATION_CREDENTIALS JSON file\n        // - Cloud SDK: `gcloud config config-helper --format json`\n        // - GCE project ID from metadata server)\n        if (!this._getDefaultProjectIdPromise) {\n            // TODO: refactor the below code so that it doesn't mix and match\n            // promises and async/await.\n            this._getDefaultProjectIdPromise = new Promise(\n            // eslint-disable-next-line no-async-promise-executor\n            async (resolve, reject) => {\n                try {\n                    const projectId = this.getProductionProjectId() ||\n                        (await this.getFileProjectId()) ||\n                        (await this.getDefaultServiceProjectId()) ||\n                        (await this.getGCEProjectId());\n                    this._cachedProjectId = projectId;\n                    if (!projectId) {\n                        throw new Error('Unable to detect a Project Id in the current environment. \\n' +\n                            'To learn more about authentication and Google APIs, visit: \\n' +\n                            'https://cloud.google.com/docs/authentication/getting-started');\n                    }\n                    resolve(projectId);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        }\n        return this._getDefaultProjectIdPromise;\n    }\n    getApplicationDefault(optionsOrCallback = {}, callback) {\n        let options;\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.getApplicationDefaultAsync(options).then(r => callback(null, r.credential, r.projectId), callback);\n        }\n        else {\n            return this.getApplicationDefaultAsync(options);\n        }\n    }\n    async getApplicationDefaultAsync(options = {}) {\n        // If we've already got a cached credential, just return it.\n        if (this.cachedCredential) {\n            return {\n                credential: this.cachedCredential,\n                projectId: await this.getProjectIdAsync(),\n            };\n        }\n        let credential;\n        let projectId;\n        // Check for the existence of a local environment variable pointing to the\n        // location of the credential file. This is typically used in local\n        // developer scenarios.\n        credential = await this._tryGetApplicationCredentialsFromEnvironmentVariable(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.defaultScopes = this.defaultScopes;\n                credential.scopes = this.scopes;\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Look in the well-known credential file location.\n        credential = await this._tryGetApplicationCredentialsFromWellKnownFile(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.defaultScopes = this.defaultScopes;\n                credential.scopes = this.scopes;\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Determine if we're running on GCE.\n        let isGCE;\n        try {\n            isGCE = await this._checkIsGCE();\n        }\n        catch (e) {\n            e.message = `Unexpected error determining execution environment: ${e.message}`;\n            throw e;\n        }\n        if (!isGCE) {\n            // We failed to find the default credentials. Bail out with an error.\n            throw new Error('Could not load the default credentials. Browse to https://cloud.google.com/docs/authentication/getting-started for more information.');\n        }\n        // For GCE, just return a default ComputeClient. It will take care of\n        // the rest.\n        options.scopes = this.scopes || this.defaultScopes;\n        this.cachedCredential = new computeclient_1.Compute(options);\n        projectId = await this.getProjectId();\n        return { projectId, credential: this.cachedCredential };\n    }\n    /**\n     * Determines whether the auth layer is running on Google Compute Engine.\n     * @returns A promise that resolves with the boolean.\n     * @api private\n     */\n    async _checkIsGCE() {\n        if (this.checkIsGCE === undefined) {\n            this.checkIsGCE = await gcpMetadata.isAvailable();\n        }\n        return this.checkIsGCE;\n    }\n    /**\n     * Attempts to load default credentials from the environment variable path..\n     * @returns Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromEnvironmentVariable(options) {\n        const credentialsPath = process.env['GOOGLE_APPLICATION_CREDENTIALS'] ||\n            process.env['google_application_credentials'];\n        if (!credentialsPath || credentialsPath.length === 0) {\n            return null;\n        }\n        try {\n            return this._getApplicationCredentialsFromFilePath(credentialsPath, options);\n        }\n        catch (e) {\n            e.message = `Unable to read the credential file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable: ${e.message}`;\n            throw e;\n        }\n    }\n    /**\n     * Attempts to load default credentials from a well-known file location\n     * @return Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromWellKnownFile(options) {\n        // First, figure out the location of the file, depending upon the OS type.\n        let location = null;\n        if (this._isWindows()) {\n            // Windows\n            location = process.env['APPDATA'];\n        }\n        else {\n            // Linux or Mac\n            const home = process.env['HOME'];\n            if (home) {\n                location = path.join(home, '.config');\n            }\n        }\n        // If we found the root path, expand it.\n        if (location) {\n            location = path.join(location, 'gcloud', 'application_default_credentials.json');\n            if (!fs.existsSync(location)) {\n                location = null;\n            }\n        }\n        // The file does not exist.\n        if (!location) {\n            return null;\n        }\n        // The file seems to exist. Try to use it.\n        const client = await this._getApplicationCredentialsFromFilePath(location, options);\n        return client;\n    }\n    /**\n     * Attempts to load default credentials from a file at the given path..\n     * @param filePath The path to the file to read.\n     * @returns Promise that resolves with the OAuth2Client\n     * @api private\n     */\n    async _getApplicationCredentialsFromFilePath(filePath, options = {}) {\n        // Make sure the path looks like a string.\n        if (!filePath || filePath.length === 0) {\n            throw new Error('The file path is invalid.');\n        }\n        // Make sure there is a file at the path. lstatSync will throw if there is\n        // nothing there.\n        try {\n            // Resolve path to actual file in case of symlink. Expect a thrown error\n            // if not resolvable.\n            filePath = fs.realpathSync(filePath);\n            if (!fs.lstatSync(filePath).isFile()) {\n                throw new Error();\n            }\n        }\n        catch (err) {\n            err.message = `The file at ${filePath} does not exist, or it is not a file. ${err.message}`;\n            throw err;\n        }\n        // Now open a read stream on the file, and parse it.\n        const readStream = fs.createReadStream(filePath);\n        return this.fromStream(readStream, options);\n    }\n    /**\n     * Create a credentials instance using the given input options.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    fromJSON(json, options) {\n        let client;\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the Google auth settings.');\n        }\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            client.defaultScopes = this.defaultScopes;\n        }\n        client.fromJSON(json);\n        return client;\n    }\n    /**\n     * Return a JWT or UserRefreshClient from JavaScript object, caching both the\n     * object used to instantiate and the client.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    _cacheClientFromJSON(json, options) {\n        let client;\n        // create either a UserRefreshClient or JWT client.\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            client.defaultScopes = this.defaultScopes;\n        }\n        client.fromJSON(json);\n        // cache both raw data used to instantiate client and client itself.\n        this.jsonContent = json;\n        this.cachedCredential = client;\n        return this.cachedCredential;\n    }\n    fromStream(inputStream, optionsOrCallback = {}, callback) {\n        let options = {};\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.fromStreamAsync(inputStream, options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream, options);\n        }\n    }\n    fromStreamAsync(inputStream, options) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the Google auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    try {\n                        const data = JSON.parse(s);\n                        const r = this._cacheClientFromJSON(data, options);\n                        return resolve(r);\n                    }\n                    catch (err) {\n                        // If we failed parsing this.keyFileName, assume that it\n                        // is a PEM or p12 certificate:\n                        if (!this.keyFilename)\n                            throw err;\n                        const client = new jwtclient_1.JWT({\n                            ...this.clientOptions,\n                            keyFile: this.keyFilename,\n                        });\n                        this.cachedCredential = client;\n                        return resolve(client);\n                    }\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n    /**\n     * Create a credentials instance using the given API key string.\n     * @param apiKey The API key string\n     * @param options An optional options object.\n     * @returns A JWT loaded from the key\n     */\n    fromAPIKey(apiKey, options) {\n        options = options || {};\n        const client = new jwtclient_1.JWT(options);\n        client.fromAPIKey(apiKey);\n        return client;\n    }\n    /**\n     * Determines whether the current operating system is Windows.\n     * @api private\n     */\n    _isWindows() {\n        const sys = os.platform();\n        if (sys && sys.length >= 3) {\n            if (sys.substring(0, 3).toLowerCase() === 'win') {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Run the Google Cloud SDK command that prints the default project ID\n     */\n    async getDefaultServiceProjectId() {\n        return new Promise(resolve => {\n            child_process_1.exec('gcloud config config-helper --format json', (err, stdout) => {\n                if (!err && stdout) {\n                    try {\n                        const projectId = JSON.parse(stdout).configuration.properties.core\n                            .project;\n                        resolve(projectId);\n                        return;\n                    }\n                    catch (e) {\n                        // ignore errors\n                    }\n                }\n                resolve(null);\n            });\n        });\n    }\n    /**\n     * Loads the project id from environment variables.\n     * @api private\n     */\n    getProductionProjectId() {\n        return (process.env['GCLOUD_PROJECT'] ||\n            process.env['GOOGLE_CLOUD_PROJECT'] ||\n            process.env['gcloud_project'] ||\n            process.env['google_cloud_project']);\n    }\n    /**\n     * Loads the project id from the GOOGLE_APPLICATION_CREDENTIALS json file.\n     * @api private\n     */\n    async getFileProjectId() {\n        if (this.cachedCredential) {\n            // Try to read the project ID from the cached credentials file\n            return this.cachedCredential.projectId;\n        }\n        // Ensure the projectId is loaded from the keyFile if available.\n        if (this.keyFilename) {\n            const creds = await this.getClient();\n            if (creds && creds.projectId) {\n                return creds.projectId;\n            }\n        }\n        // Try to load a credentials file and read its project ID\n        const r = await this._tryGetApplicationCredentialsFromEnvironmentVariable();\n        if (r) {\n            return r.projectId;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Gets the Compute Engine project ID if it can be inferred.\n     */\n    async getGCEProjectId() {\n        try {\n            const r = await gcpMetadata.project('project-id');\n            return r;\n        }\n        catch (e) {\n            // Ignore any errors\n            return null;\n        }\n    }\n    getCredentials(callback) {\n        if (callback) {\n            this.getCredentialsAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getCredentialsAsync();\n        }\n    }\n    async getCredentialsAsync() {\n        await this.getClient();\n        if (this.jsonContent) {\n            const credential = {\n                client_email: this.jsonContent.client_email,\n                private_key: this.jsonContent.private_key,\n            };\n            return credential;\n        }\n        const isGCE = await this._checkIsGCE();\n        if (!isGCE) {\n            throw new Error('Unknown error.');\n        }\n        // For GCE, return the service account details from the metadata server\n        // NOTE: The trailing '/' at the end of service-accounts/ is very important!\n        // The GCF metadata server doesn't respect querystring params if this / is\n        // not included.\n        const data = await gcpMetadata.instance({\n            property: 'service-accounts/',\n            params: { recursive: 'true' },\n        });\n        if (!data || !data.default || !data.default.email) {\n            throw new Error('Failure from metadata server.');\n        }\n        return { client_email: data.default.email };\n    }\n    /**\n     * Automatically obtain a client based on the provided configuration.  If no\n     * options were passed, use Application Default Credentials.\n     */\n    async getClient(options) {\n        if (options) {\n            throw new Error('Passing options to getClient is forbidden in v5.0.0. Use new GoogleAuth(opts) instead.');\n        }\n        if (!this.cachedCredential) {\n            if (this.jsonContent) {\n                this._cacheClientFromJSON(this.jsonContent, this.clientOptions);\n            }\n            else if (this.keyFilename) {\n                const filePath = path.resolve(this.keyFilename);\n                const stream = fs.createReadStream(filePath);\n                await this.fromStreamAsync(stream, this.clientOptions);\n            }\n            else {\n                await this.getApplicationDefaultAsync(this.clientOptions);\n            }\n        }\n        return this.cachedCredential;\n    }\n    /**\n     * Creates a client which will fetch an ID token for authorization.\n     * @param targetAudience the audience for the fetched ID token.\n     * @returns IdTokenClient for making HTTP calls authenticated with ID tokens.\n     */\n    async getIdTokenClient(targetAudience) {\n        const client = await this.getClient();\n        if (!('fetchIdToken' in client)) {\n            throw new Error('Cannot fetch ID token in this environment, use GCE or set the GOOGLE_APPLICATION_CREDENTIALS environment variable to a service account credentials JSON file.');\n        }\n        return new idtokenclient_1.IdTokenClient({ targetAudience, idTokenProvider: client });\n    }\n    /**\n     * Automatically obtain application default credentials, and return\n     * an access token for making requests.\n     */\n    async getAccessToken() {\n        const client = await this.getClient();\n        return (await client.getAccessToken()).token;\n    }\n    /**\n     * Obtain the HTTP headers that will provide authorization for a given\n     * request.\n     */\n    async getRequestHeaders(url) {\n        const client = await this.getClient();\n        return client.getRequestHeaders(url);\n    }\n    /**\n     * Obtain credentials for a request, then attach the appropriate headers to\n     * the request options.\n     * @param opts Axios or Request options on which to attach the headers\n     */\n    async authorizeRequest(opts) {\n        opts = opts || {};\n        const url = opts.url || opts.uri;\n        const client = await this.getClient();\n        const headers = await client.getRequestHeaders(url);\n        opts.headers = Object.assign(opts.headers || {}, headers);\n        return opts;\n    }\n    /**\n     * Automatically obtain application default credentials, and make an\n     * HTTP request using the given options.\n     * @param opts Axios request options for the HTTP request.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(opts) {\n        const client = await this.getClient();\n        return client.request(opts);\n    }\n    /**\n     * Determine the compute environment in which the code is running.\n     */\n    getEnv() {\n        return envDetect_1.getEnv();\n    }\n    /**\n     * Sign the given data with the current private key, or go out\n     * to the IAM API to sign it.\n     * @param data The data to be signed.\n     */\n    async sign(data) {\n        const client = await this.getClient();\n        const crypto = crypto_1.createCrypto();\n        if (client instanceof jwtclient_1.JWT && client.key) {\n            const sign = await crypto.sign(client.key, data);\n            return sign;\n        }\n        const projectId = await this.getProjectId();\n        if (!projectId) {\n            throw new Error('Cannot sign data without a project ID.');\n        }\n        const creds = await this.getCredentials();\n        if (!creds.client_email) {\n            throw new Error('Cannot sign data without `client_email`.');\n        }\n        const url = `https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${creds.client_email}:signBlob`;\n        const res = await this.request({\n            method: 'POST',\n            url,\n            data: {\n                payload: crypto.encodeBase64StringUtf8(data),\n            },\n        });\n        return res.data.signedBlob;\n    }\n}\nexports.GoogleAuth = GoogleAuth;\n/**\n * Export DefaultTransporter as a static property of the class.\n */\nGoogleAuth.DefaultTransporter = transporters_1.DefaultTransporter;\n//# sourceMappingURL=googleauth.js.map","\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoginTicket = void 0;\nclass LoginTicket {\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @param {string} env Envelope of the jwt\n     * @param {TokenPayload} pay Payload of the jwt\n     * @constructor\n     */\n    constructor(env, pay) {\n        this.envelope = env;\n        this.payload = pay;\n    }\n    getEnvelope() {\n        return this.envelope;\n    }\n    getPayload() {\n        return this.payload;\n    }\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @return The user ID\n     */\n    getUserId() {\n        const payload = this.getPayload();\n        if (payload && payload.sub) {\n            return payload.sub;\n        }\n        return null;\n    }\n    /**\n     * Returns attributes from the login ticket.  This can contain\n     * various information about the user session.\n     *\n     * @return The envelope and payload\n     */\n    getAttributes() {\n        return { envelope: this.getEnvelope(), payload: this.getPayload() };\n    }\n}\nexports.LoginTicket = LoginTicket;\n//# sourceMappingURL=loginticket.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = exports.clear = exports.GCPEnv = void 0;\nconst gcpMetadata = require(\"gcp-metadata\");\nvar GCPEnv;\n(function (GCPEnv) {\n    GCPEnv[\"APP_ENGINE\"] = \"APP_ENGINE\";\n    GCPEnv[\"KUBERNETES_ENGINE\"] = \"KUBERNETES_ENGINE\";\n    GCPEnv[\"CLOUD_FUNCTIONS\"] = \"CLOUD_FUNCTIONS\";\n    GCPEnv[\"COMPUTE_ENGINE\"] = \"COMPUTE_ENGINE\";\n    GCPEnv[\"NONE\"] = \"NONE\";\n})(GCPEnv = exports.GCPEnv || (exports.GCPEnv = {}));\nlet envPromise;\nfunction clear() {\n    envPromise = undefined;\n}\nexports.clear = clear;\nasync function getEnv() {\n    if (envPromise) {\n        return envPromise;\n    }\n    envPromise = getEnvMemoized();\n    return envPromise;\n}\nexports.getEnv = getEnv;\nasync function getEnvMemoized() {\n    let env = GCPEnv.NONE;\n    if (isAppEngine()) {\n        env = GCPEnv.APP_ENGINE;\n    }\n    else if (isCloudFunction()) {\n        env = GCPEnv.CLOUD_FUNCTIONS;\n    }\n    else if (await isComputeEngine()) {\n        if (await isKubernetesEngine()) {\n            env = GCPEnv.KUBERNETES_ENGINE;\n        }\n        else {\n            env = GCPEnv.COMPUTE_ENGINE;\n        }\n    }\n    else {\n        env = GCPEnv.NONE;\n    }\n    return env;\n}\nfunction isAppEngine() {\n    return !!(process.env.GAE_SERVICE || process.env.GAE_MODULE_NAME);\n}\nfunction isCloudFunction() {\n    return !!(process.env.FUNCTION_NAME || process.env.FUNCTION_TARGET);\n}\nasync function isKubernetesEngine() {\n    try {\n        await gcpMetadata.instance('attributes/cluster-name');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nasync function isComputeEngine() {\n    return gcpMetadata.isAvailable();\n}\n//# sourceMappingURL=envDetect.js.map","const _ = require('lodash');\n\nconst { columnToLetter } = require('./utils');\n\nconst { GoogleSpreadsheetFormulaError } = require('./errors');\n\nclass GoogleSpreadsheetCell {\n  constructor(parentSheet, rowIndex, columnIndex, cellData) {\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n    this._row = rowIndex;\n    this._column = columnIndex;\n\n    this._updateRawData(cellData);\n    return this;\n  }\n\n  // newData can be undefined/null if the cell is totally empty and unformatted\n  _updateRawData(newData = {}) {\n    this._rawData = newData;\n    this._draftData = {}; // stuff to save\n    this._error = null;\n    if (_.get(this._rawData, 'effectiveValue.errorValue')) {\n      this._error = new GoogleSpreadsheetFormulaError(this._rawData.effectiveValue.errorValue);\n    }\n  }\n\n  // CELL LOCATION/ADDRESS /////////////////////////////////////////////////////////////////////////\n  get rowIndex() { return this._row; }\n  get columnIndex() { return this._column; }\n  get a1Column() { return columnToLetter(this._column + 1); }\n  get a1Row() { return this._row + 1; } // a1 row numbers start at 1 instead of 0\n  get a1Address() { return `${this.a1Column}${this.a1Row}`; }\n\n  // CELL CONTENTS - VALUE/FORMULA/NOTES ///////////////////////////////////////////////////////////\n  get value() {\n    // const typeKey = _.keys(this._rawData.effectiveValue)[0];\n    if (this._draftData.value !== undefined) throw new Error('Value has been changed');\n    if (this._error) return this._error;\n    if (!this._rawData.effectiveValue) return null;\n    return _.values(this._rawData.effectiveValue)[0];\n  }\n\n  set value(newValue) {\n    if (_.isBoolean(newValue)) {\n      this._draftData.valueType = 'boolValue';\n    } else if (_.isString(newValue)) {\n      if (newValue.substr(0, 1) === '=') this._draftData.valueType = 'formulaValue';\n      else this._draftData.valueType = 'stringValue';\n    } else if (_.isFinite(newValue)) {\n      this._draftData.valueType = 'numberValue';\n    } else if (_.isNil(newValue)) {\n      // null or undefined\n      this._draftData.valueType = 'stringValue';\n      newValue = '';\n    } else {\n      throw new Error('Set value to boolean, string, or number');\n    }\n    this._draftData.value = newValue;\n  }\n\n  get valueType() {\n    // an error only happens with a formula\n    if (this._error) return 'errorValue';\n    if (!this._rawData.effectiveValue) return null;\n    return _.keys(this._rawData.effectiveValue)[0];\n  }\n\n  get formattedValue() { return this._rawData.formattedValue || null; }\n  set formattedValue(newVal) {\n    throw new Error('You cannot modify the formatted value directly');\n  }\n\n  get formula() { return _.get(this._rawData, 'userEnteredValue.formulaValue', null); }\n  set formula(newValue) {\n    if (newValue.substr(0, 1) !== '=') throw new Error('formula must begin with \"=\"');\n    this.value = newValue; // use existing value setter\n  }\n  get formulaError() { return this._error; }\n\n  get hyperlink() {\n    if (this._draftData.value) throw new Error('Save cell to be able to read hyperlink');\n    return this._rawData.hyperlink;\n  }\n  set hyperlink(val) {\n    throw new Error('Do not set hyperlink directly. Instead set cell.formula, for example `cell.formula = \\'=HYPERLINK(\"http://google.com\", \"Google\")\\'`');\n  }\n\n  get note() {\n    return this._draftData.note !== undefined ? this._draftData.note : this._rawData.note;\n  }\n\n  set note(newVal) {\n    if (newVal === null || newVal === undefined) newVal = '';\n    if (!_.isString(newVal)) throw new Error('Note must be a string');\n    if (newVal === this._rawData.note) delete this._draftData.note;\n    else this._draftData.note = newVal;\n  }\n\n  // CELL FORMATTING ///////////////////////////////////////////////////////////////////////////////\n  get userEnteredFormat() { return this._rawData.userEnteredFormat; }\n  get effectiveFormat() { return this._rawData.effectiveFormat; }\n  set userEnteredFormat(newVal) { throw new Error('Do not modify directly, instead use format properties'); }\n  set effectiveFormat(newVal) { throw new Error('Read-only'); }\n\n  _getFormatParam(param) {\n    // we freeze the object so users don't change nested props accidentally\n    // TODO: figure out something that would throw an error if you try to update it?\n    if (_.get(this._draftData, `userEnteredFormat.${param}`)) {\n      throw new Error('User format is unsaved - save the cell to be able to read it again');\n    }\n    return Object.freeze(this._rawData.userEnteredFormat[param]);\n  }\n\n  _setFormatParam(param, newVal) {\n    if (_.isEqual(newVal, _.get(this._rawData, `userEnteredFormat.${param}`))) {\n      _.unset(this._draftData, `userEnteredFormat.${param}`);\n    } else {\n      _.set(this._draftData, `userEnteredFormat.${param}`, newVal);\n      this._draftData.clearFormat = false;\n    }\n  }\n\n  // format getters\n  get numberFormat() { return this._getFormatParam('numberFormat'); }\n  get backgroundColor() { return this._getFormatParam('backgroundColor'); }\n  get borders() { return this._getFormatParam('borders'); }\n  get padding() { return this._getFormatParam('padding'); }\n  get horizontalAlignment() { return this._getFormatParam('horizontalAlignment'); }\n  get verticalAlignment() { return this._getFormatParam('verticalAlignment'); }\n  get wrapStrategy() { return this._getFormatParam('wrapStrategy'); }\n  get textDirection() { return this._getFormatParam('textDirection'); }\n  get textFormat() { return this._getFormatParam('textFormat'); }\n  get hyperlinkDisplayType() { return this._getFormatParam('hyperlinkDisplayType'); }\n  get textRotation() { return this._getFormatParam('textRotation'); }\n\n  // format setters\n  set numberFormat(newVal) { return this._setFormatParam('numberFormat', newVal); }\n  set backgroundColor(newVal) { return this._setFormatParam('backgroundColor', newVal); }\n  set borders(newVal) { return this._setFormatParam('borders', newVal); }\n  set padding(newVal) { return this._setFormatParam('padding', newVal); }\n  set horizontalAlignment(newVal) { return this._setFormatParam('horizontalAlignment', newVal); }\n  set verticalAlignment(newVal) { return this._setFormatParam('verticalAlignment', newVal); }\n  set wrapStrategy(newVal) { return this._setFormatParam('wrapStrategy', newVal); }\n  set textDirection(newVal) { return this._setFormatParam('textDirection', newVal); }\n  set textFormat(newVal) { return this._setFormatParam('textFormat', newVal); }\n  set hyperlinkDisplayType(newVal) { return this._setFormatParam('hyperlinkDisplayType', newVal); }\n  set textRotation(newVal) { return this._setFormatParam('textRotation', newVal); }\n\n  clearAllFormatting() {\n    // need to track this separately since by setting/unsetting things, we may end up with\n    // this._draftData.userEnteredFormat as an empty object, but not an intent to clear it\n    this._draftData.clearFormat = true;\n    delete this._draftData.userEnteredFormat;\n  }\n\n  // SAVING + UTILS ////////////////////////////////////////////////////////////////////////////////\n\n  // returns true if there are any updates that have not been saved yet\n  get _isDirty() {\n    // have to be careful about checking undefined rather than falsy\n    // in case a new value is empty string or 0 or false\n    if (this._draftData.note !== undefined) return true;\n    if (_.keys(this._draftData.userEnteredFormat).length) return true;\n    if (this._draftData.clearFormat) return true;\n    if (this._draftData.value !== undefined) return true;\n    return false;\n  }\n\n  discardUnsavedChanges() {\n    this._draftData = {};\n  }\n\n  async save() {\n    await this._sheet.saveUpdatedCells([this]);\n  }\n\n  // used by worksheet when saving cells\n  // returns an individual batchUpdate request to update the cell\n  _getUpdateRequest() {\n    // this logic should match the _isDirty logic above\n    // but we need it broken up to build the request below\n    const isValueUpdated = this._draftData.value !== undefined;\n    const isNoteUpdated = this._draftData.note !== undefined;\n    const isFormatUpdated = !!_.keys(this._draftData.userEnteredFormat || {}).length;\n    const isFormatCleared = this._draftData.clearFormat;\n\n    // if no updates, we return null, which we can filter out later before sending requests\n    if (!_.some([isValueUpdated, isNoteUpdated, isFormatUpdated, isFormatCleared])) {\n      return null;\n    }\n\n    // build up the formatting object, which has some quirks...\n    const format = {\n      // have to pass the whole object or it will clear existing properties\n      ...this._rawData.userEnteredFormat,\n      ...this._draftData.userEnteredFormat,\n    };\n    // if background color already set, cell has backgroundColor and backgroundColorStyle\n    // but backgroundColorStyle takes precendence so we must remove to set the color\n    // see https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/cells#CellFormat\n    if (_.get(this._draftData, 'userEnteredFormat.backgroundColor')) {\n      delete (format.backgroundColorStyle);\n    }\n\n    return {\n      updateCells: {\n        rows: [{\n          values: [{\n            ...isValueUpdated && {\n              userEnteredValue: { [this._draftData.valueType]: this._draftData.value },\n            },\n            ...isNoteUpdated && {\n              note: this._draftData.note,\n            },\n            ...isFormatUpdated && {\n              userEnteredFormat: format,\n            },\n            ...isFormatCleared && {\n              userEnteredFormat: {},\n            },\n          }],\n        }],\n        // turns into a string of which fields to update ex \"note,userEnteredFormat\"\n        fields: _.keys(_.pickBy({\n          userEnteredValue: isValueUpdated,\n          note: isNoteUpdated,\n          userEnteredFormat: isFormatUpdated || isFormatCleared,\n        })).join(','),\n        start: {\n          sheetId: this._sheet.sheetId,\n          rowIndex: this.rowIndex,\n          columnIndex: this.columnIndex,\n        },\n      },\n    };\n  }\n}\n\nmodule.exports = GoogleSpreadsheetCell;\n","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryConfig = void 0;\nasync function getRetryConfig(err) {\n    var _a;\n    let config = getConfig(err);\n    if (!err || !err.config || (!config && !err.config.retry)) {\n        return { shouldRetry: false };\n    }\n    config = config || {};\n    config.currentRetryAttempt = config.currentRetryAttempt || 0;\n    config.retry =\n        config.retry === undefined || config.retry === null ? 3 : config.retry;\n    config.httpMethodsToRetry = config.httpMethodsToRetry || [\n        'GET',\n        'HEAD',\n        'PUT',\n        'OPTIONS',\n        'DELETE',\n    ];\n    config.noResponseRetries =\n        config.noResponseRetries === undefined || config.noResponseRetries === null\n            ? 2\n            : config.noResponseRetries;\n    // If this wasn't in the list of status codes where we want\n    // to automatically retry, return.\n    const retryRanges = [\n        // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n        // 1xx - Retry (Informational, request still processing)\n        // 2xx - Do not retry (Success)\n        // 3xx - Do not retry (Redirect)\n        // 4xx - Do not retry (Client errors)\n        // 429 - Retry (\"Too Many Requests\")\n        // 5xx - Retry (Server errors)\n        [100, 199],\n        [429, 429],\n        [500, 599],\n    ];\n    config.statusCodesToRetry = config.statusCodesToRetry || retryRanges;\n    // Put the config back into the err\n    err.config.retryConfig = config;\n    // Determine if we should retry the request\n    const shouldRetryFn = config.shouldRetry || shouldRetryRequest;\n    if (!(await shouldRetryFn(err))) {\n        return { shouldRetry: false, config: err.config };\n    }\n    // Calculate time to wait with exponential backoff.\n    // If this is the first retry, look for a configured retryDelay.\n    const retryDelay = config.currentRetryAttempt ? 0 : (_a = config.retryDelay) !== null && _a !== void 0 ? _a : 100;\n    // Formula: retryDelay + ((2^c - 1 / 2) * 1000)\n    const delay = retryDelay + ((Math.pow(2, config.currentRetryAttempt) - 1) / 2) * 1000;\n    // We're going to retry!  Incremenent the counter.\n    err.config.retryConfig.currentRetryAttempt += 1;\n    // Create a promise that invokes the retry after the backOffDelay\n    const backoff = new Promise(resolve => {\n        setTimeout(resolve, delay);\n    });\n    // Notify the user if they added an `onRetryAttempt` handler\n    if (config.onRetryAttempt) {\n        config.onRetryAttempt(err);\n    }\n    // Return the promise in which recalls Gaxios to retry the request\n    await backoff;\n    return { shouldRetry: true, config: err.config };\n}\nexports.getRetryConfig = getRetryConfig;\n/**\n * Determine based on config if we should retry the request.\n * @param err The GaxiosError passed to the interceptor.\n */\nfunction shouldRetryRequest(err) {\n    const config = getConfig(err);\n    // node-fetch raises an AbortError if signaled:\n    // https://github.com/bitinn/node-fetch#request-cancellation-with-abortsignal\n    if (err.name === 'AbortError') {\n        return false;\n    }\n    // If there's no config, or retries are disabled, return.\n    if (!config || config.retry === 0) {\n        return false;\n    }\n    // Check if this error has no response (ETIMEDOUT, ENOTFOUND, etc)\n    if (!err.response &&\n        (config.currentRetryAttempt || 0) >= config.noResponseRetries) {\n        return false;\n    }\n    // Only retry with configured HttpMethods.\n    if (!err.config.method ||\n        config.httpMethodsToRetry.indexOf(err.config.method.toUpperCase()) < 0) {\n        return false;\n    }\n    // If this wasn't in the list of status codes where we want\n    // to automatically retry, return.\n    if (err.response && err.response.status) {\n        let isInRange = false;\n        for (const [min, max] of config.statusCodesToRetry) {\n            const status = err.response.status;\n            if (status >= min && status <= max) {\n                isInRange = true;\n                break;\n            }\n        }\n        if (!isInRange) {\n            return false;\n        }\n    }\n    // If we are out of retry attempts, return\n    config.currentRetryAttempt = config.currentRetryAttempt || 0;\n    if (config.currentRetryAttempt >= config.retry) {\n        return false;\n    }\n    return true;\n}\n/**\n * Acquire the raxConfig object from an GaxiosError if available.\n * @param err The Gaxios error with a config object.\n */\nfunction getConfig(err) {\n    if (err && err.config && err.config.retryConfig) {\n        return err.config.retryConfig;\n    }\n    return;\n}\n//# sourceMappingURL=retry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.auth = void 0;\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst googleauth_1 = require(\"./auth/googleauth\");\nObject.defineProperty(exports, \"GoogleAuth\", { enumerable: true, get: function () { return googleauth_1.GoogleAuth; } });\nvar computeclient_1 = require(\"./auth/computeclient\");\nObject.defineProperty(exports, \"Compute\", { enumerable: true, get: function () { return computeclient_1.Compute; } });\nvar envDetect_1 = require(\"./auth/envDetect\");\nObject.defineProperty(exports, \"GCPEnv\", { enumerable: true, get: function () { return envDetect_1.GCPEnv; } });\nvar iam_1 = require(\"./auth/iam\");\nObject.defineProperty(exports, \"IAMAuth\", { enumerable: true, get: function () { return iam_1.IAMAuth; } });\nvar idtokenclient_1 = require(\"./auth/idtokenclient\");\nObject.defineProperty(exports, \"IdTokenClient\", { enumerable: true, get: function () { return idtokenclient_1.IdTokenClient; } });\nvar jwtaccess_1 = require(\"./auth/jwtaccess\");\nObject.defineProperty(exports, \"JWTAccess\", { enumerable: true, get: function () { return jwtaccess_1.JWTAccess; } });\nvar jwtclient_1 = require(\"./auth/jwtclient\");\nObject.defineProperty(exports, \"JWT\", { enumerable: true, get: function () { return jwtclient_1.JWT; } });\nvar oauth2client_1 = require(\"./auth/oauth2client\");\nObject.defineProperty(exports, \"CodeChallengeMethod\", { enumerable: true, get: function () { return oauth2client_1.CodeChallengeMethod; } });\nObject.defineProperty(exports, \"OAuth2Client\", { enumerable: true, get: function () { return oauth2client_1.OAuth2Client; } });\nvar loginticket_1 = require(\"./auth/loginticket\");\nObject.defineProperty(exports, \"LoginTicket\", { enumerable: true, get: function () { return loginticket_1.LoginTicket; } });\nvar refreshclient_1 = require(\"./auth/refreshclient\");\nObject.defineProperty(exports, \"UserRefreshClient\", { enumerable: true, get: function () { return refreshclient_1.UserRefreshClient; } });\nvar transporters_1 = require(\"./transporters\");\nObject.defineProperty(exports, \"DefaultTransporter\", { enumerable: true, get: function () { return transporters_1.DefaultTransporter; } });\nconst auth = new googleauth_1.GoogleAuth();\nexports.auth = auth;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestTimeout = exports.resetIsAvailableCache = exports.isAvailable = exports.project = exports.instance = exports.HEADERS = exports.HEADER_VALUE = exports.HEADER_NAME = exports.SECONDARY_HOST_ADDRESS = exports.HOST_ADDRESS = exports.BASE_PATH = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst jsonBigint = require(\"json-bigint\");\nexports.BASE_PATH = '/computeMetadata/v1';\nexports.HOST_ADDRESS = 'http://169.254.169.254';\nexports.SECONDARY_HOST_ADDRESS = 'http://metadata.google.internal.';\nexports.HEADER_NAME = 'Metadata-Flavor';\nexports.HEADER_VALUE = 'Google';\nexports.HEADERS = Object.freeze({ [exports.HEADER_NAME]: exports.HEADER_VALUE });\n/**\n * Returns the base URL while taking into account the GCE_METADATA_HOST\n * environment variable if it exists.\n *\n * @returns The base URL, e.g., http://169.254.169.254/computeMetadata/v1.\n */\nfunction getBaseUrl(baseUrl) {\n    if (!baseUrl) {\n        baseUrl =\n            process.env.GCE_METADATA_IP ||\n                process.env.GCE_METADATA_HOST ||\n                exports.HOST_ADDRESS;\n    }\n    // If no scheme is provided default to HTTP:\n    if (!/^https?:\\/\\//.test(baseUrl)) {\n        baseUrl = `http://${baseUrl}`;\n    }\n    return new URL(exports.BASE_PATH, baseUrl).href;\n}\n// Accepts an options object passed from the user to the API. In previous\n// versions of the API, it referred to a `Request` or an `Axios` request\n// options object.  Now it refers to an object with very limited property\n// names. This is here to help ensure users don't pass invalid options when\n// they  upgrade from 0.4 to 0.5 to 0.8.\nfunction validate(options) {\n    Object.keys(options).forEach(key => {\n        switch (key) {\n            case 'params':\n            case 'property':\n            case 'headers':\n                break;\n            case 'qs':\n                throw new Error(\"'qs' is not a valid configuration option. Please use 'params' instead.\");\n            default:\n                throw new Error(`'${key}' is not a valid configuration option.`);\n        }\n    });\n}\nasync function metadataAccessor(type, options, noResponseRetries = 3, fastFail = false) {\n    options = options || {};\n    if (typeof options === 'string') {\n        options = { property: options };\n    }\n    let property = '';\n    if (typeof options === 'object' && options.property) {\n        property = '/' + options.property;\n    }\n    validate(options);\n    try {\n        const requestMethod = fastFail ? fastFailMetadataRequest : gaxios_1.request;\n        const res = await requestMethod({\n            url: `${getBaseUrl()}/${type}${property}`,\n            headers: Object.assign({}, exports.HEADERS, options.headers),\n            retryConfig: { noResponseRetries },\n            params: options.params,\n            responseType: 'text',\n            timeout: requestTimeout(),\n        });\n        // NOTE: node.js converts all incoming headers to lower case.\n        if (res.headers[exports.HEADER_NAME.toLowerCase()] !== exports.HEADER_VALUE) {\n            throw new Error(`Invalid response from metadata service: incorrect ${exports.HEADER_NAME} header.`);\n        }\n        else if (!res.data) {\n            throw new Error('Invalid response from the metadata service');\n        }\n        if (typeof res.data === 'string') {\n            try {\n                return jsonBigint.parse(res.data);\n            }\n            catch (_a) {\n                /* ignore */\n            }\n        }\n        return res.data;\n    }\n    catch (e) {\n        if (e.response && e.response.status !== 200) {\n            e.message = `Unsuccessful response status code. ${e.message}`;\n        }\n        throw e;\n    }\n}\nasync function fastFailMetadataRequest(options) {\n    const secondaryOptions = {\n        ...options,\n        url: options.url.replace(getBaseUrl(), getBaseUrl(exports.SECONDARY_HOST_ADDRESS)),\n    };\n    // We race a connection between DNS/IP to metadata server. There are a couple\n    // reasons for this:\n    //\n    // 1. the DNS is slow in some GCP environments; by checking both, we might\n    //    detect the runtime environment signficantly faster.\n    // 2. we can't just check the IP, which is tarpitted and slow to respond\n    //    on a user's local machine.\n    //\n    // Additional logic has been added to make sure that we don't create an\n    // unhandled rejection in scenarios where a failure happens sometime\n    // after a success.\n    //\n    // Note, however, if a failure happens prior to a success, a rejection should\n    // occur, this is for folks running locally.\n    //\n    let responded = false;\n    const r1 = gaxios_1.request(options)\n        .then(res => {\n        responded = true;\n        return res;\n    })\n        .catch(err => {\n        if (responded) {\n            return r2;\n        }\n        else {\n            responded = true;\n            throw err;\n        }\n    });\n    const r2 = gaxios_1.request(secondaryOptions)\n        .then(res => {\n        responded = true;\n        return res;\n    })\n        .catch(err => {\n        if (responded) {\n            return r1;\n        }\n        else {\n            responded = true;\n            throw err;\n        }\n    });\n    return Promise.race([r1, r2]);\n}\n/**\n * Obtain metadata for the current GCE instance\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instance(options) {\n    return metadataAccessor('instance', options);\n}\nexports.instance = instance;\n/**\n * Obtain metadata for the current GCP Project.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction project(options) {\n    return metadataAccessor('project', options);\n}\nexports.project = project;\n/*\n * How many times should we retry detecting GCP environment.\n */\nfunction detectGCPAvailableRetries() {\n    return process.env.DETECT_GCP_RETRIES\n        ? Number(process.env.DETECT_GCP_RETRIES)\n        : 0;\n}\nlet cachedIsAvailableResponse;\n/**\n * Determine if the metadata server is currently available.\n */\nasync function isAvailable() {\n    try {\n        // If a user is instantiating several GCP libraries at the same time,\n        // this may result in multiple calls to isAvailable(), to detect the\n        // runtime environment. We use the same promise for each of these calls\n        // to reduce the network load.\n        if (cachedIsAvailableResponse === undefined) {\n            cachedIsAvailableResponse = metadataAccessor('instance', undefined, detectGCPAvailableRetries(), \n            // If the default HOST_ADDRESS has been overridden, we should not\n            // make an effort to try SECONDARY_HOST_ADDRESS (as we are likely in\n            // a non-GCP environment):\n            !(process.env.GCE_METADATA_IP || process.env.GCE_METADATA_HOST));\n        }\n        await cachedIsAvailableResponse;\n        return true;\n    }\n    catch (err) {\n        if (process.env.DEBUG_AUTH) {\n            console.info(err);\n        }\n        if (err.type === 'request-timeout') {\n            // If running in a GCP environment, metadata endpoint should return\n            // within ms.\n            return false;\n        }\n        if (err.response && err.response.status === 404) {\n            return false;\n        }\n        else {\n            if (!(err.response && err.response.status === 404) &&\n                // A warning is emitted if we see an unexpected err.code, or err.code\n                // is not populated:\n                (!err.code ||\n                    ![\n                        'EHOSTDOWN',\n                        'EHOSTUNREACH',\n                        'ENETUNREACH',\n                        'ENOENT',\n                        'ENOTFOUND',\n                        'ECONNREFUSED',\n                    ].includes(err.code))) {\n                let code = 'UNKNOWN';\n                if (err.code)\n                    code = err.code;\n                process.emitWarning(`received unexpected error = ${err.message} code = ${code}`, 'MetadataLookupWarning');\n            }\n            // Failure to resolve the metadata service means that it is not available.\n            return false;\n        }\n    }\n}\nexports.isAvailable = isAvailable;\n/**\n * reset the memoized isAvailable() lookup.\n */\nfunction resetIsAvailableCache() {\n    cachedIsAvailableResponse = undefined;\n}\nexports.resetIsAvailableCache = resetIsAvailableCache;\n/**\n * Obtain the timeout for requests to the metadata server.\n */\nfunction requestTimeout() {\n    // In testing, we were able to reproduce behavior similar to\n    // https://github.com/googleapis/google-auth-library-nodejs/issues/798\n    // by making many concurrent network requests. Requests do not actually fail,\n    // rather they take significantly longer to complete (and we hit our\n    // default 3000ms timeout).\n    //\n    // This logic detects a GCF environment, using the documented environment\n    // variables K_SERVICE and FUNCTION_NAME:\n    // https://cloud.google.com/functions/docs/env-var and, in a GCF environment\n    // eliminates timeouts (by setting the value to 0 to disable).\n    return process.env.K_SERVICE || process.env.FUNCTION_NAME ? 0 : 3000;\n}\nexports.requestTimeout = requestTimeout;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2Client = exports.CertificateFormat = exports.CodeChallengeMethod = void 0;\nconst querystring = require(\"querystring\");\nconst stream = require(\"stream\");\nconst formatEcdsa = require(\"ecdsa-sig-formatter\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst authclient_1 = require(\"./authclient\");\nconst loginticket_1 = require(\"./loginticket\");\nvar CodeChallengeMethod;\n(function (CodeChallengeMethod) {\n    CodeChallengeMethod[\"Plain\"] = \"plain\";\n    CodeChallengeMethod[\"S256\"] = \"S256\";\n})(CodeChallengeMethod = exports.CodeChallengeMethod || (exports.CodeChallengeMethod = {}));\nvar CertificateFormat;\n(function (CertificateFormat) {\n    CertificateFormat[\"PEM\"] = \"PEM\";\n    CertificateFormat[\"JWK\"] = \"JWK\";\n})(CertificateFormat = exports.CertificateFormat || (exports.CertificateFormat = {}));\nclass OAuth2Client extends authclient_1.AuthClient {\n    constructor(optionsOrClientId, clientSecret, redirectUri) {\n        super();\n        this.certificateCache = {};\n        this.certificateExpiry = null;\n        this.certificateCacheFormat = CertificateFormat.PEM;\n        this.refreshTokenPromises = new Map();\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : { clientId: optionsOrClientId, clientSecret, redirectUri };\n        this._clientId = opts.clientId;\n        this._clientSecret = opts.clientSecret;\n        this.redirectUri = opts.redirectUri;\n        this.eagerRefreshThresholdMillis =\n            opts.eagerRefreshThresholdMillis || 5 * 60 * 1000;\n        this.forceRefreshOnFailure = !!opts.forceRefreshOnFailure;\n    }\n    /**\n     * Generates URL for consent page landing.\n     * @param opts Options.\n     * @return URL to consent page.\n     */\n    generateAuthUrl(opts = {}) {\n        if (opts.code_challenge_method && !opts.code_challenge) {\n            throw new Error('If a code_challenge_method is provided, code_challenge must be included.');\n        }\n        opts.response_type = opts.response_type || 'code';\n        opts.client_id = opts.client_id || this._clientId;\n        opts.redirect_uri = opts.redirect_uri || this.redirectUri;\n        // Allow scopes to be passed either as array or a string\n        if (opts.scope instanceof Array) {\n            opts.scope = opts.scope.join(' ');\n        }\n        const rootUrl = OAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_;\n        return rootUrl + '?' + querystring.stringify(opts);\n    }\n    generateCodeVerifier() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('generateCodeVerifier is removed, please use generateCodeVerifierAsync instead.');\n    }\n    /**\n     * Convenience method to automatically generate a code_verifier, and its\n     * resulting SHA256. If used, this must be paired with a S256\n     * code_challenge_method.\n     *\n     * For a full example see:\n     * https://github.com/googleapis/google-auth-library-nodejs/blob/master/samples/oauth2-codeVerifier.js\n     */\n    async generateCodeVerifierAsync() {\n        // base64 encoding uses 6 bits per character, and we want to generate128\n        // characters. 6*128/8 = 96.\n        const crypto = crypto_1.createCrypto();\n        const randomString = crypto.randomBytesBase64(96);\n        // The valid characters in the code_verifier are [A-Z]/[a-z]/[0-9]/\n        // \"-\"/\".\"/\"_\"/\"~\". Base64 encoded strings are pretty close, so we're just\n        // swapping out a few chars.\n        const codeVerifier = randomString\n            .replace(/\\+/g, '~')\n            .replace(/=/g, '_')\n            .replace(/\\//g, '-');\n        // Generate the base64 encoded SHA256\n        const unencodedCodeChallenge = await crypto.sha256DigestBase64(codeVerifier);\n        // We need to use base64UrlEncoding instead of standard base64\n        const codeChallenge = unencodedCodeChallenge\n            .split('=')[0]\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_');\n        return { codeVerifier, codeChallenge };\n    }\n    getToken(codeOrOptions, callback) {\n        const options = typeof codeOrOptions === 'string' ? { code: codeOrOptions } : codeOrOptions;\n        if (callback) {\n            this.getTokenAsync(options).then(r => callback(null, r.tokens, r.res), e => callback(e, null, e.response));\n        }\n        else {\n            return this.getTokenAsync(options);\n        }\n    }\n    async getTokenAsync(options) {\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const values = {\n            code: options.code,\n            client_id: options.client_id || this._clientId,\n            client_secret: this._clientSecret,\n            redirect_uri: options.redirect_uri || this.redirectUri,\n            grant_type: 'authorization_code',\n            code_verifier: options.codeVerifier,\n        };\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(values),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    /**\n     * Refreshes the access token.\n     * @param refresh_token Existing refresh token.\n     * @private\n     */\n    async refreshToken(refreshToken) {\n        if (!refreshToken) {\n            return this.refreshTokenNoCache(refreshToken);\n        }\n        // If a request to refresh using the same token has started,\n        // return the same promise.\n        if (this.refreshTokenPromises.has(refreshToken)) {\n            return this.refreshTokenPromises.get(refreshToken);\n        }\n        const p = this.refreshTokenNoCache(refreshToken).then(r => {\n            this.refreshTokenPromises.delete(refreshToken);\n            return r;\n        }, e => {\n            this.refreshTokenPromises.delete(refreshToken);\n            throw e;\n        });\n        this.refreshTokenPromises.set(refreshToken, p);\n        return p;\n    }\n    async refreshTokenNoCache(refreshToken) {\n        if (!refreshToken) {\n            throw new Error('No refresh token is set.');\n        }\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const data = {\n            refresh_token: refreshToken,\n            client_id: this._clientId,\n            client_secret: this._clientSecret,\n            grant_type: 'refresh_token',\n        };\n        // request for new token\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        // TODO: de-duplicate this code from a few spots\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    refreshAccessToken(callback) {\n        if (callback) {\n            this.refreshAccessTokenAsync().then(r => callback(null, r.credentials, r.res), callback);\n        }\n        else {\n            return this.refreshAccessTokenAsync();\n        }\n    }\n    async refreshAccessTokenAsync() {\n        const r = await this.refreshToken(this.credentials.refresh_token);\n        const tokens = r.tokens;\n        tokens.refresh_token = this.credentials.refresh_token;\n        this.credentials = tokens;\n        return { credentials: this.credentials, res: r.res };\n    }\n    getAccessToken(callback) {\n        if (callback) {\n            this.getAccessTokenAsync().then(r => callback(null, r.token, r.res), callback);\n        }\n        else {\n            return this.getAccessTokenAsync();\n        }\n    }\n    async getAccessTokenAsync() {\n        const shouldRefresh = !this.credentials.access_token || this.isTokenExpiring();\n        if (shouldRefresh) {\n            if (!this.credentials.refresh_token) {\n                throw new Error('No refresh token is set.');\n            }\n            const r = await this.refreshAccessTokenAsync();\n            if (!r.credentials || (r.credentials && !r.credentials.access_token)) {\n                throw new Error('Could not refresh access token.');\n            }\n            return { token: r.credentials.access_token, res: r.res };\n        }\n        else {\n            return { token: this.credentials.access_token };\n        }\n    }\n    /**\n     * The main authentication interface.  It takes an optional url which when\n     * present is the endpoint being accessed, and returns a Promise which\n     * resolves with authorization header fields.\n     *\n     * In OAuth2Client, the result has the form:\n     * { Authorization: 'Bearer <access_token_value>' }\n     * @param url The optional url being authorized\n     */\n    async getRequestHeaders(url) {\n        const headers = (await this.getRequestMetadataAsync(url)).headers;\n        return headers;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        const thisCreds = this.credentials;\n        if (!thisCreds.access_token && !thisCreds.refresh_token && !this.apiKey) {\n            throw new Error('No access, refresh token or API key is set.');\n        }\n        if (thisCreds.access_token && !this.isTokenExpiring()) {\n            thisCreds.token_type = thisCreds.token_type || 'Bearer';\n            const headers = {\n                Authorization: thisCreds.token_type + ' ' + thisCreds.access_token,\n            };\n            return { headers: this.addSharedMetadataHeaders(headers) };\n        }\n        if (this.apiKey) {\n            return { headers: { 'X-Goog-Api-Key': this.apiKey } };\n        }\n        let r = null;\n        let tokens = null;\n        try {\n            r = await this.refreshToken(thisCreds.refresh_token);\n            tokens = r.tokens;\n        }\n        catch (err) {\n            const e = err;\n            if (e.response &&\n                (e.response.status === 403 || e.response.status === 404)) {\n                e.message = `Could not refresh access token: ${e.message}`;\n            }\n            throw e;\n        }\n        const credentials = this.credentials;\n        credentials.token_type = credentials.token_type || 'Bearer';\n        tokens.refresh_token = credentials.refresh_token;\n        this.credentials = tokens;\n        const headers = {\n            Authorization: credentials.token_type + ' ' + tokens.access_token,\n        };\n        return { headers: this.addSharedMetadataHeaders(headers), res: r.res };\n    }\n    /**\n     * Generates an URL to revoke the given token.\n     * @param token The existing token to be revoked.\n     */\n    static getRevokeTokenUrl(token) {\n        const parameters = querystring.stringify({ token });\n        return `${OAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_}?${parameters}`;\n    }\n    revokeToken(token, callback) {\n        const opts = {\n            url: OAuth2Client.getRevokeTokenUrl(token),\n            method: 'POST',\n        };\n        if (callback) {\n            this.transporter\n                .request(opts)\n                .then(r => callback(null, r), callback);\n        }\n        else {\n            return this.transporter.request(opts);\n        }\n    }\n    revokeCredentials(callback) {\n        if (callback) {\n            this.revokeCredentialsAsync().then(res => callback(null, res), callback);\n        }\n        else {\n            return this.revokeCredentialsAsync();\n        }\n    }\n    async revokeCredentialsAsync() {\n        const token = this.credentials.access_token;\n        this.credentials = {};\n        if (token) {\n            return this.revokeToken(token);\n        }\n        else {\n            throw new Error('No access token to revoke.');\n        }\n    }\n    request(opts, callback) {\n        if (callback) {\n            this.requestAsync(opts).then(r => callback(null, r), e => {\n                return callback(e, e.response);\n            });\n        }\n        else {\n            return this.requestAsync(opts);\n        }\n    }\n    async requestAsync(opts, retry = false) {\n        let r2;\n        try {\n            const r = await this.getRequestMetadataAsync(opts.url);\n            opts.headers = opts.headers || {};\n            if (r.headers && r.headers['x-goog-user-project']) {\n                opts.headers['x-goog-user-project'] = r.headers['x-goog-user-project'];\n            }\n            if (r.headers && r.headers.Authorization) {\n                opts.headers.Authorization = r.headers.Authorization;\n            }\n            if (this.apiKey) {\n                opts.headers['X-Goog-Api-Key'] = this.apiKey;\n            }\n            r2 = await this.transporter.request(opts);\n        }\n        catch (e) {\n            const res = e.response;\n            if (res) {\n                const statusCode = res.status;\n                // Retry the request for metadata if the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - An access_token and refresh_token were available, but either no\n                //   expiry_date was available or the forceRefreshOnFailure flag is set.\n                //   The absent expiry_date case can happen when developers stash the\n                //   access_token and refresh_token for later use, but the access_token\n                //   fails on the first try because it's expired. Some developers may\n                //   choose to enable forceRefreshOnFailure to mitigate time-related\n                //   errors.\n                const mayRequireRefresh = this.credentials &&\n                    this.credentials.access_token &&\n                    this.credentials.refresh_token &&\n                    (!this.credentials.expiry_date || this.forceRefreshOnFailure);\n                const isReadableStream = res.config.data instanceof stream.Readable;\n                const isAuthErr = statusCode === 401 || statusCode === 403;\n                if (!retry && isAuthErr && !isReadableStream && mayRequireRefresh) {\n                    await this.refreshAccessTokenAsync();\n                    return this.requestAsync(opts, true);\n                }\n            }\n            throw e;\n        }\n        return r2;\n    }\n    verifyIdToken(options, callback) {\n        // This function used to accept two arguments instead of an options object.\n        // Check the types to help users upgrade with less pain.\n        // This check can be removed after a 2.0 release.\n        if (callback && typeof callback !== 'function') {\n            throw new Error('This method accepts an options object as the first parameter, which includes the idToken, audience, and maxExpiry.');\n        }\n        if (callback) {\n            this.verifyIdTokenAsync(options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.verifyIdTokenAsync(options);\n        }\n    }\n    async verifyIdTokenAsync(options) {\n        if (!options.idToken) {\n            throw new Error('The verifyIdToken method requires an ID Token');\n        }\n        const response = await this.getFederatedSignonCertsAsync();\n        const login = await this.verifySignedJwtWithCertsAsync(options.idToken, response.certs, options.audience, OAuth2Client.ISSUERS_, options.maxExpiry);\n        return login;\n    }\n    /**\n     * Obtains information about the provisioned access token.  Especially useful\n     * if you want to check the scopes that were provisioned to a given token.\n     *\n     * @param accessToken Required.  The Access Token for which you want to get\n     * user info.\n     */\n    async getTokenInfo(accessToken) {\n        const { data } = await this.transporter.request({\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Authorization: `Bearer ${accessToken}`,\n            },\n            url: OAuth2Client.GOOGLE_TOKEN_INFO_URL,\n        });\n        const info = Object.assign({\n            expiry_date: new Date().getTime() + data.expires_in * 1000,\n            scopes: data.scope.split(' '),\n        }, data);\n        delete info.expires_in;\n        delete info.scope;\n        return info;\n    }\n    getFederatedSignonCerts(callback) {\n        if (callback) {\n            this.getFederatedSignonCertsAsync().then(r => callback(null, r.certs, r.res), callback);\n        }\n        else {\n            return this.getFederatedSignonCertsAsync();\n        }\n    }\n    async getFederatedSignonCertsAsync() {\n        const nowTime = new Date().getTime();\n        const format = crypto_1.hasBrowserCrypto()\n            ? CertificateFormat.JWK\n            : CertificateFormat.PEM;\n        if (this.certificateExpiry &&\n            nowTime < this.certificateExpiry.getTime() &&\n            this.certificateCacheFormat === format) {\n            return { certs: this.certificateCache, format };\n        }\n        let res;\n        let url;\n        switch (format) {\n            case CertificateFormat.PEM:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_;\n                break;\n            case CertificateFormat.JWK:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_;\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        const cacheControl = res ? res.headers['cache-control'] : undefined;\n        let cacheAge = -1;\n        if (cacheControl) {\n            const pattern = new RegExp('max-age=([0-9]*)');\n            const regexResult = pattern.exec(cacheControl);\n            if (regexResult && regexResult.length === 2) {\n                // Cache results with max-age (in seconds)\n                cacheAge = Number(regexResult[1]) * 1000; // milliseconds\n            }\n        }\n        let certificates = {};\n        switch (format) {\n            case CertificateFormat.PEM:\n                certificates = res.data;\n                break;\n            case CertificateFormat.JWK:\n                for (const key of res.data.keys) {\n                    certificates[key.kid] = key;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        const now = new Date();\n        this.certificateExpiry =\n            cacheAge === -1 ? null : new Date(now.getTime() + cacheAge);\n        this.certificateCache = certificates;\n        this.certificateCacheFormat = format;\n        return { certs: certificates, format, res };\n    }\n    getIapPublicKeys(callback) {\n        if (callback) {\n            this.getIapPublicKeysAsync().then(r => callback(null, r.pubkeys, r.res), callback);\n        }\n        else {\n            return this.getIapPublicKeysAsync();\n        }\n    }\n    async getIapPublicKeysAsync() {\n        let res;\n        const url = OAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_;\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        return { pubkeys: res.data, res };\n    }\n    verifySignedJwtWithCerts() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('verifySignedJwtWithCerts is removed, please use verifySignedJwtWithCertsAsync instead.');\n    }\n    /**\n     * Verify the id token is signed with the correct certificate\n     * and is from the correct audience.\n     * @param jwt The jwt to verify (The ID Token in this case).\n     * @param certs The array of certs to test the jwt against.\n     * @param requiredAudience The audience to test the jwt against.\n     * @param issuers The allowed issuers of the jwt (Optional).\n     * @param maxExpiry The max expiry the certificate can be (Optional).\n     * @return Returns a promise resolving to LoginTicket on verification.\n     */\n    async verifySignedJwtWithCertsAsync(jwt, certs, requiredAudience, issuers, maxExpiry) {\n        const crypto = crypto_1.createCrypto();\n        if (!maxExpiry) {\n            maxExpiry = OAuth2Client.MAX_TOKEN_LIFETIME_SECS_;\n        }\n        const segments = jwt.split('.');\n        if (segments.length !== 3) {\n            throw new Error('Wrong number of segments in token: ' + jwt);\n        }\n        const signed = segments[0] + '.' + segments[1];\n        let signature = segments[2];\n        let envelope;\n        let payload;\n        try {\n            envelope = JSON.parse(crypto.decodeBase64StringUtf8(segments[0]));\n        }\n        catch (err) {\n            err.message = `Can't parse token envelope: ${segments[0]}': ${err.message}`;\n            throw err;\n        }\n        if (!envelope) {\n            throw new Error(\"Can't parse token envelope: \" + segments[0]);\n        }\n        try {\n            payload = JSON.parse(crypto.decodeBase64StringUtf8(segments[1]));\n        }\n        catch (err) {\n            err.message = `Can't parse token payload '${segments[0]}`;\n            throw err;\n        }\n        if (!payload) {\n            throw new Error(\"Can't parse token payload: \" + segments[1]);\n        }\n        if (!Object.prototype.hasOwnProperty.call(certs, envelope.kid)) {\n            // If this is not present, then there's no reason to attempt verification\n            throw new Error('No pem found for envelope: ' + JSON.stringify(envelope));\n        }\n        const cert = certs[envelope.kid];\n        if (envelope.alg === 'ES256') {\n            signature = formatEcdsa.joseToDer(signature, 'ES256').toString('base64');\n        }\n        const verified = await crypto.verify(cert, signed, signature);\n        if (!verified) {\n            throw new Error('Invalid token signature: ' + jwt);\n        }\n        if (!payload.iat) {\n            throw new Error('No issue time in token: ' + JSON.stringify(payload));\n        }\n        if (!payload.exp) {\n            throw new Error('No expiration time in token: ' + JSON.stringify(payload));\n        }\n        const iat = Number(payload.iat);\n        if (isNaN(iat))\n            throw new Error('iat field using invalid format');\n        const exp = Number(payload.exp);\n        if (isNaN(exp))\n            throw new Error('exp field using invalid format');\n        const now = new Date().getTime() / 1000;\n        if (exp >= now + maxExpiry) {\n            throw new Error('Expiration time too far in future: ' + JSON.stringify(payload));\n        }\n        const earliest = iat - OAuth2Client.CLOCK_SKEW_SECS_;\n        const latest = exp + OAuth2Client.CLOCK_SKEW_SECS_;\n        if (now < earliest) {\n            throw new Error('Token used too early, ' +\n                now +\n                ' < ' +\n                earliest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (now > latest) {\n            throw new Error('Token used too late, ' +\n                now +\n                ' > ' +\n                latest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (issuers && issuers.indexOf(payload.iss) < 0) {\n            throw new Error('Invalid issuer, expected one of [' +\n                issuers +\n                '], but got ' +\n                payload.iss);\n        }\n        // Check the audience matches if we have one\n        if (typeof requiredAudience !== 'undefined' && requiredAudience !== null) {\n            const aud = payload.aud;\n            let audVerified = false;\n            // If the requiredAudience is an array, check if it contains token\n            // audience\n            if (requiredAudience.constructor === Array) {\n                audVerified = requiredAudience.indexOf(aud) > -1;\n            }\n            else {\n                audVerified = aud === requiredAudience;\n            }\n            if (!audVerified) {\n                throw new Error('Wrong recipient, payload audience != requiredAudience');\n            }\n        }\n        return new loginticket_1.LoginTicket(envelope, payload);\n    }\n    /**\n     * Returns true if a token is expired or will expire within\n     * eagerRefreshThresholdMillismilliseconds.\n     * If there is no expiry time, assumes the token is not expired or expiring.\n     */\n    isTokenExpiring() {\n        const expiryDate = this.credentials.expiry_date;\n        return expiryDate\n            ? expiryDate <= new Date().getTime() + this.eagerRefreshThresholdMillis\n            : false;\n    }\n}\nexports.OAuth2Client = OAuth2Client;\nOAuth2Client.GOOGLE_TOKEN_INFO_URL = 'https://oauth2.googleapis.com/tokeninfo';\n/**\n * The base URL for auth endpoints.\n */\nOAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_ = 'https://accounts.google.com/o/oauth2/v2/auth';\n/**\n * The base endpoint for token retrieval.\n */\nOAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_ = 'https://oauth2.googleapis.com/token';\n/**\n * The base endpoint to revoke tokens.\n */\nOAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_ = 'https://oauth2.googleapis.com/revoke';\n/**\n * Google Sign on certificates in PEM format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v1/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v3/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_ = 'https://www.gstatic.com/iap/verify/public_key';\n/**\n * Clock skew - five minutes in seconds\n */\nOAuth2Client.CLOCK_SKEW_SECS_ = 300;\n/**\n * Max Token Lifetime is one day in seconds\n */\nOAuth2Client.MAX_TOKEN_LIFETIME_SECS_ = 86400;\n/**\n * The allowed oauth token issuers.\n */\nOAuth2Client.ISSUERS_ = [\n    'accounts.google.com',\n    'https://accounts.google.com',\n];\n//# sourceMappingURL=oauth2client.js.map","const _ = require('lodash');\n\nfunction getFieldMask(obj) {\n  return _.keys(obj).join(',');\n}\n\nfunction columnToLetter(column) {\n  let temp;\n  let letter = '';\n  let col = column;\n  while (col > 0) {\n    temp = (col - 1) % 26;\n    letter = String.fromCharCode(temp + 65) + letter;\n    col = (col - temp - 1) / 26;\n  }\n  return letter;\n}\n\nfunction letterToColumn(letter) {\n  let column = 0;\n  const { length } = letter;\n  for (let i = 0; i < length; i++) {\n    column += (letter.charCodeAt(i) - 64) * 26 ** (length - i - 1);\n  }\n  return column;\n}\n\nmodule.exports = {\n  getFieldMask,\n  columnToLetter,\n  letterToColumn,\n};\n","\"use strict\";\n// Copyright 2012 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthClient = void 0;\nconst events_1 = require(\"events\");\nconst transporters_1 = require(\"../transporters\");\nclass AuthClient extends events_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.transporter = new transporters_1.DefaultTransporter();\n        this.credentials = {};\n    }\n    /**\n     * Sets the auth credentials.\n     */\n    setCredentials(credentials) {\n        this.credentials = credentials;\n    }\n    /**\n     * Append additional headers, e.g., x-goog-user-project, shared across the\n     * classes inheriting AuthClient. This method should be used by any method\n     * that overrides getRequestMetadataAsync(), which is a shared helper for\n     * setting request information in both gRPC and HTTP API calls.\n     *\n     * @param headers objedcdt to append additional headers to.\n     */\n    addSharedMetadataHeaders(headers) {\n        // quota_project_id, stored in application_default_credentials.json, is set in\n        // the x-goog-user-project header, to indicate an alternate account for\n        // billing and quota:\n        if (!headers['x-goog-user-project'] && // don't override a value the user sets.\n            this.quotaProjectId) {\n            headers['x-goog-user-project'] = this.quotaProjectId;\n        }\n        return headers;\n    }\n}\nexports.AuthClient = AuthClient;\n//# sourceMappingURL=authclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBrowserCrypto = exports.createCrypto = void 0;\nconst crypto_1 = require(\"./browser/crypto\");\nconst crypto_2 = require(\"./node/crypto\");\nfunction createCrypto() {\n    if (hasBrowserCrypto()) {\n        return new crypto_1.BrowserCrypto();\n    }\n    return new crypto_2.NodeCrypto();\n}\nexports.createCrypto = createCrypto;\nfunction hasBrowserCrypto() {\n    return (typeof window !== 'undefined' &&\n        typeof window.crypto !== 'undefined' &&\n        typeof window.crypto.subtle !== 'undefined');\n}\nexports.hasBrowserCrypto = hasBrowserCrypto;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GaxiosError = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass GaxiosError extends Error {\n    constructor(message, options, response) {\n        super(message);\n        this.response = response;\n        this.config = options;\n        this.code = response.status.toString();\n    }\n}\nexports.GaxiosError = GaxiosError;\n//# sourceMappingURL=common.js.map","\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = void 0;\n// Accepts an options object passed from the user to the API.  In the\n// previous version of the API, it referred to a `Request` options object.\n// Now it refers to an Axiox Request Config object.  This is here to help\n// ensure users don't pass invalid options when they upgrade from 0.x to 1.x.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validate(options) {\n    const vpairs = [\n        { invalid: 'uri', expected: 'url' },\n        { invalid: 'json', expected: 'data' },\n        { invalid: 'qs', expected: 'params' },\n    ];\n    for (const pair of vpairs) {\n        if (options[pair.invalid]) {\n            const e = `'${pair.invalid}' is not a valid configuration option. Please use '${pair.expected}' instead. This library is using Axios for requests. Please see https://github.com/axios/axios to learn more about the valid request options.`;\n            throw new Error(e);\n        }\n    }\n}\nexports.validate = validate;\n//# sourceMappingURL=options.js.map","\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IAMAuth = void 0;\nclass IAMAuth {\n    /**\n     * IAM credentials.\n     *\n     * @param selector the iam authority selector\n     * @param token the token\n     * @constructor\n     */\n    constructor(selector, token) {\n        this.selector = selector;\n        this.token = token;\n        this.selector = selector;\n        this.token = token;\n    }\n    /**\n     * Acquire the HTTP headers required to make an authenticated request.\n     */\n    getRequestHeaders() {\n        return {\n            'x-goog-iam-authority-selector': this.selector,\n            'x-goog-iam-authorization-token': this.token,\n        };\n    }\n}\nexports.IAMAuth = IAMAuth;\n//# sourceMappingURL=iam.js.map","const { columnToLetter } = require('./utils');\n\nclass GoogleSpreadsheetRow {\n  constructor(parentSheet, rowNumber, data) {\n    this._sheet = parentSheet; // the parent GoogleSpreadsheetWorksheet instance\n    this._rowNumber = rowNumber; // the A1 row (1-indexed)\n    this._rawData = data;\n\n    for (let i = 0; i < this._sheet.headerValues.length; i++) {\n      const propName = this._sheet.headerValues[i];\n      if (!propName) continue; // skip empty header\n      Object.defineProperty(this, propName, {\n        get: () => this._rawData[i],\n        set: (newVal) => { this._rawData[i] = newVal; },\n        enumerable: true,\n      });\n    }\n\n    return this;\n  }\n\n  get rowNumber() { return this._rowNumber; }\n  // TODO: deprecate rowIndex - the name implies it should be zero indexed :(\n  get rowIndex() { return this._rowNumber; }\n  get a1Range() {\n    return [\n      this._sheet.a1SheetName,\n      '!',\n      `A${this._rowNumber}`,\n      ':',\n      `${columnToLetter(this._sheet.headerValues.length)}${this._rowNumber}`,\n    ].join('');\n  }\n\n  async save(options = {}) {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const response = await this._sheet._spreadsheet.axios.request({\n      method: 'put',\n      url: `/values/${encodeURIComponent(this.a1Range)}`,\n      params: {\n        valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n        includeValuesInResponse: true,\n      },\n      data: {\n        range: this.a1Range,\n        majorDimension: 'ROWS',\n        values: [this._rawData],\n      },\n    });\n    this._rawData = response.data.updatedData.values[0];\n  }\n\n  // delete this row\n  async delete() {\n    if (this._deleted) throw new Error('This row has been deleted - call getRows again before making updates.');\n\n    const result = await this._sheet._makeSingleUpdateRequest('deleteRange', {\n      range: {\n        sheetId: this._sheet.sheetId,\n        startRowIndex: this._rowNumber - 1, // this format is zero indexed, because of course...\n        endRowIndex: this._rowNumber,\n      },\n      shiftDimension: 'ROWS',\n    });\n    this._deleted = true;\n    return result;\n  }\n  async del() { return this.delete(); } // alias to mimic old version of this module\n}\n\nmodule.exports = GoogleSpreadsheetRow;\n","\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdTokenClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n    /**\n     * Google ID Token client\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options) {\n        super();\n        this.targetAudience = options.targetAudience;\n        this.idTokenProvider = options.idTokenProvider;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        if (!this.credentials.id_token ||\n            (this.credentials.expiry_date || 0) < Date.now()) {\n            const idToken = await this.idTokenProvider.fetchIdToken(this.targetAudience);\n            this.credentials = {\n                id_token: idToken,\n                expiry_date: this.getIdTokenExpiryDate(idToken),\n            };\n        }\n        const headers = {\n            Authorization: 'Bearer ' + this.credentials.id_token,\n        };\n        return { headers };\n    }\n    getIdTokenExpiryDate(idToken) {\n        const payloadB64 = idToken.split('.')[1];\n        if (payloadB64) {\n            const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n            return payload.exp * 1000;\n        }\n    }\n}\nexports.IdTokenClient = IdTokenClient;\n//# sourceMappingURL=idtokenclient.js.map","const _ = require('lodash');\n\nconst GoogleSpreadsheetRow = require('./GoogleSpreadsheetRow');\nconst GoogleSpreadsheetCell = require('./GoogleSpreadsheetCell');\n\nconst { getFieldMask, columnToLetter, letterToColumn } = require('./utils');\n\nfunction checkForDuplicateHeaders(headers) {\n  // check for duplicate headers\n  const checkForDupes = _.groupBy(headers); // { c1: ['c1'], c2: ['c2', 'c2' ]}\n  _.each(checkForDupes, (grouped, header) => {\n    if (!header) return; // empty columns are skipped, so multiple is ok\n    if (grouped.length > 1) {\n      throw new Error(`Duplicate header detected: \"${header}\". Please make sure all non-empty headers are unique`);\n    }\n  });\n}\n\nclass GoogleSpreadsheetWorksheet {\n  constructor(parentSpreadsheet, { properties, data }) {\n    this._spreadsheet = parentSpreadsheet; // the parent GoogleSpreadsheet instance\n\n    this._headerRowIndex = 1; // assume \"header row\" (for row-based calls) is in first row\n\n    // basic properties\n    this._rawProperties = properties;\n\n    this._cells = []; // we will use a 2d sparse array to store cells;\n\n    this._rowMetadata = []; // 1d sparse array\n    this._columnMetadata = [];\n\n    if (data) this._fillCellData(data);\n\n    return this;\n  }\n\n  // INTERNAL UTILITY FUNCTIONS ////////////////////////////////////////////////////////////////////\n  async _makeSingleUpdateRequest(requestType, requestParams) {\n    // pass the call up to the parent\n    return this._spreadsheet._makeSingleUpdateRequest(requestType, {\n      // sheetId: this.sheetId,\n      ...requestParams,\n    });\n  }\n\n  _ensureInfoLoaded() {\n    if (!this._rawProperties) {\n      throw new Error('You must call `doc.loadInfo()` again before accessing this property');\n    }\n  }\n\n  resetLocalCache(dataOnly) {\n    if (!dataOnly) this._rawProperties = null;\n    this.headerValues = null;\n    this._headerRowIndex = 1;\n    this._cells = [];\n  }\n\n  _fillCellData(dataRanges) {\n    _.each(dataRanges, (range) => {\n      const startRow = range.startRow || 0;\n      const startColumn = range.startColumn || 0;\n      const numRows = range.rowMetadata.length;\n      const numColumns = range.columnMetadata.length;\n\n      // update cell data for entire range\n      for (let i = 0; i < numRows; i++) {\n        const actualRow = startRow + i;\n        for (let j = 0; j < numColumns; j++) {\n          const actualColumn = startColumn + j;\n\n          // if the row has not been initialized yet, do it\n          if (!this._cells[actualRow]) this._cells[actualRow] = [];\n\n          // see if the response includes some info for the cell\n          const cellData = _.get(range, `rowData[${i}].values[${j}]`);\n\n          // update the cell object or create it\n          if (this._cells[actualRow][actualColumn]) {\n            this._cells[actualRow][actualColumn]._updateRawData(cellData);\n          } else {\n            this._cells[actualRow][actualColumn] = new GoogleSpreadsheetCell(\n              this,\n              actualRow,\n              actualColumn,\n              cellData\n            );\n          }\n        }\n      }\n\n      // update row metadata\n      for (let i = 0; i < range.rowMetadata.length; i++) {\n        this._rowMetadata[startRow + i] = range.rowMetadata[i];\n      }\n      // update column metadata\n      for (let i = 0; i < range.columnMetadata.length; i++) {\n        this._columnMetadata[startColumn + i] = range.columnMetadata[i];\n      }\n    });\n  }\n\n\n  // PROPERTY GETTERS //////////////////////////////////////////////////////////////////////////////\n  _getProp(param) {\n    this._ensureInfoLoaded();\n    return this._rawProperties[param];\n  }\n  _setProp(param, newVal) { // eslint-disable-line no-unused-vars\n    throw new Error('Do not update directly - use `updateProperties()`');\n  }\n\n  get sheetId() { return this._getProp('sheetId'); }\n  get title() { return this._getProp('title'); }\n  get index() { return this._getProp('index'); }\n  get sheetType() { return this._getProp('sheetType'); }\n  get gridProperties() { return this._getProp('gridProperties'); }\n  get hidden() { return this._getProp('hidden'); }\n  get tabColor() { return this._getProp('tabColor'); }\n  get rightToLeft() { return this._getProp('rightToLeft'); }\n\n  set sheetId(newVal) { return this._setProp('sheetId', newVal); }\n  set title(newVal) { return this._setProp('title', newVal); }\n  set index(newVal) { return this._setProp('index', newVal); }\n  set sheetType(newVal) { return this._setProp('sheetType', newVal); }\n  set gridProperties(newVal) { return this._setProp('gridProperties', newVal); }\n  set hidden(newVal) { return this._setProp('hidden', newVal); }\n  set tabColor(newVal) { return this._setProp('tabColor', newVal); }\n  set rightToLeft(newVal) { return this._setProp('rightToLeft', newVal); }\n\n  get rowCount() {\n    this._ensureInfoLoaded();\n    return this.gridProperties.rowCount;\n  }\n  get columnCount() {\n    this._ensureInfoLoaded();\n    return this.gridProperties.columnCount;\n  }\n  get colCount() { throw new Error('`colCount` is deprecated - please use `columnCount` instead.'); }\n  set rowCount(newVal) { throw new Error('Do not update directly. Use resize()'); }\n  set columnCount(newVal) { throw new Error('Do not update directly. Use resize()'); }\n\n  get a1SheetName() { return `'${this.title.replace(/'/g, \"''\")}'`; }\n  get encodedA1SheetName() { return encodeURIComponent(this.a1SheetName); }\n  get lastColumnLetter() { return columnToLetter(this.columnCount); }\n\n\n  // CELLS-BASED INTERACTIONS //////////////////////////////////////////////////////////////////////\n\n  get cellStats() {\n    let allCells = _.flatten(this._cells);\n    allCells = _.compact(allCells);\n    return {\n      nonEmpty: _.filter(allCells, (c) => c.value).length,\n      loaded: allCells.length,\n      total: this.rowCount * this.columnCount,\n    };\n  }\n\n  getCellByA1(a1Address) {\n    const split = a1Address.match(/([A-Z]+)([0-9]+)/);\n    const columnIndex = letterToColumn(split[1]);\n    const rowIndex = parseInt(split[2]);\n    return this.getCell(rowIndex - 1, columnIndex - 1);\n  }\n\n  getCell(rowIndex, columnIndex) {\n    if (rowIndex < 0 || columnIndex < 0) throw new Error('Min coordinate is 0, 0');\n    if (rowIndex >= this.rowCount || columnIndex >= this.columnCount) {\n      throw new Error(`Out of bounds, sheet is ${this.rowCount} by ${this.columnCount}`);\n    }\n\n    if (!_.get(this._cells, `[${rowIndex}][${columnIndex}]`)) {\n      throw new Error('This cell has not been loaded yet');\n    }\n    return this._cells[rowIndex][columnIndex];\n  }\n\n  async loadCells(sheetFilters) {\n    // load the whole sheet\n    if (!sheetFilters) return this._spreadsheet.loadCells(this.a1SheetName);\n\n    let filtersArray = _.isArray(sheetFilters) ? sheetFilters : [sheetFilters];\n    filtersArray = _.map(filtersArray, (filter) => {\n      // add sheet name to A1 ranges\n      if (_.isString(filter)) {\n        if (filter.startsWith(this.a1SheetName)) return filter;\n        return `${this.a1SheetName}!${filter}`;\n      }\n      if (_.isObject(filter)) {\n        // TODO: detect and support DeveloperMetadata filters\n        if (!filter.sheetId) {\n          return { sheetId: this.sheetId, ...filter };\n        }\n        if (filter.sheetId !== this.sheetId) {\n          throw new Error('Leave sheet ID blank or set to matching ID of this sheet');\n        } else {\n          return filter;\n        }\n      } else {\n        throw new Error('Each filter must be a A1 range string or gridrange object');\n      }\n    });\n    return this._spreadsheet.loadCells(filtersArray);\n  }\n\n  async saveUpdatedCells() {\n    const cellsToSave = _.filter(_.flatten(this._cells), { _isDirty: true });\n    if (cellsToSave.length) {\n      await this.saveCells(cellsToSave);\n    }\n    // TODO: do we want to return stats? or the cells that got updated?\n  }\n\n  async saveCells(cellsToUpdate) {\n    // we send an individual \"updateCells\" request for each cell\n    // because the fields that are udpated for each group are the same\n    // and we dont want to accidentally overwrite something\n    const requests = _.map(cellsToUpdate, (cell) => cell._getUpdateRequest());\n    const responseRanges = _.map(cellsToUpdate, (c) => `${this.a1SheetName}!${c.a1Address}`);\n\n    // if nothing is being updated the request returned is just `null`\n    // so we make sure at least 1 request is valid - otherwise google throws a 400\n    if (!_.compact(requests).length) {\n      throw new Error('At least one cell must have something to update');\n    }\n\n    await this._spreadsheet._makeBatchUpdateRequest(requests, responseRanges);\n  }\n\n  // SAVING THIS FOR FUTURE USE\n  // puts the cells that need updating into batches\n  // async updateCellsByBatches() {\n  //   // saving this code, but it's problematic because each group must have the same update fields\n  //   const cellsByRow = _.groupBy(cellsToUpdate, 'rowIndex');\n  //   const groupsToSave = [];\n  //   _.each(cellsByRow, (cells, rowIndex) => {\n  //     let cellGroup = [];\n  //     _.each(cells, (c) => {\n  //       if (!cellGroup.length) {\n  //         cellGroup.push(c);\n  //       } else if (\n  //         cellGroup[cellGroup.length - 1].columnIndex ===\n  //         c.columnIndex - 1\n  //       ) {\n  //         cellGroup.push(c);\n  //       } else {\n  //         groupsToSave.push(cellGroup);\n  //         cellGroup = [];\n  //       }\n  //     });\n  //     groupsToSave.push(cellGroup);\n  //   });\n  //   const requests = _.map(groupsToSave, (cellGroup) => ({\n  //     updateCells: {\n  //       rows: [\n  //         {\n  //           values: _.map(cellGroup, (cell) => ({\n  //             ...cell._draftData.value && {\n  //               userEnteredValue: { [cell._draftData.valueType]: cell._draftData.value },\n  //             },\n  //             ...cell._draftData.note !== undefined && {\n  //               note: cell._draftData.note ,\n  //             },\n  //             ...cell._draftData.userEnteredFormat && {\n  //               userEnteredValue: cell._draftData.userEnteredFormat,\n  //             },\n  //           })),\n  //         },\n  //       ],\n  //       fields: 'userEnteredValue,note,userEnteredFormat',\n  //       start: {\n  //         sheetId: this.sheetId,\n  //         rowIndex: cellGroup[0].rowIndex,\n  //         columnIndex: cellGroup[0].columnIndex,\n  //       },\n  //     },\n  //   }));\n  //   const responseRanges = _.map(groupsToSave, (cellGroup) => {\n  //     let a1Range = cellGroup[0].a1Address;\n  //     if (cellGroup.length > 1)\n  //       a1Range += `:${cellGroup[cellGroup.length - 1].a1Address}`;\n  //     return `${cellGroup[0]._sheet.a1SheetName}!${a1Range}`;\n  //   });\n  // }\n\n  // ROW BASED FUNCTIONS ///////////////////////////////////////////////////////////////////////////\n\n  async loadHeaderRow(headerRowIndex) {\n    if (headerRowIndex !== undefined) this._headerRowIndex = headerRowIndex;\n    const rows = await this.getCellsInRange(`A${this._headerRowIndex}:${this.lastColumnLetter}${this._headerRowIndex}`);\n    if (!rows) {\n      throw new Error('No values in the header row - fill the first row with header values before trying to interact with rows');\n    }\n    this.headerValues = _.map(rows[0], (header) => header.trim());\n    if (!_.compact(this.headerValues).length) {\n      throw new Error('All your header cells are blank - fill the first row with header values before trying to interact with rows');\n    }\n    checkForDuplicateHeaders(this.headerValues);\n  }\n\n  async setHeaderRow(headerValues, headerRowIndex) {\n    if (!headerValues) return;\n    if (headerValues.length > this.columnCount) {\n      throw new Error(`Sheet is not large enough to fit ${headerValues.length} columns. Resize the sheet first.`);\n    }\n    const trimmedHeaderValues = _.map(headerValues, (h) => h.trim());\n    checkForDuplicateHeaders(trimmedHeaderValues);\n\n    if (!_.compact(trimmedHeaderValues).length) {\n      throw new Error('All your header cells are blank -');\n    }\n\n    if (headerRowIndex) this._headerRowIndex = headerRowIndex;\n\n    const response = await this._spreadsheet.axios.request({\n      method: 'put',\n      url: `/values/${this.encodedA1SheetName}!${this._headerRowIndex}:${this._headerRowIndex}`,\n      params: {\n        valueInputOption: 'USER_ENTERED', // other option is RAW\n        includeValuesInResponse: true,\n      },\n      data: {\n        range: `${this.a1SheetName}!${this._headerRowIndex}:${this._headerRowIndex}`,\n        majorDimension: 'ROWS',\n        values: [[\n          ...trimmedHeaderValues,\n          // pad the rest of the row with empty values to clear them all out\n          ..._.times(this.columnCount - trimmedHeaderValues.length, () => ''),\n        ]],\n      },\n    });\n    this.headerValues = response.data.updatedData.values[0];\n  }\n\n  async addRows(rows, options = {}) {\n    // adds multiple rows in one API interaction using the append endpoint\n\n    // each row can be an array or object\n    // an array is just cells\n    // ex: ['column 1', 'column 2', 'column 3']\n    // an object must use the header row values as keys\n    // ex: { col1: 'column 1', col2: 'column 2', col3: 'column 3' }\n\n    // google bug that does not handle colons in names\n    // see https://issuetracker.google.com/issues/150373119\n    if (this.title.includes(':')) {\n      throw new Error('Please remove the \":\" from your sheet title. There is a bug with the google API which breaks appending rows if any colons are in the sheet title.');\n    }\n\n    if (!_.isArray(rows)) throw new Error('You must pass in an array of row values to append');\n\n    if (!this.headerValues) await this.loadHeaderRow();\n\n    // convert each row into an array of cell values rather than the key/value object\n    const rowsAsArrays = [];\n    _.each(rows, (row) => {\n      let rowAsArray;\n      if (_.isArray(row)) {\n        rowAsArray = row;\n      } else if (_.isObject(row)) {\n        rowAsArray = [];\n        for (let i = 0; i < this.headerValues.length; i++) {\n          const propName = this.headerValues[i];\n          rowAsArray[i] = row[propName];\n        }\n      } else {\n        throw new Error('Each row must be an object or an array');\n      }\n      rowsAsArrays.push(rowAsArray);\n    });\n\n    const response = await this._spreadsheet.axios.request({\n      method: 'post',\n      url: `/values/${this.encodedA1SheetName}!A${this._headerRowIndex}:append`,\n      params: {\n        valueInputOption: options.raw ? 'RAW' : 'USER_ENTERED',\n        insertDataOption: options.insert ? 'INSERT_ROWS' : 'OVERWRITE',\n        includeValuesInResponse: true,\n      },\n      data: {\n        values: rowsAsArrays,\n      },\n    });\n\n    // extract the new row number from the A1-notation data range in the response\n    // ex: in \"'Sheet8!A2:C2\" -- we want the `2`\n    const { updatedRange } = response.data.updates;\n    let rowNumber = updatedRange.match(/![A-Z]+([0-9]+):?/)[1];\n    rowNumber = parseInt(rowNumber);\n\n    // if new rows were added, we need update sheet.rowRount\n    if (options.insert) {\n      this._rawProperties.gridProperties.rowCount += rows.length;\n    } else if (rowNumber + rows.length > this.rowCount) {\n      // have to subtract 1 since one row was inserted at rowNumber\n      this._rawProperties.gridProperties.rowCount = rowNumber + rows.length - 1;\n    }\n\n    return _.map(response.data.updates.updatedData.values, (rowValues) => {\n      const row = new GoogleSpreadsheetRow(this, rowNumber++, rowValues);\n      return row;\n    });\n  }\n\n  async addRow(rowValues, options) {\n    const rows = await this.addRows([rowValues], options);\n    return rows[0];\n  }\n\n  async getRows(options = {}) {\n    // https://developers.google.com/sheets/api/guides/migration\n    // v4 API does not have equivalents for the row-order query parameters provided\n    // Reverse-order is trivial; simply process the returned values array in reverse order.\n    // Order by column is not supported for reads, but it is possible to sort the data then read\n\n    // v4 API does not currently have a direct equivalent for the Sheets API v3 structured queries\n    // However, you can retrieve the relevant data and sort through it as needed in your application\n\n    // options\n    // - offset\n    // - limit\n\n    options.offset = options.offset || 0;\n    options.limit = options.limit || this.rowCount - 1;\n\n    if (!this.headerValues) await this.loadHeaderRow();\n\n    const firstRow = 1 + this._headerRowIndex + options.offset;\n    const lastRow = firstRow + options.limit - 1; // inclusive so we subtract 1\n    const lastColumn = columnToLetter(this.headerValues.length);\n    const rawRows = await this.getCellsInRange(\n      `A${firstRow}:${lastColumn}${lastRow}`\n    );\n\n    if (!rawRows) return [];\n\n    const rows = [];\n    let rowNum = firstRow;\n    for (let i = 0; i < rawRows.length; i++) {\n      rows.push(new GoogleSpreadsheetRow(this, rowNum++, rawRows[i]));\n    }\n    return rows;\n  }\n\n  async clearRows(options = {}) {\n    // default to first row after header\n    const startRowIndex = options.start || this._headerRowIndex + 1;\n    const endRowIndex = options.end || this.rowCount;\n    await this._spreadsheet.axios.post(`/values/${this.encodedA1SheetName}!${startRowIndex}:${endRowIndex}:clear`);\n  }\n\n  // BASIC PROPS ///////////////////////////////////////////////////////////////////////////////////\n  async updateProperties(properties) {\n    // Request type = `updateSheetProperties`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateSheetPropertiesRequest\n\n    // properties\n    // - title (string)\n    // - index (number)\n    // - gridProperties ({ object (GridProperties) } - https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/sheets#gridproperties\n    // - hidden (boolean)\n    // - tabColor ({ object (Color) } - https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/other#Color\n    // - rightToLeft (boolean)\n\n    return this._makeSingleUpdateRequest('updateSheetProperties', {\n      properties: {\n        sheetId: this.sheetId,\n        ...properties,\n      },\n      fields: getFieldMask(properties),\n    });\n  }\n\n  async updateGridProperties(gridProperties) {\n    // just passes the call through to update gridProperties\n    // see https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/sheets#GridProperties\n\n    // gridProperties\n    // - rowCount\n    // - columnCount\n    // - frozenRowCount\n    // - frozenColumnCount\n    // - hideGridLines\n    return this.updateProperties({ gridProperties });\n  }\n\n  // just a shortcut because resize makes more sense to change rowCount / columnCount\n  async resize(gridProperties) {\n    return this.updateGridProperties(gridProperties);\n  }\n\n  async updateDimensionProperties(columnsOrRows, properties, bounds) {\n    // Request type = `updateDimensionProperties`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#updatedimensionpropertiesrequest\n\n    // columnsOrRows = COLUMNS|ROWS\n    // properties\n    // - pixelSize\n    // - hiddenByUser\n    // - developerMetadata\n    // bounds\n    // - startIndex\n    // - endIndex\n\n    return this._makeSingleUpdateRequest('updateDimensionProperties', {\n      range: {\n        sheetId: this.sheetId,\n        dimension: columnsOrRows,\n        ...bounds && {\n          startIndex: bounds.startIndex,\n          endIndex: bounds.endIndex,\n        },\n      },\n      properties,\n      fields: getFieldMask(properties),\n    });\n  }\n\n  // OTHER /////////////////////////////////////////////////////////////////////////////////////////\n\n  // this uses the \"values\" getter and does not give all the info about the cell contents\n  // it is used internally when loading header cells\n  async getCellsInRange(a1Range, options) {\n    const response = await this._spreadsheet.axios.get(`/values/${this.encodedA1SheetName}!${a1Range}`, {\n      params: options,\n    });\n    return response.data.values;\n  }\n\n  async updateNamedRange() {\n    // Request type = `updateNamedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateNamedRangeRequest\n  }\n\n  async addNamedRange() {\n    // Request type = `addNamedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddNamedRangeRequest\n  }\n\n  async deleteNamedRange() {\n    // Request type = `deleteNamedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteNamedRangeRequest\n  }\n\n  async repeatCell() {\n    // Request type = `repeatCell`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#RepeatCellRequest\n  }\n\n  async autoFill() {\n    // Request type = `autoFill`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AutoFillRequest\n  }\n\n  async cutPaste() {\n    // Request type = `cutPaste`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#CutPasteRequest\n  }\n\n  async copyPaste() {\n    // Request type = `copyPaste`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#CopyPasteRequest\n  }\n\n  async mergeCells(range, mergeType = 'MERGE_ALL') {\n    // Request type = `mergeCells`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#MergeCellsRequest\n    if (range.sheetId && range.sheetId !== this.sheetId) {\n      throw new Error('Leave sheet ID blank or set to matching ID of this sheet');\n    }\n    await this._makeSingleUpdateRequest('mergeCells', {\n      mergeType,\n      range: {\n        ...range,\n        sheetId: this.sheetId,\n      },\n    });\n  }\n\n  async unmergeCells(range) {\n    // Request type = `unmergeCells`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UnmergeCellsRequest\n    if (range.sheetId && range.sheetId !== this.sheetId) {\n      throw new Error('Leave sheet ID blank or set to matching ID of this sheet');\n    }\n    await this._makeSingleUpdateRequest('unmergeCells', {\n      range: {\n        ...range,\n        sheetId: this.sheetId,\n      },\n    });\n  }\n\n  async updateBorders() {\n    // Request type = `updateBorders`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateBordersRequest\n  }\n\n  async addFilterView() {\n    // Request type = `addFilterView`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddFilterViewRequest\n  }\n\n  async appendCells() {\n    // Request type = `appendCells`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AppendCellsRequest\n  }\n\n  async clearBasicFilter() {\n    // Request type = `clearBasicFilter`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#ClearBasicFilterRequest\n  }\n\n  async deleteDimension() {\n    // Request type = `deleteDimension`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteDimensionRequest\n  }\n\n  async deleteEmbeddedObject() {\n    // Request type = `deleteEmbeddedObject`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteEmbeddedObjectRequest\n  }\n\n  async deleteFilterView() {\n    // Request type = `deleteFilterView`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteFilterViewRequest\n  }\n\n  async duplicateFilterView() {\n    // Request type = `duplicateFilterView`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DuplicateFilterViewRequest\n  }\n\n  async duplicate(options = {}) {\n    // Request type = `duplicateSheet`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DuplicateSheetRequest\n    const response = await this._makeSingleUpdateRequest('duplicateSheet', {\n      sourceSheetId: this.sheetId,\n      ...options.index !== undefined && { insertSheetIndex: options.index },\n      ...options.id && { newSheetId: options.id },\n      ...options.title && { newSheetName: options.title },\n    });\n    const newSheetId = response.properties.sheetId;\n    return this._spreadsheet.sheetsById[newSheetId];\n  }\n\n  async findReplace() {\n    // Request type = `findReplace`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#FindReplaceRequest\n  }\n\n  async insertDimension(columnsOrRows, range, inheritFromBefore = null) {\n    // Request type = `insertDimension`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#InsertDimensionRequest\n\n    if (!columnsOrRows) throw new Error('You need to specify a dimension. i.e. COLUMNS|ROWS');\n    if (!_.isObject(range)) throw new Error('`range` must be an object containing `startIndex` and `endIndex`');\n    if (!_.isInteger(range.startIndex) || range.startIndex < 0) throw new Error('range.startIndex must be an integer >=0');\n    if (!_.isInteger(range.endIndex) || range.endIndex < 0) throw new Error('range.endIndex must be an integer >=0');\n    if (range.endIndex <= range.startIndex) throw new Error('range.endIndex must be greater than range.startIndex');\n\n    // default inheritFromBefore to true - unless inserting in the first row/column\n    if (inheritFromBefore === null) {\n      inheritFromBefore = range.startIndex > 0;\n    }\n\n    // do not allow inheritFromBefore if inserting at first row/column\n    if (inheritFromBefore && range.startIndex === 0) {\n      throw new Error('Cannot set inheritFromBefore to true if inserting in first row/column');\n    }\n\n    return this._makeSingleUpdateRequest('insertDimension', {\n      range: {\n        sheetId: this.sheetId,\n        dimension: columnsOrRows,\n        startIndex: range.startIndex,\n        endIndex: range.endIndex,\n      },\n      inheritFromBefore,\n    });\n  }\n\n  async insertRange() {\n    // Request type = `insertRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#InsertRangeRequest\n  }\n\n  async moveDimension() {\n    // Request type = `moveDimension`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#MoveDimensionRequest\n  }\n\n  async updateEmbeddedObjectPosition() {\n    // Request type = `updateEmbeddedObjectPosition`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateEmbeddedObjectPositionRequest\n  }\n\n  async pasteData() {\n    // Request type = `pasteData`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#PasteDataRequest\n  }\n\n  async textToColumns() {\n    // Request type = `textToColumns`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#TextToColumnsRequest\n  }\n\n  async updateFilterView() {\n    // Request type = `updateFilterView`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateFilterViewRequest\n  }\n\n  async deleteRange() {\n    // Request type = `deleteRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteRangeRequest\n  }\n\n  async appendDimension() {\n    // Request type = `appendDimension`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AppendDimensionRequest\n  }\n\n  async addConditionalFormatRule() {\n    // Request type = `addConditionalFormatRule`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddConditionalFormatRuleRequest\n  }\n\n  async updateConditionalFormatRule() {\n    // Request type = `updateConditionalFormatRule`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateConditionalFormatRuleRequest\n  }\n\n  async deleteConditionalFormatRule() {\n    // Request type = `deleteConditionalFormatRule`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteConditionalFormatRuleRequest\n  }\n\n  async sortRange() {\n    // Request type = `sortRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#SortRangeRequest\n  }\n\n  async setDataValidation() {\n    // Request type = `setDataValidation`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#SetDataValidationRequest\n  }\n\n  async setBasicFilter() {\n    // Request type = `setBasicFilter`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#SetBasicFilterRequest\n  }\n\n  async addProtectedRange() {\n    // Request type = `addProtectedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddProtectedRangeRequest\n  }\n\n  async updateProtectedRange() {\n    // Request type = `updateProtectedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateProtectedRangeRequest\n  }\n\n  async deleteProtectedRange() {\n    // Request type = `deleteProtectedRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteProtectedRangeRequest\n  }\n\n  async autoResizeDimensions() {\n    // Request type = `autoResizeDimensions`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AutoResizeDimensionsRequest\n  }\n\n  async addChart() {\n    // Request type = `addChart`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddChartRequest\n  }\n\n  async updateChartSpec() {\n    // Request type = `updateChartSpec`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateChartSpecRequest\n  }\n\n  async updateBanding() {\n    // Request type = `updateBanding`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateBandingRequest\n  }\n\n  async addBanding() {\n    // Request type = `addBanding`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddBandingRequest\n  }\n\n  async deleteBanding() {\n    // Request type = `deleteBanding`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteBandingRequest\n  }\n\n  async createDeveloperMetadata() {\n    // Request type = `createDeveloperMetadata`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#CreateDeveloperMetadataRequest\n  }\n\n  async updateDeveloperMetadata() {\n    // Request type = `updateDeveloperMetadata`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateDeveloperMetadataRequest\n  }\n\n  async deleteDeveloperMetadata() {\n    // Request type = `deleteDeveloperMetadata`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteDeveloperMetadataRequest\n  }\n\n  async randomizeRange() {\n    // Request type = `randomizeRange`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#RandomizeRangeRequest\n  }\n\n  async addDimensionGroup() {\n    // Request type = `addDimensionGroup`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddDimensionGroupRequest\n  }\n\n  async deleteDimensionGroup() {\n    // Request type = `deleteDimensionGroup`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteDimensionGroupRequest\n  }\n\n  async updateDimensionGroup() {\n    // Request type = `updateDimensionGroup`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateDimensionGroupRequest\n  }\n\n  async trimWhitespace() {\n    // Request type = `trimWhitespace`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#TrimWhitespaceRequest\n  }\n\n  async deleteDuplicates() {\n    // Request type = `deleteDuplicates`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteDuplicatesRequest\n  }\n\n  async addSlicer() {\n    // Request type = `addSlicer`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddSlicerRequest\n  }\n\n  async updateSlicerSpec() {\n    // Request type = `updateSlicerSpec`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#UpdateSlicerSpecRequest\n  }\n\n  // delete this worksheet\n  async delete() {\n    return this._spreadsheet.deleteSheet(this.sheetId);\n  }\n  async del() { return this.delete(); } // alias to mimic old interface\n\n  // copies this worksheet into another document/spreadsheet\n  async copyToSpreadsheet(destinationSpreadsheetId) {\n    return this._spreadsheet.axios.post(`/sheets/${this.sheetId}:copyTo`, {\n      destinationSpreadsheetId,\n    });\n  }\n\n  async clear(a1Range) {\n    // clears data in the sheet - defaults to entire sheet\n    const range = a1Range ? `!${a1Range}` : '';\n    // sheet name without ie 'sheet1' rather than 'sheet1'!A1:B5 is all cells\n    await this._spreadsheet.axios.post(`/values/${this.encodedA1SheetName}${range}:clear`);\n    this.resetLocalCache(true);\n  }\n  async downloadAsCSV(returnStreamInsteadOfBuffer = false) {\n    return this._spreadsheet._downloadAs('csv', this.sheetId, returnStreamInsteadOfBuffer);\n  }\n  async downloadAsTSV(returnStreamInsteadOfBuffer = false) {\n    return this._spreadsheet._downloadAs('tsv', this.sheetId, returnStreamInsteadOfBuffer);\n  }\n  async downloadAsPDF(returnStreamInsteadOfBuffer = false) {\n    return this._spreadsheet._downloadAs('pdf', this.sheetId, returnStreamInsteadOfBuffer);\n  }\n}\n\nmodule.exports = GoogleSpreadsheetWorksheet;\n","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserCrypto = void 0;\n// This file implements crypto functions we need using in-browser\n// SubtleCrypto interface `window.crypto.subtle`.\nconst base64js = require(\"base64-js\");\n// Not all browsers support `TextEncoder`. The following `require` will\n// provide a fast UTF8-only replacement for those browsers that don't support\n// text encoding natively.\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\nif (typeof process === 'undefined' && typeof TextEncoder === 'undefined') {\n    require('fast-text-encoding');\n}\nclass BrowserCrypto {\n    constructor() {\n        if (typeof window === 'undefined' ||\n            window.crypto === undefined ||\n            window.crypto.subtle === undefined) {\n            throw new Error(\"SubtleCrypto not found. Make sure it's an https:// website.\");\n        }\n    }\n    async sha256DigestBase64(str) {\n        // SubtleCrypto digest() method is async, so we must make\n        // this method async as well.\n        // To calculate SHA256 digest using SubtleCrypto, we first\n        // need to convert an input string to an ArrayBuffer:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const inputBuffer = new TextEncoder().encode(str);\n        // Result is ArrayBuffer as well.\n        const outputBuffer = await window.crypto.subtle.digest('SHA-256', inputBuffer);\n        return base64js.fromByteArray(new Uint8Array(outputBuffer));\n    }\n    randomBytesBase64(count) {\n        const array = new Uint8Array(count);\n        window.crypto.getRandomValues(array);\n        return base64js.fromByteArray(array);\n    }\n    static padBase64(base64) {\n        // base64js requires padding, so let's add some '='\n        while (base64.length % 4 !== 0) {\n            base64 += '=';\n        }\n        return base64;\n    }\n    async verify(pubkey, data, signature) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const signatureArray = base64js.toByteArray(BrowserCrypto.padBase64(signature));\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', pubkey, algo, true, ['verify']);\n        // SubtleCrypto's verify method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.verify(algo, cryptoKey, signatureArray, dataArray);\n        return result;\n    }\n    async sign(privateKey, data) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', privateKey, algo, true, ['sign']);\n        // SubtleCrypto's sign method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.sign(algo, cryptoKey, dataArray);\n        return base64js.fromByteArray(new Uint8Array(result));\n    }\n    decodeBase64StringUtf8(base64) {\n        const uint8array = base64js.toByteArray(BrowserCrypto.padBase64(base64));\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const result = new TextDecoder().decode(uint8array);\n        return result;\n    }\n    encodeBase64StringUtf8(text) {\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const uint8array = new TextEncoder().encode(text);\n        const result = base64js.fromByteArray(uint8array);\n        return result;\n    }\n}\nexports.BrowserCrypto = BrowserCrypto;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n    return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n    return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n    return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n    return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n    header = header.toLowerCase();\n    for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n        if (header === key.toLowerCase()) {\n            return options.headers[key];\n        }\n    }\n    return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n    const proxy = process.env.HTTPS_PROXY ||\n        process.env.https_proxy ||\n        process.env.HTTP_PROXY ||\n        process.env.http_proxy;\n    if (proxy) {\n        HttpsProxyAgent = require('https-proxy-agent');\n    }\n    return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n    var _a;\n    const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n    if (!noProxyEnv) {\n        return false;\n    }\n    const noProxyUrls = noProxyEnv.split(',');\n    const parsedURL = new url_1.URL(url);\n    return !!noProxyUrls.find(url => {\n        if (url.startsWith('*.') || url.startsWith('.')) {\n            url = url.replace(/^\\*\\./, '.');\n            return parsedURL.hostname.endsWith(url);\n        }\n        else {\n            return url === parsedURL.origin || url === parsedURL.hostname;\n        }\n    });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n    // If there is a match between the no_proxy env variables and the url, then do not proxy\n    if (skipProxy(url)) {\n        return undefined;\n        // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n    }\n    else {\n        return loadProxy();\n    }\n}\nclass Gaxios {\n    /**\n     * The Gaxios class is responsible for making HTTP requests.\n     * @param defaults The default set of options to be used for this instance.\n     */\n    constructor(defaults) {\n        this.agentCache = new Map();\n        this.defaults = defaults || {};\n    }\n    /**\n     * Perform an HTTP request with the given options.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async request(opts = {}) {\n        opts = this.validateOpts(opts);\n        return this._request(opts);\n    }\n    async _defaultAdapter(opts) {\n        const fetchImpl = opts.fetchImplementation || fetch;\n        const res = (await fetchImpl(opts.url, opts));\n        const data = await this.getResponseData(opts, res);\n        return this.translateResponse(opts, res, data);\n    }\n    /**\n     * Internal, retryable version of the `request` method.\n     * @param opts Set of HTTP options that will be used for this HTTP request.\n     */\n    async _request(opts = {}) {\n        try {\n            let translatedResponse;\n            if (opts.adapter) {\n                translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n            }\n            else {\n                translatedResponse = await this._defaultAdapter(opts);\n            }\n            if (!opts.validateStatus(translatedResponse.status)) {\n                throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n            }\n            return translatedResponse;\n        }\n        catch (e) {\n            const err = e;\n            err.config = opts;\n            const { shouldRetry, config } = await retry_1.getRetryConfig(e);\n            if (shouldRetry && config) {\n                err.config.retryConfig.currentRetryAttempt =\n                    config.retryConfig.currentRetryAttempt;\n                return this._request(err.config);\n            }\n            throw err;\n        }\n    }\n    async getResponseData(opts, res) {\n        switch (opts.responseType) {\n            case 'stream':\n                return res.body;\n            case 'json': {\n                let data = await res.text();\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (_a) {\n                    // continue\n                }\n                return data;\n            }\n            case 'arraybuffer':\n                return res.arrayBuffer();\n            case 'blob':\n                return res.blob();\n            default:\n                return res.text();\n        }\n    }\n    /**\n     * Validates the options, and merges them with defaults.\n     * @param opts The original options passed from the client.\n     */\n    validateOpts(options) {\n        const opts = extend_1.default(true, {}, this.defaults, options);\n        if (!opts.url) {\n            throw new Error('URL is required.');\n        }\n        // baseUrl has been deprecated, remove in 2.0\n        const baseUrl = opts.baseUrl || opts.baseURL;\n        if (baseUrl) {\n            opts.url = baseUrl + opts.url;\n        }\n        opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n        if (opts.params && Object.keys(opts.params).length > 0) {\n            let additionalQueryParams = opts.paramsSerializer(opts.params);\n            if (additionalQueryParams.startsWith('?')) {\n                additionalQueryParams = additionalQueryParams.slice(1);\n            }\n            const prefix = opts.url.includes('?') ? '&' : '?';\n            opts.url = opts.url + prefix + additionalQueryParams;\n        }\n        if (typeof options.maxContentLength === 'number') {\n            opts.size = options.maxContentLength;\n        }\n        if (typeof options.maxRedirects === 'number') {\n            opts.follow = options.maxRedirects;\n        }\n        opts.headers = opts.headers || {};\n        if (opts.data) {\n            const isFormData = typeof FormData === 'undefined'\n                ? false\n                : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n            if (is_stream_1.default.readable(opts.data)) {\n                opts.body = opts.data;\n            }\n            else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n                // Do not attempt to JSON.stringify() a Buffer:\n                opts.body = opts.data;\n                if (!hasHeader(opts, 'Content-Type')) {\n                    opts.headers['Content-Type'] = 'application/json';\n                }\n            }\n            else if (typeof opts.data === 'object') {\n                // If www-form-urlencoded content type has been set, but data is\n                // provided as an object, serialize the content using querystring:\n                if (!isFormData) {\n                    if (getHeader(opts, 'content-type') ===\n                        'application/x-www-form-urlencoded') {\n                        opts.body = opts.paramsSerializer(opts.data);\n                    }\n                    else {\n                        // } else if (!(opts.data instanceof FormData)) {\n                        if (!hasHeader(opts, 'Content-Type')) {\n                            opts.headers['Content-Type'] = 'application/json';\n                        }\n                        opts.body = JSON.stringify(opts.data);\n                    }\n                }\n            }\n            else {\n                opts.body = opts.data;\n            }\n        }\n        opts.validateStatus = opts.validateStatus || this.validateStatus;\n        opts.responseType = opts.responseType || 'json';\n        if (!opts.headers['Accept'] && opts.responseType === 'json') {\n            opts.headers['Accept'] = 'application/json';\n        }\n        opts.method = opts.method || 'GET';\n        const proxy = getProxy(opts.url);\n        if (proxy) {\n            if (this.agentCache.has(proxy)) {\n                opts.agent = this.agentCache.get(proxy);\n            }\n            else {\n                // Proxy is being used in conjunction with mTLS.\n                if (opts.cert && opts.key) {\n                    const parsedURL = new url_1.URL(proxy);\n                    opts.agent = new HttpsProxyAgent({\n                        port: parsedURL.port,\n                        host: parsedURL.host,\n                        protocol: parsedURL.protocol,\n                        cert: opts.cert,\n                        key: opts.key,\n                    });\n                }\n                else {\n                    opts.agent = new HttpsProxyAgent(proxy);\n                }\n                this.agentCache.set(proxy, opts.agent);\n            }\n        }\n        else if (opts.cert && opts.key) {\n            // Configure client for mTLS:\n            if (this.agentCache.has(opts.key)) {\n                opts.agent = this.agentCache.get(opts.key);\n            }\n            else {\n                opts.agent = new https_1.Agent({\n                    cert: opts.cert,\n                    key: opts.key,\n                });\n                this.agentCache.set(opts.key, opts.agent);\n            }\n        }\n        return opts;\n    }\n    /**\n     * By default, throw for any non-2xx status code\n     * @param status status code from the HTTP response\n     */\n    validateStatus(status) {\n        return status >= 200 && status < 300;\n    }\n    /**\n     * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n     * @param params key value pars to encode\n     */\n    paramsSerializer(params) {\n        return querystring_1.default.stringify(params);\n    }\n    translateResponse(opts, res, data) {\n        // headers need to be converted from a map to an obj\n        const headers = {};\n        res.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            config: opts,\n            data: data,\n            headers,\n            status: res.status,\n            statusText: res.statusText,\n            // XMLHttpRequestLike\n            request: {\n                responseURL: res.url,\n            },\n        };\n    }\n}\nexports.Gaxios = Gaxios;\n//# sourceMappingURL=gaxios.js.map","\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPem = void 0;\nconst fs = require(\"fs\");\nconst forge = require(\"node-forge\");\nconst util_1 = require(\"util\");\nconst readFile = util_1.promisify(fs.readFile);\nfunction getPem(filename, callback) {\n    if (callback) {\n        getPemAsync(filename)\n            .then(pem => callback(null, pem))\n            .catch(err => callback(err, null));\n    }\n    else {\n        return getPemAsync(filename);\n    }\n}\nexports.getPem = getPem;\nfunction getPemAsync(filename) {\n    return readFile(filename, { encoding: 'base64' }).then(keyp12 => {\n        return convertToPem(keyp12);\n    });\n}\n/**\n * Converts a P12 in base64 encoding to a pem.\n * @param p12base64 String containing base64 encoded p12.\n * @returns a string containing the pem.\n */\nfunction convertToPem(p12base64) {\n    const p12Der = forge.util.decode64(p12base64);\n    const p12Asn1 = forge.asn1.fromDer(p12Der);\n    const p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'notasecret');\n    const bags = p12.getBags({ friendlyName: 'privatekey' });\n    if (bags.friendlyName) {\n        const privateKey = bags.friendlyName[0].key;\n        const pem = forge.pki.privateKeyToPem(privateKey);\n        return pem.replace(/\\r\\n/g, '\\n');\n    }\n    else {\n        throw new Error('Unable to get friendly name.');\n    }\n}\n//# sourceMappingURL=index.js.map","class GoogleSpreadsheetFormulaError {\n  constructor(errorInfo) {\n    this.type = errorInfo.type;\n    this.message = errorInfo.message;\n  }\n}\n\nmodule.exports = {\n  GoogleSpreadsheetFormulaError,\n};\n","\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWTAccess = void 0;\nconst jws = require(\"jws\");\nconst LRU = require(\"lru-cache\");\nconst DEFAULT_HEADER = {\n    alg: 'RS256',\n    typ: 'JWT',\n};\nclass JWTAccess {\n    /**\n     * JWTAccess service account credentials.\n     *\n     * Create a new access token by using the credential to create a new JWT token\n     * that's recognized as the access token.\n     *\n     * @param email the service account email address.\n     * @param key the private key that will be used to sign the token.\n     * @param keyId the ID of the private key used to sign the token.\n     */\n    constructor(email, key, keyId, eagerRefreshThresholdMillis) {\n        this.cache = new LRU({\n            max: 500,\n            maxAge: 60 * 60 * 1000,\n        });\n        this.email = email;\n        this.key = key;\n        this.keyId = keyId;\n        this.eagerRefreshThresholdMillis = eagerRefreshThresholdMillis !== null && eagerRefreshThresholdMillis !== void 0 ? eagerRefreshThresholdMillis : 5 * 60 * 1000;\n    }\n    /**\n     * Get a non-expired access token, after refreshing if necessary.\n     *\n     * @param url The URI being authorized.\n     * @param additionalClaims An object with a set of additional claims to\n     * include in the payload.\n     * @returns An object that includes the authorization header.\n     */\n    getRequestHeaders(url, additionalClaims) {\n        // Return cached authorization headers, unless we are within\n        // eagerRefreshThresholdMillis ms of them expiring:\n        const cachedToken = this.cache.get(url);\n        const now = Date.now();\n        if (cachedToken &&\n            cachedToken.expiration - now > this.eagerRefreshThresholdMillis) {\n            return cachedToken.headers;\n        }\n        const iat = Math.floor(Date.now() / 1000);\n        const exp = JWTAccess.getExpirationTime(iat);\n        // The payload used for signed JWT headers has:\n        // iss == sub == <client email>\n        // aud == <the authorization uri>\n        const defaultClaims = {\n            iss: this.email,\n            sub: this.email,\n            aud: url,\n            exp,\n            iat,\n        };\n        // if additionalClaims are provided, ensure they do not collide with\n        // other required claims.\n        if (additionalClaims) {\n            for (const claim in defaultClaims) {\n                if (additionalClaims[claim]) {\n                    throw new Error(`The '${claim}' property is not allowed when passing additionalClaims. This claim is included in the JWT by default.`);\n                }\n            }\n        }\n        const header = this.keyId\n            ? { ...DEFAULT_HEADER, kid: this.keyId }\n            : DEFAULT_HEADER;\n        const payload = Object.assign(defaultClaims, additionalClaims);\n        // Sign the jwt and add it to the cache\n        const signedJWT = jws.sign({ header, payload, secret: this.key });\n        const headers = { Authorization: `Bearer ${signedJWT}` };\n        this.cache.set(url, {\n            expiration: exp * 1000,\n            headers,\n        });\n        return headers;\n    }\n    /**\n     * Returns an expiration time for the JWT token.\n     *\n     * @param iat The issued at time for the JWT.\n     * @returns An expiration time for the JWT.\n     */\n    static getExpirationTime(iat) {\n        const exp = iat + 3600; // 3600 seconds = 1 hour\n        return exp;\n    }\n    /**\n     * Create a JWTAccess credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                reject(new Error('Must pass in a stream containing the service account auth settings.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('data', chunk => (s += chunk))\n                .on('error', reject)\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        });\n    }\n}\nexports.JWTAccess = JWTAccess;\n//# sourceMappingURL=jwtaccess.js.map","const GoogleSpreadsheet = require('./lib/GoogleSpreadsheet');\nconst GoogleSpreadsheetWorksheet = require('./lib/GoogleSpreadsheetWorksheet');\nconst GoogleSpreadsheetRow = require('./lib/GoogleSpreadsheetRow');\n\nconst { GoogleSpreadsheetFormulaError } = require('./lib/errors');\n\nmodule.exports = {\n  GoogleSpreadsheet,\n  GoogleSpreadsheetWorksheet,\n  GoogleSpreadsheetRow,\n\n  GoogleSpreadsheetFormulaError,\n};\n","\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWT = void 0;\nconst gtoken_1 = require(\"gtoken\");\nconst jwtaccess_1 = require(\"./jwtaccess\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass JWT extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrEmail, keyFile, key, scopes, subject, keyId) {\n        const opts = optionsOrEmail && typeof optionsOrEmail === 'object'\n            ? optionsOrEmail\n            : { email: optionsOrEmail, keyFile, key, keyId, scopes, subject };\n        super({\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this.email = opts.email;\n        this.keyFile = opts.keyFile;\n        this.key = opts.key;\n        this.keyId = opts.keyId;\n        this.scopes = opts.scopes;\n        this.subject = opts.subject;\n        this.additionalClaims = opts.additionalClaims;\n        this.credentials = { refresh_token: 'jwt-placeholder', expiry_date: 1 };\n    }\n    /**\n     * Creates a copy of the credential with the specified scopes.\n     * @param scopes List of requested scopes or a single scope.\n     * @return The cloned instance.\n     */\n    createScoped(scopes) {\n        return new JWT({\n            email: this.email,\n            keyFile: this.keyFile,\n            key: this.key,\n            keyId: this.keyId,\n            scopes,\n            subject: this.subject,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Obtains the metadata to be sent with the request.\n     *\n     * @param url the URI being authorized.\n     */\n    async getRequestMetadataAsync(url) {\n        if (!this.apiKey && !this.hasUserScopes() && url) {\n            if (this.additionalClaims &&\n                this.additionalClaims.target_audience) {\n                const { tokens } = await this.refreshToken();\n                return {\n                    headers: this.addSharedMetadataHeaders({\n                        Authorization: `Bearer ${tokens.id_token}`,\n                    }),\n                };\n            }\n            else {\n                // no scopes have been set, but a uri has been provided. Use JWTAccess\n                // credentials.\n                if (!this.access) {\n                    this.access = new jwtaccess_1.JWTAccess(this.email, this.key, this.keyId, this.eagerRefreshThresholdMillis);\n                }\n                const headers = await this.access.getRequestHeaders(url, this.additionalClaims);\n                return { headers: this.addSharedMetadataHeaders(headers) };\n            }\n        }\n        else if (this.hasAnyScopes() || this.apiKey) {\n            return super.getRequestMetadataAsync(url);\n        }\n        else {\n            // If no audience, apiKey, or scopes are provided, we should not attempt\n            // to populate any headers:\n            return { headers: {} };\n        }\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        // Create a new gToken for fetching an ID token\n        const gtoken = new gtoken_1.GoogleToken({\n            iss: this.email,\n            sub: this.subject,\n            scope: this.scopes || this.defaultScopes,\n            keyFile: this.keyFile,\n            key: this.key,\n            additionalClaims: { target_audience: targetAudience },\n        });\n        await gtoken.getToken({\n            forceRefresh: true,\n        });\n        if (!gtoken.idToken) {\n            throw new Error('Unknown error: Failed to fetch ID token');\n        }\n        return gtoken.idToken;\n    }\n    /**\n     * Determine if there are currently scopes available.\n     */\n    hasUserScopes() {\n        if (!this.scopes) {\n            return false;\n        }\n        return this.scopes.length > 0;\n    }\n    /**\n     * Are there any default or user scopes defined.\n     */\n    hasAnyScopes() {\n        if (this.scopes && this.scopes.length > 0)\n            return true;\n        if (this.defaultScopes && this.defaultScopes.length > 0)\n            return true;\n        return false;\n    }\n    authorize(callback) {\n        if (callback) {\n            this.authorizeAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.authorizeAsync();\n        }\n    }\n    async authorizeAsync() {\n        const result = await this.refreshToken();\n        if (!result) {\n            throw new Error('No result returned');\n        }\n        this.credentials = result.tokens;\n        this.credentials.refresh_token = 'jwt-placeholder';\n        this.key = this.gtoken.key;\n        this.email = this.gtoken.iss;\n        return result.tokens;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken ignored\n     * @private\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const gtoken = this.createGToken();\n        const token = await gtoken.getToken({\n            forceRefresh: this.isTokenExpiring(),\n        });\n        const tokens = {\n            access_token: token.access_token,\n            token_type: 'Bearer',\n            expiry_date: gtoken.expiresAt,\n            id_token: gtoken.idToken,\n        };\n        this.emit('tokens', tokens);\n        return { res: null, tokens };\n    }\n    /**\n     * Create a gToken if it doesn't already exist.\n     */\n    createGToken() {\n        if (!this.gtoken) {\n            this.gtoken = new gtoken_1.GoogleToken({\n                iss: this.email,\n                sub: this.subject,\n                scope: this.scopes || this.defaultScopes,\n                keyFile: this.keyFile,\n                key: this.key,\n                additionalClaims: this.additionalClaims,\n            });\n        }\n        return this.gtoken;\n    }\n    /**\n     * Create a JWT credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the service account auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    /**\n     * Creates a JWT credentials instance using an API Key for authentication.\n     * @param apiKey The API Key in string form.\n     */\n    fromAPIKey(apiKey) {\n        if (typeof apiKey !== 'string') {\n            throw new Error('Must provide an API Key string.');\n        }\n        this.apiKey = apiKey;\n    }\n    /**\n     * Using the key or keyFile on the JWT client, obtain an object that contains\n     * the key and the client email.\n     */\n    async getCredentials() {\n        if (this.key) {\n            return { private_key: this.key, client_email: this.email };\n        }\n        else if (this.keyFile) {\n            const gtoken = this.createGToken();\n            const creds = await gtoken.getCredentials(this.keyFile);\n            return { private_key: creds.privateKey, client_email: creds.clientEmail };\n        }\n        throw new Error('A key or a keyFile must be provided to getCredentials.');\n    }\n}\nexports.JWT = JWT;\n//# sourceMappingURL=jwtclient.js.map","\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compute = void 0;\nconst arrify = require(\"arrify\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass Compute extends oauth2client_1.OAuth2Client {\n    /**\n     * Google Compute Engine service account credentials.\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options = {}) {\n        super(options);\n        // Start with an expired refresh token, which will automatically be\n        // refreshed before the first API call is made.\n        this.credentials = { expiry_date: 1, refresh_token: 'compute-placeholder' };\n        this.serviceAccountEmail = options.serviceAccountEmail || 'default';\n        this.scopes = arrify(options.scopes);\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken Unused parameter\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const tokenPath = `service-accounts/${this.serviceAccountEmail}/token`;\n        let data;\n        try {\n            const instanceOptions = {\n                property: tokenPath,\n            };\n            if (this.scopes.length > 0) {\n                instanceOptions.params = {\n                    scopes: this.scopes.join(','),\n                };\n            }\n            data = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not refresh access token: ${e.message}`;\n            this.wrapError(e);\n            throw e;\n        }\n        const tokens = data;\n        if (data && data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res: null };\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        const idTokenPath = `service-accounts/${this.serviceAccountEmail}/identity` +\n            `?format=full&audience=${targetAudience}`;\n        let idToken;\n        try {\n            const instanceOptions = {\n                property: idTokenPath,\n            };\n            idToken = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not fetch ID token: ${e.message}`;\n            throw e;\n        }\n        return idToken;\n    }\n    wrapError(e) {\n        const res = e.response;\n        if (res && res.status) {\n            e.code = res.status.toString();\n            if (res.status === 403) {\n                e.message =\n                    'A Forbidden error was returned while attempting to retrieve an access ' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have the correct permission scopes specified: ' +\n                        e.message;\n            }\n            else if (res.status === 404) {\n                e.message =\n                    'A Not Found error was returned while attempting to retrieve an access' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have any permission scopes specified: ' +\n                        e.message;\n            }\n        }\n    }\n}\nexports.Compute = Compute;\n//# sourceMappingURL=computeclient.js.map","const _ = require('lodash');\nconst { JWT } = require('google-auth-library');\nconst Axios = require('axios');\n\nconst GoogleSpreadsheetWorksheet = require('./GoogleSpreadsheetWorksheet');\nconst { getFieldMask } = require('./utils');\n\nconst GOOGLE_AUTH_SCOPES = [\n  'https://www.googleapis.com/auth/spreadsheets',\n\n  // the list from the sheets v4 auth for spreadsheets.get\n  // 'https://www.googleapis.com/auth/drive',\n  // 'https://www.googleapis.com/auth/drive.readonly',\n  // 'https://www.googleapis.com/auth/drive.file',\n  // 'https://www.googleapis.com/auth/spreadsheets',\n  // 'https://www.googleapis.com/auth/spreadsheets.readonly',\n];\n\nconst AUTH_MODES = {\n  JWT: 'JWT',\n  API_KEY: 'API_KEY',\n  RAW_ACCESS_TOKEN: 'RAW_ACCESS_TOKEN',\n  OAUTH: 'OAUTH',\n};\n\nclass GoogleSpreadsheet {\n  constructor(sheetId) {\n    this.spreadsheetId = sheetId;\n    this.authMode = null;\n    this._rawSheets = {};\n    this._rawProperties = null;\n    this._spreadsheetUrl = null;\n\n    // create an axios instance with sheet root URL and interceptors to handle auth\n    this.axios = Axios.create({\n      baseURL: `https://sheets.googleapis.com/v4/spreadsheets/${sheetId || ''}`,\n      // send arrays in params with duplicate keys - ie `?thing=1&thing=2` vs `?thing[]=1...`\n      // solution taken from https://github.com/axios/axios/issues/604\n      paramsSerializer(params) {\n        let options = '';\n        _.keys(params).forEach((key) => {\n          const isParamTypeObject = typeof params[key] === 'object';\n          const isParamTypeArray = isParamTypeObject && (params[key].length >= 0);\n          if (!isParamTypeObject) options += `${key}=${encodeURIComponent(params[key])}&`;\n          if (isParamTypeObject && isParamTypeArray) {\n            _.each(params[key], (val) => {\n              options += `${key}=${encodeURIComponent(val)}&`;\n            });\n          }\n        });\n        return options ? options.slice(0, -1) : options;\n      },\n    });\n    // have to use bind here or the functions dont have access to `this` :(\n    this.axios.interceptors.request.use(this._setAxiosRequestAuth.bind(this));\n    this.axios.interceptors.response.use(\n      this._handleAxiosResponse.bind(this),\n      this._handleAxiosErrors.bind(this)\n    );\n\n    return this;\n  }\n\n  // CREATE NEW DOC ////////////////////////////////////////////////////////////////////////////////\n  async createNewSpreadsheetDocument(properties) {\n    // see updateProperties for more info about available properties\n\n    if (this.spreadsheetId) {\n      throw new Error('Only call `createNewSpreadsheetDocument()` on a GoogleSpreadsheet object that has no spreadsheetId set');\n    }\n    const response = await this.axios.post(this.url, {\n      properties,\n    });\n    this.spreadsheetId = response.data.spreadsheetId;\n    this.axios.defaults.baseURL += this.spreadsheetId;\n\n    this._rawProperties = response.data.properties;\n    _.each(response.data.sheets, (s) => this._updateOrCreateSheet(s));\n  }\n\n  // AUTH RELATED FUNCTIONS ////////////////////////////////////////////////////////////////////////\n  async useApiKey(key) {\n    this.authMode = AUTH_MODES.API_KEY;\n    this.apiKey = key;\n  }\n\n  // token must be created and managed (refreshed) elsewhere\n  async useRawAccessToken(token) {\n    this.authMode = AUTH_MODES.RAW_ACCESS_TOKEN;\n    this.accessToken = token;\n  }\n\n  async useOAuth2Client(oAuth2Client) {\n    this.authMode = AUTH_MODES.OAUTH;\n    this.oAuth2Client = oAuth2Client;\n  }\n\n  // creds should be an object obtained by loading the json file google gives you\n  // impersonateAs is an email of any user in the G Suite domain\n  // (only works if service account has domain-wide delegation enabled)\n  async useServiceAccountAuth(creds, impersonateAs = null) {\n    this.jwtClient = new JWT({\n      email: creds.client_email,\n      key: creds.private_key,\n      scopes: GOOGLE_AUTH_SCOPES,\n      subject: impersonateAs,\n    });\n    await this.renewJwtAuth();\n  }\n\n  async renewJwtAuth() {\n    this.authMode = AUTH_MODES.JWT;\n    await this.jwtClient.authorize();\n    /*\n    returned token looks like\n      {\n        access_token: 'secret-token...',\n        token_type: 'Bearer',\n        expiry_date: 1576005020000,\n        id_token: undefined,\n        refresh_token: 'jwt-placeholder'\n      }\n    */\n  }\n\n  // TODO: provide mechanism to share single JWT auth between docs?\n\n  // INTERNAL UTILITY FUNCTIONS ////////////////////////////////////////////////////////////////////\n  async _setAxiosRequestAuth(config) {\n    // TODO: check auth mode, if valid, renew if expired, etc\n    if (this.authMode === AUTH_MODES.JWT) {\n      if (!this.jwtClient) throw new Error('JWT auth is not set up properly');\n      // this seems to do the right thing and only renew the token if expired\n      await this.jwtClient.authorize();\n      config.headers.Authorization = `Bearer ${this.jwtClient.credentials.access_token}`;\n    } else if (this.authMode === AUTH_MODES.RAW_ACCESS_TOKEN) {\n      if (!this.accessToken) throw new Error('Invalid access token');\n      config.headers.Authorization = `Bearer ${this.accessToken}`;\n    } else if (this.authMode === AUTH_MODES.API_KEY) {\n      if (!this.apiKey) throw new Error('Please set API key');\n      config.params = config.params || {};\n      config.params.key = this.apiKey;\n    } else if (this.authMode === AUTH_MODES.OAUTH) {\n      const credentials = await this.oAuth2Client.getAccessToken();\n      config.headers.Authorization = `Bearer ${credentials.token}`;\n    } else {\n      throw new Error('You must initialize some kind of auth before making any requests');\n    }\n    return config;\n  }\n\n  async _handleAxiosResponse(response) { return response; }\n  async _handleAxiosErrors(error) {\n    // console.log(error);\n    if (error.response && error.response.data) {\n      // usually the error has a code and message, but occasionally not\n      if (!error.response.data.error) throw error;\n\n      const { code, message } = error.response.data.error;\n      error.message = `Google API error - [${code}] ${message}`;\n      throw error;\n    }\n\n    if (_.get(error, 'response.status') === 403) {\n      if (this.authMode === AUTH_MODES.API_KEY) {\n        throw new Error('Sheet is private. Use authentication or make public. (see https://github.com/theoephraim/node-google-spreadsheet#a-note-on-authentication for details)');\n      }\n    }\n    throw error;\n  }\n\n  async _makeSingleUpdateRequest(requestType, requestParams) {\n    const response = await this.axios.post(':batchUpdate', {\n      requests: [{ [requestType]: requestParams }],\n      includeSpreadsheetInResponse: true,\n      // responseRanges: [string]\n      // responseIncludeGridData: true\n    });\n\n    this._updateRawProperties(response.data.updatedSpreadsheet.properties);\n    _.each(response.data.updatedSpreadsheet.sheets, (s) => this._updateOrCreateSheet(s));\n    // console.log('API RESPONSE', response.data.replies[0][requestType]);\n    return response.data.replies[0][requestType];\n  }\n\n  async _makeBatchUpdateRequest(requests, responseRanges) {\n    // this is used for updating batches of cells\n    const response = await this.axios.post(':batchUpdate', {\n      requests,\n      includeSpreadsheetInResponse: true,\n      ...responseRanges && {\n        responseIncludeGridData: true,\n        ...responseRanges !== '*' && { responseRanges },\n      },\n    });\n\n    this._updateRawProperties(response.data.updatedSpreadsheet.properties);\n    _.each(response.data.updatedSpreadsheet.sheets, (s) => this._updateOrCreateSheet(s));\n  }\n\n  _ensureInfoLoaded() {\n    if (!this._rawProperties) throw new Error('You must call `doc.loadInfo()` before accessing this property');\n  }\n\n  _updateRawProperties(newProperties) { this._rawProperties = newProperties; }\n\n  _updateOrCreateSheet({ properties, data }) {\n    const { sheetId } = properties;\n    if (!this._rawSheets[sheetId]) {\n      this._rawSheets[sheetId] = new GoogleSpreadsheetWorksheet(this, { properties, data });\n    } else {\n      this._rawSheets[sheetId]._rawProperties = properties;\n      this._rawSheets[sheetId]._fillCellData(data);\n    }\n  }\n\n  // BASIC PROPS //////////////////////////////////////////////////////////////////////////////\n  _getProp(param) {\n    this._ensureInfoLoaded();\n    return this._rawProperties[param];\n  }\n  _setProp(param, newVal) { // eslint-disable-line no-unused-vars\n    throw new Error('Do not update directly - use `updateProperties()`');\n  }\n\n  get title() { return this._getProp('title'); }\n  get locale() { return this._getProp('locale'); }\n  get timeZone() { return this._getProp('timeZone'); }\n  get autoRecalc() { return this._getProp('autoRecalc'); }\n  get defaultFormat() { return this._getProp('defaultFormat'); }\n  get spreadsheetTheme() { return this._getProp('spreadsheetTheme'); }\n  get iterativeCalculationSettings() { return this._getProp('iterativeCalculationSettings'); }\n\n  set title(newVal) { this._setProp('title', newVal); }\n  set locale(newVal) { this._setProp('locale', newVal); }\n  set timeZone(newVal) { this._setProp('timeZone', newVal); }\n  set autoRecalc(newVal) { this._setProp('autoRecalc', newVal); }\n  set defaultFormat(newVal) { this._setProp('defaultFormat', newVal); }\n  set spreadsheetTheme(newVal) { this._setProp('spreadsheetTheme', newVal); }\n  set iterativeCalculationSettings(newVal) { this._setProp('iterativeCalculationSettings', newVal); }\n\n  async updateProperties(properties) {\n    // updateSpreadsheetProperties\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#SpreadsheetProperties\n\n    /*\n      title (string) - title of the spreadsheet\n      locale (string) - ISO code\n      autoRecalc (enum) - ON_CHANGE|MINUTE|HOUR\n      timeZone (string) - timezone code\n      iterativeCalculationSettings (object) - see https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#IterativeCalculationSettings\n     */\n\n    await this._makeSingleUpdateRequest('updateSpreadsheetProperties', {\n      properties,\n      fields: getFieldMask(properties),\n    });\n  }\n\n  // BASIC INFO ////////////////////////////////////////////////////////////////////////////////////\n  async loadInfo(includeCells) {\n    const response = await this.axios.get('/', {\n      params: {\n        ...includeCells && { includeGridData: true },\n      },\n    });\n    this._spreadsheetUrl = response.data.spreadsheetUrl;\n    this._rawProperties = response.data.properties;\n    _.each(response.data.sheets, (s) => this._updateOrCreateSheet(s));\n  }\n  async getInfo() { return this.loadInfo(); } // alias to mimic old version\n\n  resetLocalCache() {\n    this._rawProperties = null;\n    this._rawSheets = {};\n  }\n\n  // WORKSHEETS ////////////////////////////////////////////////////////////////////////////////////\n  get sheetCount() {\n    this._ensureInfoLoaded();\n    return _.values(this._rawSheets).length;\n  }\n\n  get sheetsById() {\n    this._ensureInfoLoaded();\n    return this._rawSheets;\n  }\n\n  get sheetsByIndex() {\n    this._ensureInfoLoaded();\n    return _.sortBy(this._rawSheets, 'index');\n  }\n\n  get sheetsByTitle() {\n    this._ensureInfoLoaded();\n    return _.keyBy(this._rawSheets, 'title');\n  }\n\n  async addSheet(properties = {}) {\n    // Request type = `addSheet`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#AddSheetRequest\n\n    const response = await this._makeSingleUpdateRequest('addSheet', {\n      properties: _.omit(properties, 'headers', 'headerValues', 'headerRowIndex'),\n    });\n    // _makeSingleUpdateRequest already adds the sheet\n    const newSheetId = response.properties.sheetId;\n    const newSheet = this.sheetsById[newSheetId];\n\n    // allow it to work with `.headers` but `.headerValues` is the real prop\n    const headers = properties.headerValues || properties.headers;\n    if (headers) {\n      await newSheet.setHeaderRow(headers, properties.headerRowIndex);\n    }\n\n    return newSheet;\n  }\n  async addWorksheet(properties) { return this.addSheet(properties); } // alias to mimic old version\n\n  async deleteSheet(sheetId) {\n    // Request type = `deleteSheet`\n    // https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#DeleteSheetRequest\n    await this._makeSingleUpdateRequest('deleteSheet', { sheetId });\n    delete this._rawSheets[sheetId];\n  }\n\n  // NAMED RANGES //////////////////////////////////////////////////////////////////////////////////\n  async addNamedRange(name, range, namedRangeId) {\n    // namedRangeId is optional\n    return this._makeSingleUpdateRequest('addNamedRange', {\n      name,\n      range,\n      namedRangeId,\n    });\n  }\n\n  async deleteNamedRange(namedRangeId) {\n    return this._makeSingleUpdateRequest('deleteNamedRange', { namedRangeId });\n  }\n\n  // LOADING CELLS /////////////////////////////////////////////////////////////////////////////////\n  async loadCells(filters) {\n    // you can pass in a single filter or an array of filters\n    // strings are treated as a1 ranges\n    // objects are treated as GridRange objects\n    // TODO: make it support DeveloperMetadataLookup objects\n\n    // TODO: switch to this mode if using a read-only auth token?\n    const readOnlyMode = this.authMode === AUTH_MODES.API_KEY;\n\n    const filtersArray = _.isArray(filters) ? filters : [filters];\n    const dataFilters = _.map(filtersArray, (filter) => {\n      if (_.isString(filter)) {\n        return readOnlyMode ? filter : { a1Range: filter };\n      }\n      if (_.isObject(filter)) {\n        if (readOnlyMode) {\n          throw new Error('Only A1 ranges are supported when fetching cells with read-only access (using only an API key)');\n        }\n        // TODO: make this support Developer Metadata filters\n        return { gridRange: filter };\n      }\n      throw new Error('Each filter must be an A1 range string or a gridrange object');\n    });\n\n    let result;\n    // when using an API key only, we must use the regular get endpoint\n    // because :getByDataFilter requires higher access\n    if (this.authMode === AUTH_MODES.API_KEY) {\n      result = await this.axios.get('/', {\n        params: {\n          includeGridData: true,\n          ranges: dataFilters,\n        },\n      });\n    // otherwise we use the getByDataFilter endpoint because it is more flexible\n    } else {\n      result = await this.axios.post(':getByDataFilter', {\n        includeGridData: true,\n        dataFilters,\n      });\n    }\n\n    const { sheets } = result.data;\n    _.each(sheets, (sheet) => { this._updateOrCreateSheet(sheet); });\n  }\n\n  // EXPORTING /////////////////////////////////////////////////////////////\n  async _downloadAs(fileType, worksheetId, returnStreamInsteadOfBuffer) {\n    // see https://stackoverflow.com/questions/11619805/using-the-google-drive-api-to-download-a-spreadsheet-in-csv-format/51235960#51235960\n\n    if (['html', 'xlsx', 'ods'].includes(fileType)) {\n      if (worksheetId) throw new Error(`Cannot specify worksheetId when exporting as ${fileType}`);\n    } else if (['csv', 'tsv', 'pdf'].includes(fileType)) {\n      if (worksheetId === undefined) throw new Error(`Must specify worksheetId when exporting as ${fileType}`);\n    } else {\n      throw new Error(`unsupported export fileType - ${fileType}`);\n    }\n\n    // google UI shows \"html\" but passes through \"zip\"\n    if (fileType === 'html') fileType = 'zip';\n\n    const exportUrl = this._spreadsheetUrl.replace('/edit', '/export');\n    const response = await this.axios.get(exportUrl, {\n      baseUrl: '', // unset baseUrl since we're not hitting the normal sheets API\n      params: {\n        id: this.spreadsheetId,\n        format: fileType,\n        ...worksheetId && { gid: worksheetId },\n      },\n      responseType: returnStreamInsteadOfBuffer ? 'stream' : 'arraybuffer',\n    });\n    return response.data;\n  }\n  async downloadAsHTML(returnStreamInsteadOfBuffer = false) {\n    return this._downloadAs('html', null, returnStreamInsteadOfBuffer);\n  }\n  async downloadAsXLSX(returnStreamInsteadOfBuffer = false) {\n    return this._downloadAs('xlsx', null, returnStreamInsteadOfBuffer);\n  }\n  async downloadAsODS(returnStreamInsteadOfBuffer = false) {\n    return this._downloadAs('ods', null, returnStreamInsteadOfBuffer);\n  }\n}\n\nmodule.exports = GoogleSpreadsheet;\n","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeCrypto = void 0;\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n    async sha256DigestBase64(str) {\n        return crypto.createHash('sha256').update(str).digest('base64');\n    }\n    randomBytesBase64(count) {\n        return crypto.randomBytes(count).toString('base64');\n    }\n    async verify(pubkey, data, signature) {\n        const verifier = crypto.createVerify('sha256');\n        verifier.update(data);\n        verifier.end();\n        return verifier.verify(pubkey, signature, 'base64');\n    }\n    async sign(privateKey, data) {\n        const signer = crypto.createSign('RSA-SHA256');\n        signer.update(data);\n        signer.end();\n        return signer.sign(privateKey, 'base64');\n    }\n    decodeBase64StringUtf8(base64) {\n        return Buffer.from(base64, 'base64').toString('utf-8');\n    }\n    encodeBase64StringUtf8(text) {\n        return Buffer.from(text, 'utf-8').toString('base64');\n    }\n}\nexports.NodeCrypto = NodeCrypto;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? util_1.promisify(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await gaxios_1.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && e.response.data ? e.response.data : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map","(function(scope) {'use strict';\nfunction B(r,e){var f;return r instanceof Buffer?f=r:f=Buffer.from(r.buffer,r.byteOffset,r.byteLength),f.toString(e)}var w=function(r){return Buffer.from(r)};function h(r){for(var e=0,f=Math.min(256*256,r.length+1),n=new Uint16Array(f),i=[],o=0;;){var t=e<r.length;if(!t||o>=f-1){var s=n.subarray(0,o),m=s;if(i.push(String.fromCharCode.apply(null,m)),!t)return i.join(\"\");r=r.subarray(e),e=0,o=0}var a=r[e++];if((a&128)===0)n[o++]=a;else if((a&224)===192){var d=r[e++]&63;n[o++]=(a&31)<<6|d}else if((a&240)===224){var d=r[e++]&63,l=r[e++]&63;n[o++]=(a&31)<<12|d<<6|l}else if((a&248)===240){var d=r[e++]&63,l=r[e++]&63,R=r[e++]&63,c=(a&7)<<18|d<<12|l<<6|R;c>65535&&(c-=65536,n[o++]=c>>>10&1023|55296,c=56320|c&1023),n[o++]=c}}}function F(r){for(var e=0,f=r.length,n=0,i=Math.max(32,f+(f>>>1)+7),o=new Uint8Array(i>>>3<<3);e<f;){var t=r.charCodeAt(e++);if(t>=55296&&t<=56319){if(e<f){var s=r.charCodeAt(e);(s&64512)===56320&&(++e,t=((t&1023)<<10)+(s&1023)+65536)}if(t>=55296&&t<=56319)continue}if(n+4>o.length){i+=8,i*=1+e/r.length*2,i=i>>>3<<3;var m=new Uint8Array(i);m.set(o),o=m}if((t&4294967168)===0){o[n++]=t;continue}else if((t&4294965248)===0)o[n++]=t>>>6&31|192;else if((t&4294901760)===0)o[n++]=t>>>12&15|224,o[n++]=t>>>6&63|128;else if((t&4292870144)===0)o[n++]=t>>>18&7|240,o[n++]=t>>>12&63|128,o[n++]=t>>>6&63|128;else continue;o[n++]=t&63|128}return o.slice?o.slice(0,n):o.subarray(0,n)}var u=\"Failed to \",p=function(r,e,f){if(r)throw new Error(\"\".concat(u).concat(e,\": the '\").concat(f,\"' option is unsupported.\"))};var x=typeof Buffer==\"function\"&&Buffer.from;var A=x?w:F;function v(){this.encoding=\"utf-8\"}v.prototype.encode=function(r,e){return p(e&&e.stream,\"encode\",\"stream\"),A(r)};function U(r){var e;try{var f=new Blob([r],{type:\"text/plain;charset=UTF-8\"});e=URL.createObjectURL(f);var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(),n.responseText}finally{e&&URL.revokeObjectURL(e)}}var O=!x&&typeof Blob==\"function\"&&typeof URL==\"function\"&&typeof URL.createObjectURL==\"function\",S=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"],T=h;x?T=B:O&&(T=function(r){try{return U(r)}catch(e){return h(r)}});var y=\"construct 'TextDecoder'\",E=\"\".concat(u,\" \").concat(y,\": the \");function g(r,e){p(e&&e.fatal,y,\"fatal\"),r=r||\"utf-8\";var f;if(x?f=Buffer.isEncoding(r):f=S.indexOf(r.toLowerCase())!==-1,!f)throw new RangeError(\"\".concat(E,\" encoding label provided ('\").concat(r,\"') is invalid.\"));this.encoding=r,this.fatal=!1,this.ignoreBOM=!1}g.prototype.decode=function(r,e){p(e&&e.stream,\"decode\",\"stream\");var f;return r instanceof Uint8Array?f=r:r.buffer instanceof ArrayBuffer?f=new Uint8Array(r.buffer):f=new Uint8Array(r),T(f,this.encoding)};scope.TextEncoder=scope.TextEncoder||v;scope.TextDecoder=scope.TextDecoder||g;\n}(typeof window !== 'undefined' ? window : (typeof global !== 'undefined' ? global : this)));\n"],"sourceRoot":""}