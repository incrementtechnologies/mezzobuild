{"version":3,"sources":["webpack:///./node_modules/google-auth-library/build/src/transporters.js","webpack:///./node_modules/google-auth-library/build/src/auth/refreshclient.js","webpack:///./node_modules/google-auth-library/build/src/auth/googleauth.js","webpack:///./node_modules/google-auth-library/build/src/auth/loginticket.js","webpack:///./node_modules/google-auth-library/build/src/auth/envDetect.js","webpack:///./node_modules/google-auth-library/build/src/index.js","webpack:///./node_modules/google-auth-library/node_modules/yallist/yallist.js","webpack:///./node_modules/google-auth-library/build/src/auth/oauth2client.js","webpack:///./node_modules/google-auth-library/build/src/auth/authclient.js","webpack:///./node_modules/google-auth-library/build/src/crypto/crypto.js","webpack:///./node_modules/google-auth-library/build/src/options.js","webpack:///./node_modules/google-auth-library/node_modules/lru-cache/index.js","webpack:///./node_modules/google-auth-library/build/src/auth/iam.js","webpack:///./node_modules/google-auth-library/build/src/auth/idtokenclient.js","webpack:///./node_modules/google-auth-library/build/src/crypto/browser/crypto.js","webpack:///./node_modules/google-auth-library/node_modules/yallist/iterator.js","webpack:///./node_modules/google-auth-library/build/src/auth/jwtaccess.js","webpack:///./node_modules/google-auth-library/build/src/auth/jwtclient.js","webpack:///./node_modules/google-auth-library/build/src/auth/computeclient.js","webpack:///./node_modules/google-auth-library/build/src/crypto/node/crypto.js"],"names":["Object","defineProperty","exports","value","DefaultTransporter","gaxios_1","options_1","pkg","PRODUCT_NAME","opts","headers","window","uaValue","includes","USER_AGENT","authVersion","version","nodeVersion","process","replace","callback","this","configure","validate","e","request","catch","processError","then","r","res","response","err","body","data","error","status","message","code","toString","Array","isArray","errors","map","err2","join","UserRefreshClient","oauth2client_1","OAuth2Client","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","forceRefreshOnFailure","clientId","super","_refreshToken","credentials","refresh_token","refreshTokenNoCache","json","Error","type","client_id","client_secret","_clientId","_clientSecret","quotaProjectId","quota_project_id","inputStream","fromStreamAsync","Promise","resolve","reject","s","setEncoding","on","chunk","JSON","parse","fromJSON","GoogleAuth","CLOUD_SDK_CLIENT_ID","child_process_1","fs","gcpMetadata","os","path","crypto_1","transporters_1","computeclient_1","idtokenclient_1","envDetect_1","jwtclient_1","refreshclient_1","checkIsGCE","undefined","jsonContent","cachedCredential","_cachedProjectId","projectId","keyFilename","keyFile","scopes","clientOptions","getProjectIdAsync","_getDefaultProjectIdPromise","async","getProductionProjectId","getFileProjectId","getDefaultServiceProjectId","getGCEProjectId","optionsOrCallback","options","getApplicationDefaultAsync","credential","isGCE","_tryGetApplicationCredentialsFromEnvironmentVariable","JWT","defaultScopes","getProjectId","_tryGetApplicationCredentialsFromWellKnownFile","_checkIsGCE","Compute","isAvailable","credentialsPath","length","_getApplicationCredentialsFromFilePath","location","_isWindows","home","existsSync","client","filePath","realpathSync","lstatSync","isFile","readStream","createReadStream","fromStream","_cacheClientFromJSON","apiKey","fromAPIKey","sys","platform","substring","toLowerCase","exec","stdout","configuration","properties","core","project","creds","getClient","getCredentialsAsync","client_email","private_key","instance","property","params","recursive","default","email","stream","targetAudience","IdTokenClient","idTokenProvider","getAccessToken","token","url","getRequestHeaders","uri","assign","getEnv","crypto","createCrypto","key","sign","getCredentials","method","payload","encodeBase64StringUtf8","signedBlob","LoginTicket","env","pay","envelope","getPayload","sub","getEnvelope","clear","GCPEnv","envPromise","getEnvMemoized","NONE","isAppEngine","APP_ENGINE","isCloudFunction","CLOUD_FUNCTIONS","isComputeEngine","isKubernetesEngine","KUBERNETES_ENGINE","COMPUTE_ENGINE","GAE_SERVICE","GAE_MODULE_NAME","FUNCTION_NAME","FUNCTION_TARGET","auth","googleauth_1","enumerable","get","iam_1","IAMAuth","jwtaccess_1","JWTAccess","CodeChallengeMethod","loginticket_1","Yallist","list","self","tail","head","forEach","item","push","arguments","i","l","insert","node","inserted","Node","next","prev","unshift","module","create","prototype","removeNode","unshiftNode","pushNode","pop","shift","fn","thisp","walker","call","forEachReverse","n","getReverse","mapReverse","reduce","initial","acc","TypeError","reduceReverse","toArray","arr","toArrayReverse","slice","from","to","ret","sliceReverse","splice","start","deleteCount","nodes","reverse","p","er","CertificateFormat","querystring","formatEcdsa","authclient_1","AuthClient","redirectUri","certificateCache","certificateExpiry","certificateCacheFormat","PEM","refreshTokenPromises","Map","code_challenge_method","code_challenge","response_type","redirect_uri","scope","rootUrl","GOOGLE_OAUTH2_AUTH_BASE_URL_","stringify","randomString","randomBytesBase64","codeVerifier","unencodedCodeChallenge","sha256DigestBase64","codeChallenge","split","codeOrOptions","getTokenAsync","tokens","GOOGLE_OAUTH2_TOKEN_URL_","values","grant_type","code_verifier","transporter","expires_in","expiry_date","Date","getTime","emit","has","delete","set","refreshAccessTokenAsync","getAccessTokenAsync","shouldRefresh","access_token","isTokenExpiring","getRequestMetadataAsync","thisCreds","token_type","Authorization","addSharedMetadataHeaders","parameters","GOOGLE_OAUTH2_REVOKE_URL_","getRevokeTokenUrl","revokeCredentialsAsync","revokeToken","requestAsync","retry","r2","statusCode","mayRequireRefresh","isReadableStream","config","Readable","isAuthErr","verifyIdTokenAsync","idToken","getFederatedSignonCertsAsync","login","verifySignedJwtWithCertsAsync","certs","audience","ISSUERS_","maxExpiry","accessToken","GOOGLE_TOKEN_INFO_URL","info","nowTime","format","hasBrowserCrypto","JWK","GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_","GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_","cacheControl","cacheAge","pattern","RegExp","regexResult","Number","certificates","keys","kid","now","getIapPublicKeysAsync","pubkeys","GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_","jwt","requiredAudience","issuers","MAX_TOKEN_LIFETIME_SECS_","segments","signed","signature","decodeBase64StringUtf8","hasOwnProperty","cert","alg","joseToDer","verified","verify","iat","exp","isNaN","earliest","CLOCK_SKEW_SECS_","latest","indexOf","iss","aud","audVerified","constructor","expiryDate","events_1","EventEmitter","crypto_2","BrowserCrypto","NodeCrypto","subtle","vpairs","invalid","expected","pair","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","max","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","trim","allowStale","mA","lC","hit","forEachStep","k","isStale","v","filter","h","len","del","Entry","expiresAt","doUse","diff","selector","id_token","fetchIdToken","getIdTokenExpiryDate","payloadB64","Buffer","base64js","TextEncoder","str","inputBuffer","encode","outputBuffer","digest","fromByteArray","Uint8Array","count","array","getRandomValues","base64","pubkey","algo","name","hash","dataArray","signatureArray","toByteArray","padBase64","cryptoKey","importKey","result","privateKey","uint8array","TextDecoder","decode","text","iterator","jws","LRU","DEFAULT_HEADER","typ","keyId","cache","additionalClaims","cachedToken","expiration","Math","floor","getExpirationTime","defaultClaims","claim","header","signedJWT","secret","private_key_id","project_id","gtoken_1","optionsOrEmail","subject","hasUserScopes","hasAnyScopes","target_audience","access","gtoken","GoogleToken","getToken","forceRefresh","authorizeAsync","createGToken","clientEmail","arrify","serviceAccountEmail","tokenPath","instanceOptions","wrapError","idTokenPath","createHash","update","randomBytes","verifier","createVerify","end","signer","createSign"],"mappings":"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","file":"js/chunk-vendors~42e53ad7.1868e958.js","sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultTransporter = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst options_1 = require(\"./options\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\nconst PRODUCT_NAME = 'google-api-nodejs-client';\nclass DefaultTransporter {\n    /**\n     * Configures request options before making a request.\n     * @param opts GaxiosOptions options.\n     * @return Configured options.\n     */\n    configure(opts = {}) {\n        opts.headers = opts.headers || {};\n        if (typeof window === 'undefined') {\n            // set transporter user agent if not in browser\n            const uaValue = opts.headers['User-Agent'];\n            if (!uaValue) {\n                opts.headers['User-Agent'] = DefaultTransporter.USER_AGENT;\n            }\n            else if (!uaValue.includes(`${PRODUCT_NAME}/`)) {\n                opts.headers['User-Agent'] = `${uaValue} ${DefaultTransporter.USER_AGENT}`;\n            }\n            // track google-auth-library-nodejs version:\n            const authVersion = `auth/${pkg.version}`;\n            if (opts.headers['x-goog-api-client'] &&\n                !opts.headers['x-goog-api-client'].includes(authVersion)) {\n                opts.headers['x-goog-api-client'] = `${opts.headers['x-goog-api-client']} ${authVersion}`;\n            }\n            else if (!opts.headers['x-goog-api-client']) {\n                const nodeVersion = process.version.replace(/^v/, '');\n                opts.headers['x-goog-api-client'] = `gl-node/${nodeVersion} ${authVersion}`;\n            }\n        }\n        return opts;\n    }\n    request(opts, callback) {\n        // ensure the user isn't passing in request-style options\n        opts = this.configure(opts);\n        try {\n            options_1.validate(opts);\n        }\n        catch (e) {\n            if (callback) {\n                return callback(e);\n            }\n            else {\n                throw e;\n            }\n        }\n        if (callback) {\n            gaxios_1.request(opts).then(r => {\n                callback(null, r);\n            }, e => {\n                callback(this.processError(e));\n            });\n        }\n        else {\n            return gaxios_1.request(opts).catch(e => {\n                throw this.processError(e);\n            });\n        }\n    }\n    /**\n     * Changes the error to include details from the body.\n     */\n    processError(e) {\n        const res = e.response;\n        const err = e;\n        const body = res ? res.data : null;\n        if (res && body && body.error && res.status !== 200) {\n            if (typeof body.error === 'string') {\n                err.message = body.error;\n                err.code = res.status.toString();\n            }\n            else if (Array.isArray(body.error.errors)) {\n                err.message = body.error.errors\n                    .map((err2) => err2.message)\n                    .join('\\n');\n                err.code = body.error.code;\n                err.errors = body.error.errors;\n            }\n            else {\n                err.message = body.error.message;\n                err.code = body.error.code || res.status;\n            }\n        }\n        else if (res && res.status >= 400) {\n            // Consider all 4xx and 5xx responses errors.\n            err.message = body;\n            err.code = res.status.toString();\n        }\n        return err;\n    }\n}\nexports.DefaultTransporter = DefaultTransporter;\n/**\n * Default user agent.\n */\nDefaultTransporter.USER_AGENT = `${PRODUCT_NAME}/${pkg.version}`;\n//# sourceMappingURL=transporters.js.map","\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRefreshClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n                forceRefreshOnFailure,\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this._refreshToken = opts.refreshToken;\n        this.credentials.refresh_token = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.CLOUD_SDK_CLIENT_ID = void 0;\nconst child_process_1 = require(\"child_process\");\nconst fs = require(\"fs\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst transporters_1 = require(\"../transporters\");\nconst computeclient_1 = require(\"./computeclient\");\nconst idtokenclient_1 = require(\"./idtokenclient\");\nconst envDetect_1 = require(\"./envDetect\");\nconst jwtclient_1 = require(\"./jwtclient\");\nconst refreshclient_1 = require(\"./refreshclient\");\nexports.CLOUD_SDK_CLIENT_ID = '764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com';\nclass GoogleAuth {\n    constructor(opts) {\n        /**\n         * Caches a value indicating whether the auth layer is running on Google\n         * Compute Engine.\n         * @private\n         */\n        this.checkIsGCE = undefined;\n        // To save the contents of the JSON credential file\n        this.jsonContent = null;\n        this.cachedCredential = null;\n        opts = opts || {};\n        this._cachedProjectId = opts.projectId || null;\n        this.keyFilename = opts.keyFilename || opts.keyFile;\n        this.scopes = opts.scopes;\n        this.jsonContent = opts.credentials || null;\n        this.clientOptions = opts.clientOptions;\n    }\n    // Note:  this properly is only public to satisify unit tests.\n    // https://github.com/Microsoft/TypeScript/issues/5228\n    get isGCE() {\n        return this.checkIsGCE;\n    }\n    getProjectId(callback) {\n        if (callback) {\n            this.getProjectIdAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getProjectIdAsync();\n        }\n    }\n    getProjectIdAsync() {\n        if (this._cachedProjectId) {\n            return Promise.resolve(this._cachedProjectId);\n        }\n        // In implicit case, supports three environments. In order of precedence,\n        // the implicit environments are:\n        // - GCLOUD_PROJECT or GOOGLE_CLOUD_PROJECT environment variable\n        // - GOOGLE_APPLICATION_CREDENTIALS JSON file\n        // - Cloud SDK: `gcloud config config-helper --format json`\n        // - GCE project ID from metadata server)\n        if (!this._getDefaultProjectIdPromise) {\n            // TODO: refactor the below code so that it doesn't mix and match\n            // promises and async/await.\n            this._getDefaultProjectIdPromise = new Promise(\n            // eslint-disable-next-line no-async-promise-executor\n            async (resolve, reject) => {\n                try {\n                    const projectId = this.getProductionProjectId() ||\n                        (await this.getFileProjectId()) ||\n                        (await this.getDefaultServiceProjectId()) ||\n                        (await this.getGCEProjectId());\n                    this._cachedProjectId = projectId;\n                    if (!projectId) {\n                        throw new Error('Unable to detect a Project Id in the current environment. \\n' +\n                            'To learn more about authentication and Google APIs, visit: \\n' +\n                            'https://cloud.google.com/docs/authentication/getting-started');\n                    }\n                    resolve(projectId);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        }\n        return this._getDefaultProjectIdPromise;\n    }\n    getApplicationDefault(optionsOrCallback = {}, callback) {\n        let options;\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.getApplicationDefaultAsync(options).then(r => callback(null, r.credential, r.projectId), callback);\n        }\n        else {\n            return this.getApplicationDefaultAsync(options);\n        }\n    }\n    async getApplicationDefaultAsync(options = {}) {\n        // If we've already got a cached credential, just return it.\n        if (this.cachedCredential) {\n            return {\n                credential: this.cachedCredential,\n                projectId: await this.getProjectIdAsync(),\n            };\n        }\n        let credential;\n        let projectId;\n        // Check for the existence of a local environment variable pointing to the\n        // location of the credential file. This is typically used in local\n        // developer scenarios.\n        credential = await this._tryGetApplicationCredentialsFromEnvironmentVariable(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.defaultScopes = this.defaultScopes;\n                credential.scopes = this.scopes;\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Look in the well-known credential file location.\n        credential = await this._tryGetApplicationCredentialsFromWellKnownFile(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.defaultScopes = this.defaultScopes;\n                credential.scopes = this.scopes;\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Determine if we're running on GCE.\n        let isGCE;\n        try {\n            isGCE = await this._checkIsGCE();\n        }\n        catch (e) {\n            e.message = `Unexpected error determining execution environment: ${e.message}`;\n            throw e;\n        }\n        if (!isGCE) {\n            // We failed to find the default credentials. Bail out with an error.\n            throw new Error('Could not load the default credentials. Browse to https://cloud.google.com/docs/authentication/getting-started for more information.');\n        }\n        // For GCE, just return a default ComputeClient. It will take care of\n        // the rest.\n        options.scopes = this.scopes || this.defaultScopes;\n        this.cachedCredential = new computeclient_1.Compute(options);\n        projectId = await this.getProjectId();\n        return { projectId, credential: this.cachedCredential };\n    }\n    /**\n     * Determines whether the auth layer is running on Google Compute Engine.\n     * @returns A promise that resolves with the boolean.\n     * @api private\n     */\n    async _checkIsGCE() {\n        if (this.checkIsGCE === undefined) {\n            this.checkIsGCE = await gcpMetadata.isAvailable();\n        }\n        return this.checkIsGCE;\n    }\n    /**\n     * Attempts to load default credentials from the environment variable path..\n     * @returns Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromEnvironmentVariable(options) {\n        const credentialsPath = process.env['GOOGLE_APPLICATION_CREDENTIALS'] ||\n            process.env['google_application_credentials'];\n        if (!credentialsPath || credentialsPath.length === 0) {\n            return null;\n        }\n        try {\n            return this._getApplicationCredentialsFromFilePath(credentialsPath, options);\n        }\n        catch (e) {\n            e.message = `Unable to read the credential file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable: ${e.message}`;\n            throw e;\n        }\n    }\n    /**\n     * Attempts to load default credentials from a well-known file location\n     * @return Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromWellKnownFile(options) {\n        // First, figure out the location of the file, depending upon the OS type.\n        let location = null;\n        if (this._isWindows()) {\n            // Windows\n            location = process.env['APPDATA'];\n        }\n        else {\n            // Linux or Mac\n            const home = process.env['HOME'];\n            if (home) {\n                location = path.join(home, '.config');\n            }\n        }\n        // If we found the root path, expand it.\n        if (location) {\n            location = path.join(location, 'gcloud', 'application_default_credentials.json');\n            if (!fs.existsSync(location)) {\n                location = null;\n            }\n        }\n        // The file does not exist.\n        if (!location) {\n            return null;\n        }\n        // The file seems to exist. Try to use it.\n        const client = await this._getApplicationCredentialsFromFilePath(location, options);\n        return client;\n    }\n    /**\n     * Attempts to load default credentials from a file at the given path..\n     * @param filePath The path to the file to read.\n     * @returns Promise that resolves with the OAuth2Client\n     * @api private\n     */\n    async _getApplicationCredentialsFromFilePath(filePath, options = {}) {\n        // Make sure the path looks like a string.\n        if (!filePath || filePath.length === 0) {\n            throw new Error('The file path is invalid.');\n        }\n        // Make sure there is a file at the path. lstatSync will throw if there is\n        // nothing there.\n        try {\n            // Resolve path to actual file in case of symlink. Expect a thrown error\n            // if not resolvable.\n            filePath = fs.realpathSync(filePath);\n            if (!fs.lstatSync(filePath).isFile()) {\n                throw new Error();\n            }\n        }\n        catch (err) {\n            err.message = `The file at ${filePath} does not exist, or it is not a file. ${err.message}`;\n            throw err;\n        }\n        // Now open a read stream on the file, and parse it.\n        const readStream = fs.createReadStream(filePath);\n        return this.fromStream(readStream, options);\n    }\n    /**\n     * Create a credentials instance using the given input options.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    fromJSON(json, options) {\n        let client;\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the Google auth settings.');\n        }\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            client.defaultScopes = this.defaultScopes;\n        }\n        client.fromJSON(json);\n        return client;\n    }\n    /**\n     * Return a JWT or UserRefreshClient from JavaScript object, caching both the\n     * object used to instantiate and the client.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    _cacheClientFromJSON(json, options) {\n        let client;\n        // create either a UserRefreshClient or JWT client.\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            client.defaultScopes = this.defaultScopes;\n        }\n        client.fromJSON(json);\n        // cache both raw data used to instantiate client and client itself.\n        this.jsonContent = json;\n        this.cachedCredential = client;\n        return this.cachedCredential;\n    }\n    fromStream(inputStream, optionsOrCallback = {}, callback) {\n        let options = {};\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.fromStreamAsync(inputStream, options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream, options);\n        }\n    }\n    fromStreamAsync(inputStream, options) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the Google auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    try {\n                        const data = JSON.parse(s);\n                        const r = this._cacheClientFromJSON(data, options);\n                        return resolve(r);\n                    }\n                    catch (err) {\n                        // If we failed parsing this.keyFileName, assume that it\n                        // is a PEM or p12 certificate:\n                        if (!this.keyFilename)\n                            throw err;\n                        const client = new jwtclient_1.JWT({\n                            ...this.clientOptions,\n                            keyFile: this.keyFilename,\n                        });\n                        this.cachedCredential = client;\n                        return resolve(client);\n                    }\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n    /**\n     * Create a credentials instance using the given API key string.\n     * @param apiKey The API key string\n     * @param options An optional options object.\n     * @returns A JWT loaded from the key\n     */\n    fromAPIKey(apiKey, options) {\n        options = options || {};\n        const client = new jwtclient_1.JWT(options);\n        client.fromAPIKey(apiKey);\n        return client;\n    }\n    /**\n     * Determines whether the current operating system is Windows.\n     * @api private\n     */\n    _isWindows() {\n        const sys = os.platform();\n        if (sys && sys.length >= 3) {\n            if (sys.substring(0, 3).toLowerCase() === 'win') {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Run the Google Cloud SDK command that prints the default project ID\n     */\n    async getDefaultServiceProjectId() {\n        return new Promise(resolve => {\n            child_process_1.exec('gcloud config config-helper --format json', (err, stdout) => {\n                if (!err && stdout) {\n                    try {\n                        const projectId = JSON.parse(stdout).configuration.properties.core\n                            .project;\n                        resolve(projectId);\n                        return;\n                    }\n                    catch (e) {\n                        // ignore errors\n                    }\n                }\n                resolve(null);\n            });\n        });\n    }\n    /**\n     * Loads the project id from environment variables.\n     * @api private\n     */\n    getProductionProjectId() {\n        return (process.env['GCLOUD_PROJECT'] ||\n            process.env['GOOGLE_CLOUD_PROJECT'] ||\n            process.env['gcloud_project'] ||\n            process.env['google_cloud_project']);\n    }\n    /**\n     * Loads the project id from the GOOGLE_APPLICATION_CREDENTIALS json file.\n     * @api private\n     */\n    async getFileProjectId() {\n        if (this.cachedCredential) {\n            // Try to read the project ID from the cached credentials file\n            return this.cachedCredential.projectId;\n        }\n        // Ensure the projectId is loaded from the keyFile if available.\n        if (this.keyFilename) {\n            const creds = await this.getClient();\n            if (creds && creds.projectId) {\n                return creds.projectId;\n            }\n        }\n        // Try to load a credentials file and read its project ID\n        const r = await this._tryGetApplicationCredentialsFromEnvironmentVariable();\n        if (r) {\n            return r.projectId;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Gets the Compute Engine project ID if it can be inferred.\n     */\n    async getGCEProjectId() {\n        try {\n            const r = await gcpMetadata.project('project-id');\n            return r;\n        }\n        catch (e) {\n            // Ignore any errors\n            return null;\n        }\n    }\n    getCredentials(callback) {\n        if (callback) {\n            this.getCredentialsAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getCredentialsAsync();\n        }\n    }\n    async getCredentialsAsync() {\n        await this.getClient();\n        if (this.jsonContent) {\n            const credential = {\n                client_email: this.jsonContent.client_email,\n                private_key: this.jsonContent.private_key,\n            };\n            return credential;\n        }\n        const isGCE = await this._checkIsGCE();\n        if (!isGCE) {\n            throw new Error('Unknown error.');\n        }\n        // For GCE, return the service account details from the metadata server\n        // NOTE: The trailing '/' at the end of service-accounts/ is very important!\n        // The GCF metadata server doesn't respect querystring params if this / is\n        // not included.\n        const data = await gcpMetadata.instance({\n            property: 'service-accounts/',\n            params: { recursive: 'true' },\n        });\n        if (!data || !data.default || !data.default.email) {\n            throw new Error('Failure from metadata server.');\n        }\n        return { client_email: data.default.email };\n    }\n    /**\n     * Automatically obtain a client based on the provided configuration.  If no\n     * options were passed, use Application Default Credentials.\n     */\n    async getClient(options) {\n        if (options) {\n            throw new Error('Passing options to getClient is forbidden in v5.0.0. Use new GoogleAuth(opts) instead.');\n        }\n        if (!this.cachedCredential) {\n            if (this.jsonContent) {\n                this._cacheClientFromJSON(this.jsonContent, this.clientOptions);\n            }\n            else if (this.keyFilename) {\n                const filePath = path.resolve(this.keyFilename);\n                const stream = fs.createReadStream(filePath);\n                await this.fromStreamAsync(stream, this.clientOptions);\n            }\n            else {\n                await this.getApplicationDefaultAsync(this.clientOptions);\n            }\n        }\n        return this.cachedCredential;\n    }\n    /**\n     * Creates a client which will fetch an ID token for authorization.\n     * @param targetAudience the audience for the fetched ID token.\n     * @returns IdTokenClient for making HTTP calls authenticated with ID tokens.\n     */\n    async getIdTokenClient(targetAudience) {\n        const client = await this.getClient();\n        if (!('fetchIdToken' in client)) {\n            throw new Error('Cannot fetch ID token in this environment, use GCE or set the GOOGLE_APPLICATION_CREDENTIALS environment variable to a service account credentials JSON file.');\n        }\n        return new idtokenclient_1.IdTokenClient({ targetAudience, idTokenProvider: client });\n    }\n    /**\n     * Automatically obtain application default credentials, and return\n     * an access token for making requests.\n     */\n    async getAccessToken() {\n        const client = await this.getClient();\n        return (await client.getAccessToken()).token;\n    }\n    /**\n     * Obtain the HTTP headers that will provide authorization for a given\n     * request.\n     */\n    async getRequestHeaders(url) {\n        const client = await this.getClient();\n        return client.getRequestHeaders(url);\n    }\n    /**\n     * Obtain credentials for a request, then attach the appropriate headers to\n     * the request options.\n     * @param opts Axios or Request options on which to attach the headers\n     */\n    async authorizeRequest(opts) {\n        opts = opts || {};\n        const url = opts.url || opts.uri;\n        const client = await this.getClient();\n        const headers = await client.getRequestHeaders(url);\n        opts.headers = Object.assign(opts.headers || {}, headers);\n        return opts;\n    }\n    /**\n     * Automatically obtain application default credentials, and make an\n     * HTTP request using the given options.\n     * @param opts Axios request options for the HTTP request.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(opts) {\n        const client = await this.getClient();\n        return client.request(opts);\n    }\n    /**\n     * Determine the compute environment in which the code is running.\n     */\n    getEnv() {\n        return envDetect_1.getEnv();\n    }\n    /**\n     * Sign the given data with the current private key, or go out\n     * to the IAM API to sign it.\n     * @param data The data to be signed.\n     */\n    async sign(data) {\n        const client = await this.getClient();\n        const crypto = crypto_1.createCrypto();\n        if (client instanceof jwtclient_1.JWT && client.key) {\n            const sign = await crypto.sign(client.key, data);\n            return sign;\n        }\n        const projectId = await this.getProjectId();\n        if (!projectId) {\n            throw new Error('Cannot sign data without a project ID.');\n        }\n        const creds = await this.getCredentials();\n        if (!creds.client_email) {\n            throw new Error('Cannot sign data without `client_email`.');\n        }\n        const url = `https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${creds.client_email}:signBlob`;\n        const res = await this.request({\n            method: 'POST',\n            url,\n            data: {\n                payload: crypto.encodeBase64StringUtf8(data),\n            },\n        });\n        return res.data.signedBlob;\n    }\n}\nexports.GoogleAuth = GoogleAuth;\n/**\n * Export DefaultTransporter as a static property of the class.\n */\nGoogleAuth.DefaultTransporter = transporters_1.DefaultTransporter;\n//# sourceMappingURL=googleauth.js.map","\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoginTicket = void 0;\nclass LoginTicket {\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @param {string} env Envelope of the jwt\n     * @param {TokenPayload} pay Payload of the jwt\n     * @constructor\n     */\n    constructor(env, pay) {\n        this.envelope = env;\n        this.payload = pay;\n    }\n    getEnvelope() {\n        return this.envelope;\n    }\n    getPayload() {\n        return this.payload;\n    }\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @return The user ID\n     */\n    getUserId() {\n        const payload = this.getPayload();\n        if (payload && payload.sub) {\n            return payload.sub;\n        }\n        return null;\n    }\n    /**\n     * Returns attributes from the login ticket.  This can contain\n     * various information about the user session.\n     *\n     * @return The envelope and payload\n     */\n    getAttributes() {\n        return { envelope: this.getEnvelope(), payload: this.getPayload() };\n    }\n}\nexports.LoginTicket = LoginTicket;\n//# sourceMappingURL=loginticket.js.map","\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = exports.clear = exports.GCPEnv = void 0;\nconst gcpMetadata = require(\"gcp-metadata\");\nvar GCPEnv;\n(function (GCPEnv) {\n    GCPEnv[\"APP_ENGINE\"] = \"APP_ENGINE\";\n    GCPEnv[\"KUBERNETES_ENGINE\"] = \"KUBERNETES_ENGINE\";\n    GCPEnv[\"CLOUD_FUNCTIONS\"] = \"CLOUD_FUNCTIONS\";\n    GCPEnv[\"COMPUTE_ENGINE\"] = \"COMPUTE_ENGINE\";\n    GCPEnv[\"NONE\"] = \"NONE\";\n})(GCPEnv = exports.GCPEnv || (exports.GCPEnv = {}));\nlet envPromise;\nfunction clear() {\n    envPromise = undefined;\n}\nexports.clear = clear;\nasync function getEnv() {\n    if (envPromise) {\n        return envPromise;\n    }\n    envPromise = getEnvMemoized();\n    return envPromise;\n}\nexports.getEnv = getEnv;\nasync function getEnvMemoized() {\n    let env = GCPEnv.NONE;\n    if (isAppEngine()) {\n        env = GCPEnv.APP_ENGINE;\n    }\n    else if (isCloudFunction()) {\n        env = GCPEnv.CLOUD_FUNCTIONS;\n    }\n    else if (await isComputeEngine()) {\n        if (await isKubernetesEngine()) {\n            env = GCPEnv.KUBERNETES_ENGINE;\n        }\n        else {\n            env = GCPEnv.COMPUTE_ENGINE;\n        }\n    }\n    else {\n        env = GCPEnv.NONE;\n    }\n    return env;\n}\nfunction isAppEngine() {\n    return !!(process.env.GAE_SERVICE || process.env.GAE_MODULE_NAME);\n}\nfunction isCloudFunction() {\n    return !!(process.env.FUNCTION_NAME || process.env.FUNCTION_TARGET);\n}\nasync function isKubernetesEngine() {\n    try {\n        await gcpMetadata.instance('attributes/cluster-name');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nasync function isComputeEngine() {\n    return gcpMetadata.isAvailable();\n}\n//# sourceMappingURL=envDetect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.auth = void 0;\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst googleauth_1 = require(\"./auth/googleauth\");\nObject.defineProperty(exports, \"GoogleAuth\", { enumerable: true, get: function () { return googleauth_1.GoogleAuth; } });\nvar computeclient_1 = require(\"./auth/computeclient\");\nObject.defineProperty(exports, \"Compute\", { enumerable: true, get: function () { return computeclient_1.Compute; } });\nvar envDetect_1 = require(\"./auth/envDetect\");\nObject.defineProperty(exports, \"GCPEnv\", { enumerable: true, get: function () { return envDetect_1.GCPEnv; } });\nvar iam_1 = require(\"./auth/iam\");\nObject.defineProperty(exports, \"IAMAuth\", { enumerable: true, get: function () { return iam_1.IAMAuth; } });\nvar idtokenclient_1 = require(\"./auth/idtokenclient\");\nObject.defineProperty(exports, \"IdTokenClient\", { enumerable: true, get: function () { return idtokenclient_1.IdTokenClient; } });\nvar jwtaccess_1 = require(\"./auth/jwtaccess\");\nObject.defineProperty(exports, \"JWTAccess\", { enumerable: true, get: function () { return jwtaccess_1.JWTAccess; } });\nvar jwtclient_1 = require(\"./auth/jwtclient\");\nObject.defineProperty(exports, \"JWT\", { enumerable: true, get: function () { return jwtclient_1.JWT; } });\nvar oauth2client_1 = require(\"./auth/oauth2client\");\nObject.defineProperty(exports, \"CodeChallengeMethod\", { enumerable: true, get: function () { return oauth2client_1.CodeChallengeMethod; } });\nObject.defineProperty(exports, \"OAuth2Client\", { enumerable: true, get: function () { return oauth2client_1.OAuth2Client; } });\nvar loginticket_1 = require(\"./auth/loginticket\");\nObject.defineProperty(exports, \"LoginTicket\", { enumerable: true, get: function () { return loginticket_1.LoginTicket; } });\nvar refreshclient_1 = require(\"./auth/refreshclient\");\nObject.defineProperty(exports, \"UserRefreshClient\", { enumerable: true, get: function () { return refreshclient_1.UserRefreshClient; } });\nvar transporters_1 = require(\"./transporters\");\nObject.defineProperty(exports, \"DefaultTransporter\", { enumerable: true, get: function () { return transporters_1.DefaultTransporter; } });\nconst auth = new googleauth_1.GoogleAuth();\nexports.auth = auth;\n//# sourceMappingURL=index.js.map","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2Client = exports.CertificateFormat = exports.CodeChallengeMethod = void 0;\nconst querystring = require(\"querystring\");\nconst stream = require(\"stream\");\nconst formatEcdsa = require(\"ecdsa-sig-formatter\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst authclient_1 = require(\"./authclient\");\nconst loginticket_1 = require(\"./loginticket\");\nvar CodeChallengeMethod;\n(function (CodeChallengeMethod) {\n    CodeChallengeMethod[\"Plain\"] = \"plain\";\n    CodeChallengeMethod[\"S256\"] = \"S256\";\n})(CodeChallengeMethod = exports.CodeChallengeMethod || (exports.CodeChallengeMethod = {}));\nvar CertificateFormat;\n(function (CertificateFormat) {\n    CertificateFormat[\"PEM\"] = \"PEM\";\n    CertificateFormat[\"JWK\"] = \"JWK\";\n})(CertificateFormat = exports.CertificateFormat || (exports.CertificateFormat = {}));\nclass OAuth2Client extends authclient_1.AuthClient {\n    constructor(optionsOrClientId, clientSecret, redirectUri) {\n        super();\n        this.certificateCache = {};\n        this.certificateExpiry = null;\n        this.certificateCacheFormat = CertificateFormat.PEM;\n        this.refreshTokenPromises = new Map();\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : { clientId: optionsOrClientId, clientSecret, redirectUri };\n        this._clientId = opts.clientId;\n        this._clientSecret = opts.clientSecret;\n        this.redirectUri = opts.redirectUri;\n        this.eagerRefreshThresholdMillis =\n            opts.eagerRefreshThresholdMillis || 5 * 60 * 1000;\n        this.forceRefreshOnFailure = !!opts.forceRefreshOnFailure;\n    }\n    /**\n     * Generates URL for consent page landing.\n     * @param opts Options.\n     * @return URL to consent page.\n     */\n    generateAuthUrl(opts = {}) {\n        if (opts.code_challenge_method && !opts.code_challenge) {\n            throw new Error('If a code_challenge_method is provided, code_challenge must be included.');\n        }\n        opts.response_type = opts.response_type || 'code';\n        opts.client_id = opts.client_id || this._clientId;\n        opts.redirect_uri = opts.redirect_uri || this.redirectUri;\n        // Allow scopes to be passed either as array or a string\n        if (opts.scope instanceof Array) {\n            opts.scope = opts.scope.join(' ');\n        }\n        const rootUrl = OAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_;\n        return rootUrl + '?' + querystring.stringify(opts);\n    }\n    generateCodeVerifier() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('generateCodeVerifier is removed, please use generateCodeVerifierAsync instead.');\n    }\n    /**\n     * Convenience method to automatically generate a code_verifier, and its\n     * resulting SHA256. If used, this must be paired with a S256\n     * code_challenge_method.\n     *\n     * For a full example see:\n     * https://github.com/googleapis/google-auth-library-nodejs/blob/master/samples/oauth2-codeVerifier.js\n     */\n    async generateCodeVerifierAsync() {\n        // base64 encoding uses 6 bits per character, and we want to generate128\n        // characters. 6*128/8 = 96.\n        const crypto = crypto_1.createCrypto();\n        const randomString = crypto.randomBytesBase64(96);\n        // The valid characters in the code_verifier are [A-Z]/[a-z]/[0-9]/\n        // \"-\"/\".\"/\"_\"/\"~\". Base64 encoded strings are pretty close, so we're just\n        // swapping out a few chars.\n        const codeVerifier = randomString\n            .replace(/\\+/g, '~')\n            .replace(/=/g, '_')\n            .replace(/\\//g, '-');\n        // Generate the base64 encoded SHA256\n        const unencodedCodeChallenge = await crypto.sha256DigestBase64(codeVerifier);\n        // We need to use base64UrlEncoding instead of standard base64\n        const codeChallenge = unencodedCodeChallenge\n            .split('=')[0]\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_');\n        return { codeVerifier, codeChallenge };\n    }\n    getToken(codeOrOptions, callback) {\n        const options = typeof codeOrOptions === 'string' ? { code: codeOrOptions } : codeOrOptions;\n        if (callback) {\n            this.getTokenAsync(options).then(r => callback(null, r.tokens, r.res), e => callback(e, null, e.response));\n        }\n        else {\n            return this.getTokenAsync(options);\n        }\n    }\n    async getTokenAsync(options) {\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const values = {\n            code: options.code,\n            client_id: options.client_id || this._clientId,\n            client_secret: this._clientSecret,\n            redirect_uri: options.redirect_uri || this.redirectUri,\n            grant_type: 'authorization_code',\n            code_verifier: options.codeVerifier,\n        };\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(values),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    /**\n     * Refreshes the access token.\n     * @param refresh_token Existing refresh token.\n     * @private\n     */\n    async refreshToken(refreshToken) {\n        if (!refreshToken) {\n            return this.refreshTokenNoCache(refreshToken);\n        }\n        // If a request to refresh using the same token has started,\n        // return the same promise.\n        if (this.refreshTokenPromises.has(refreshToken)) {\n            return this.refreshTokenPromises.get(refreshToken);\n        }\n        const p = this.refreshTokenNoCache(refreshToken).then(r => {\n            this.refreshTokenPromises.delete(refreshToken);\n            return r;\n        }, e => {\n            this.refreshTokenPromises.delete(refreshToken);\n            throw e;\n        });\n        this.refreshTokenPromises.set(refreshToken, p);\n        return p;\n    }\n    async refreshTokenNoCache(refreshToken) {\n        if (!refreshToken) {\n            throw new Error('No refresh token is set.');\n        }\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const data = {\n            refresh_token: refreshToken,\n            client_id: this._clientId,\n            client_secret: this._clientSecret,\n            grant_type: 'refresh_token',\n        };\n        // request for new token\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        // TODO: de-duplicate this code from a few spots\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    refreshAccessToken(callback) {\n        if (callback) {\n            this.refreshAccessTokenAsync().then(r => callback(null, r.credentials, r.res), callback);\n        }\n        else {\n            return this.refreshAccessTokenAsync();\n        }\n    }\n    async refreshAccessTokenAsync() {\n        const r = await this.refreshToken(this.credentials.refresh_token);\n        const tokens = r.tokens;\n        tokens.refresh_token = this.credentials.refresh_token;\n        this.credentials = tokens;\n        return { credentials: this.credentials, res: r.res };\n    }\n    getAccessToken(callback) {\n        if (callback) {\n            this.getAccessTokenAsync().then(r => callback(null, r.token, r.res), callback);\n        }\n        else {\n            return this.getAccessTokenAsync();\n        }\n    }\n    async getAccessTokenAsync() {\n        const shouldRefresh = !this.credentials.access_token || this.isTokenExpiring();\n        if (shouldRefresh) {\n            if (!this.credentials.refresh_token) {\n                throw new Error('No refresh token is set.');\n            }\n            const r = await this.refreshAccessTokenAsync();\n            if (!r.credentials || (r.credentials && !r.credentials.access_token)) {\n                throw new Error('Could not refresh access token.');\n            }\n            return { token: r.credentials.access_token, res: r.res };\n        }\n        else {\n            return { token: this.credentials.access_token };\n        }\n    }\n    /**\n     * The main authentication interface.  It takes an optional url which when\n     * present is the endpoint being accessed, and returns a Promise which\n     * resolves with authorization header fields.\n     *\n     * In OAuth2Client, the result has the form:\n     * { Authorization: 'Bearer <access_token_value>' }\n     * @param url The optional url being authorized\n     */\n    async getRequestHeaders(url) {\n        const headers = (await this.getRequestMetadataAsync(url)).headers;\n        return headers;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        const thisCreds = this.credentials;\n        if (!thisCreds.access_token && !thisCreds.refresh_token && !this.apiKey) {\n            throw new Error('No access, refresh token or API key is set.');\n        }\n        if (thisCreds.access_token && !this.isTokenExpiring()) {\n            thisCreds.token_type = thisCreds.token_type || 'Bearer';\n            const headers = {\n                Authorization: thisCreds.token_type + ' ' + thisCreds.access_token,\n            };\n            return { headers: this.addSharedMetadataHeaders(headers) };\n        }\n        if (this.apiKey) {\n            return { headers: { 'X-Goog-Api-Key': this.apiKey } };\n        }\n        let r = null;\n        let tokens = null;\n        try {\n            r = await this.refreshToken(thisCreds.refresh_token);\n            tokens = r.tokens;\n        }\n        catch (err) {\n            const e = err;\n            if (e.response &&\n                (e.response.status === 403 || e.response.status === 404)) {\n                e.message = `Could not refresh access token: ${e.message}`;\n            }\n            throw e;\n        }\n        const credentials = this.credentials;\n        credentials.token_type = credentials.token_type || 'Bearer';\n        tokens.refresh_token = credentials.refresh_token;\n        this.credentials = tokens;\n        const headers = {\n            Authorization: credentials.token_type + ' ' + tokens.access_token,\n        };\n        return { headers: this.addSharedMetadataHeaders(headers), res: r.res };\n    }\n    /**\n     * Generates an URL to revoke the given token.\n     * @param token The existing token to be revoked.\n     */\n    static getRevokeTokenUrl(token) {\n        const parameters = querystring.stringify({ token });\n        return `${OAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_}?${parameters}`;\n    }\n    revokeToken(token, callback) {\n        const opts = {\n            url: OAuth2Client.getRevokeTokenUrl(token),\n            method: 'POST',\n        };\n        if (callback) {\n            this.transporter\n                .request(opts)\n                .then(r => callback(null, r), callback);\n        }\n        else {\n            return this.transporter.request(opts);\n        }\n    }\n    revokeCredentials(callback) {\n        if (callback) {\n            this.revokeCredentialsAsync().then(res => callback(null, res), callback);\n        }\n        else {\n            return this.revokeCredentialsAsync();\n        }\n    }\n    async revokeCredentialsAsync() {\n        const token = this.credentials.access_token;\n        this.credentials = {};\n        if (token) {\n            return this.revokeToken(token);\n        }\n        else {\n            throw new Error('No access token to revoke.');\n        }\n    }\n    request(opts, callback) {\n        if (callback) {\n            this.requestAsync(opts).then(r => callback(null, r), e => {\n                return callback(e, e.response);\n            });\n        }\n        else {\n            return this.requestAsync(opts);\n        }\n    }\n    async requestAsync(opts, retry = false) {\n        let r2;\n        try {\n            const r = await this.getRequestMetadataAsync(opts.url);\n            opts.headers = opts.headers || {};\n            if (r.headers && r.headers['x-goog-user-project']) {\n                opts.headers['x-goog-user-project'] = r.headers['x-goog-user-project'];\n            }\n            if (r.headers && r.headers.Authorization) {\n                opts.headers.Authorization = r.headers.Authorization;\n            }\n            if (this.apiKey) {\n                opts.headers['X-Goog-Api-Key'] = this.apiKey;\n            }\n            r2 = await this.transporter.request(opts);\n        }\n        catch (e) {\n            const res = e.response;\n            if (res) {\n                const statusCode = res.status;\n                // Retry the request for metadata if the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - An access_token and refresh_token were available, but either no\n                //   expiry_date was available or the forceRefreshOnFailure flag is set.\n                //   The absent expiry_date case can happen when developers stash the\n                //   access_token and refresh_token for later use, but the access_token\n                //   fails on the first try because it's expired. Some developers may\n                //   choose to enable forceRefreshOnFailure to mitigate time-related\n                //   errors.\n                const mayRequireRefresh = this.credentials &&\n                    this.credentials.access_token &&\n                    this.credentials.refresh_token &&\n                    (!this.credentials.expiry_date || this.forceRefreshOnFailure);\n                const isReadableStream = res.config.data instanceof stream.Readable;\n                const isAuthErr = statusCode === 401 || statusCode === 403;\n                if (!retry && isAuthErr && !isReadableStream && mayRequireRefresh) {\n                    await this.refreshAccessTokenAsync();\n                    return this.requestAsync(opts, true);\n                }\n            }\n            throw e;\n        }\n        return r2;\n    }\n    verifyIdToken(options, callback) {\n        // This function used to accept two arguments instead of an options object.\n        // Check the types to help users upgrade with less pain.\n        // This check can be removed after a 2.0 release.\n        if (callback && typeof callback !== 'function') {\n            throw new Error('This method accepts an options object as the first parameter, which includes the idToken, audience, and maxExpiry.');\n        }\n        if (callback) {\n            this.verifyIdTokenAsync(options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.verifyIdTokenAsync(options);\n        }\n    }\n    async verifyIdTokenAsync(options) {\n        if (!options.idToken) {\n            throw new Error('The verifyIdToken method requires an ID Token');\n        }\n        const response = await this.getFederatedSignonCertsAsync();\n        const login = await this.verifySignedJwtWithCertsAsync(options.idToken, response.certs, options.audience, OAuth2Client.ISSUERS_, options.maxExpiry);\n        return login;\n    }\n    /**\n     * Obtains information about the provisioned access token.  Especially useful\n     * if you want to check the scopes that were provisioned to a given token.\n     *\n     * @param accessToken Required.  The Access Token for which you want to get\n     * user info.\n     */\n    async getTokenInfo(accessToken) {\n        const { data } = await this.transporter.request({\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Authorization: `Bearer ${accessToken}`,\n            },\n            url: OAuth2Client.GOOGLE_TOKEN_INFO_URL,\n        });\n        const info = Object.assign({\n            expiry_date: new Date().getTime() + data.expires_in * 1000,\n            scopes: data.scope.split(' '),\n        }, data);\n        delete info.expires_in;\n        delete info.scope;\n        return info;\n    }\n    getFederatedSignonCerts(callback) {\n        if (callback) {\n            this.getFederatedSignonCertsAsync().then(r => callback(null, r.certs, r.res), callback);\n        }\n        else {\n            return this.getFederatedSignonCertsAsync();\n        }\n    }\n    async getFederatedSignonCertsAsync() {\n        const nowTime = new Date().getTime();\n        const format = crypto_1.hasBrowserCrypto()\n            ? CertificateFormat.JWK\n            : CertificateFormat.PEM;\n        if (this.certificateExpiry &&\n            nowTime < this.certificateExpiry.getTime() &&\n            this.certificateCacheFormat === format) {\n            return { certs: this.certificateCache, format };\n        }\n        let res;\n        let url;\n        switch (format) {\n            case CertificateFormat.PEM:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_;\n                break;\n            case CertificateFormat.JWK:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_;\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        const cacheControl = res ? res.headers['cache-control'] : undefined;\n        let cacheAge = -1;\n        if (cacheControl) {\n            const pattern = new RegExp('max-age=([0-9]*)');\n            const regexResult = pattern.exec(cacheControl);\n            if (regexResult && regexResult.length === 2) {\n                // Cache results with max-age (in seconds)\n                cacheAge = Number(regexResult[1]) * 1000; // milliseconds\n            }\n        }\n        let certificates = {};\n        switch (format) {\n            case CertificateFormat.PEM:\n                certificates = res.data;\n                break;\n            case CertificateFormat.JWK:\n                for (const key of res.data.keys) {\n                    certificates[key.kid] = key;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        const now = new Date();\n        this.certificateExpiry =\n            cacheAge === -1 ? null : new Date(now.getTime() + cacheAge);\n        this.certificateCache = certificates;\n        this.certificateCacheFormat = format;\n        return { certs: certificates, format, res };\n    }\n    getIapPublicKeys(callback) {\n        if (callback) {\n            this.getIapPublicKeysAsync().then(r => callback(null, r.pubkeys, r.res), callback);\n        }\n        else {\n            return this.getIapPublicKeysAsync();\n        }\n    }\n    async getIapPublicKeysAsync() {\n        let res;\n        const url = OAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_;\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        return { pubkeys: res.data, res };\n    }\n    verifySignedJwtWithCerts() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('verifySignedJwtWithCerts is removed, please use verifySignedJwtWithCertsAsync instead.');\n    }\n    /**\n     * Verify the id token is signed with the correct certificate\n     * and is from the correct audience.\n     * @param jwt The jwt to verify (The ID Token in this case).\n     * @param certs The array of certs to test the jwt against.\n     * @param requiredAudience The audience to test the jwt against.\n     * @param issuers The allowed issuers of the jwt (Optional).\n     * @param maxExpiry The max expiry the certificate can be (Optional).\n     * @return Returns a promise resolving to LoginTicket on verification.\n     */\n    async verifySignedJwtWithCertsAsync(jwt, certs, requiredAudience, issuers, maxExpiry) {\n        const crypto = crypto_1.createCrypto();\n        if (!maxExpiry) {\n            maxExpiry = OAuth2Client.MAX_TOKEN_LIFETIME_SECS_;\n        }\n        const segments = jwt.split('.');\n        if (segments.length !== 3) {\n            throw new Error('Wrong number of segments in token: ' + jwt);\n        }\n        const signed = segments[0] + '.' + segments[1];\n        let signature = segments[2];\n        let envelope;\n        let payload;\n        try {\n            envelope = JSON.parse(crypto.decodeBase64StringUtf8(segments[0]));\n        }\n        catch (err) {\n            err.message = `Can't parse token envelope: ${segments[0]}': ${err.message}`;\n            throw err;\n        }\n        if (!envelope) {\n            throw new Error(\"Can't parse token envelope: \" + segments[0]);\n        }\n        try {\n            payload = JSON.parse(crypto.decodeBase64StringUtf8(segments[1]));\n        }\n        catch (err) {\n            err.message = `Can't parse token payload '${segments[0]}`;\n            throw err;\n        }\n        if (!payload) {\n            throw new Error(\"Can't parse token payload: \" + segments[1]);\n        }\n        if (!Object.prototype.hasOwnProperty.call(certs, envelope.kid)) {\n            // If this is not present, then there's no reason to attempt verification\n            throw new Error('No pem found for envelope: ' + JSON.stringify(envelope));\n        }\n        const cert = certs[envelope.kid];\n        if (envelope.alg === 'ES256') {\n            signature = formatEcdsa.joseToDer(signature, 'ES256').toString('base64');\n        }\n        const verified = await crypto.verify(cert, signed, signature);\n        if (!verified) {\n            throw new Error('Invalid token signature: ' + jwt);\n        }\n        if (!payload.iat) {\n            throw new Error('No issue time in token: ' + JSON.stringify(payload));\n        }\n        if (!payload.exp) {\n            throw new Error('No expiration time in token: ' + JSON.stringify(payload));\n        }\n        const iat = Number(payload.iat);\n        if (isNaN(iat))\n            throw new Error('iat field using invalid format');\n        const exp = Number(payload.exp);\n        if (isNaN(exp))\n            throw new Error('exp field using invalid format');\n        const now = new Date().getTime() / 1000;\n        if (exp >= now + maxExpiry) {\n            throw new Error('Expiration time too far in future: ' + JSON.stringify(payload));\n        }\n        const earliest = iat - OAuth2Client.CLOCK_SKEW_SECS_;\n        const latest = exp + OAuth2Client.CLOCK_SKEW_SECS_;\n        if (now < earliest) {\n            throw new Error('Token used too early, ' +\n                now +\n                ' < ' +\n                earliest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (now > latest) {\n            throw new Error('Token used too late, ' +\n                now +\n                ' > ' +\n                latest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (issuers && issuers.indexOf(payload.iss) < 0) {\n            throw new Error('Invalid issuer, expected one of [' +\n                issuers +\n                '], but got ' +\n                payload.iss);\n        }\n        // Check the audience matches if we have one\n        if (typeof requiredAudience !== 'undefined' && requiredAudience !== null) {\n            const aud = payload.aud;\n            let audVerified = false;\n            // If the requiredAudience is an array, check if it contains token\n            // audience\n            if (requiredAudience.constructor === Array) {\n                audVerified = requiredAudience.indexOf(aud) > -1;\n            }\n            else {\n                audVerified = aud === requiredAudience;\n            }\n            if (!audVerified) {\n                throw new Error('Wrong recipient, payload audience != requiredAudience');\n            }\n        }\n        return new loginticket_1.LoginTicket(envelope, payload);\n    }\n    /**\n     * Returns true if a token is expired or will expire within\n     * eagerRefreshThresholdMillismilliseconds.\n     * If there is no expiry time, assumes the token is not expired or expiring.\n     */\n    isTokenExpiring() {\n        const expiryDate = this.credentials.expiry_date;\n        return expiryDate\n            ? expiryDate <= new Date().getTime() + this.eagerRefreshThresholdMillis\n            : false;\n    }\n}\nexports.OAuth2Client = OAuth2Client;\nOAuth2Client.GOOGLE_TOKEN_INFO_URL = 'https://oauth2.googleapis.com/tokeninfo';\n/**\n * The base URL for auth endpoints.\n */\nOAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_ = 'https://accounts.google.com/o/oauth2/v2/auth';\n/**\n * The base endpoint for token retrieval.\n */\nOAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_ = 'https://oauth2.googleapis.com/token';\n/**\n * The base endpoint to revoke tokens.\n */\nOAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_ = 'https://oauth2.googleapis.com/revoke';\n/**\n * Google Sign on certificates in PEM format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v1/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v3/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_ = 'https://www.gstatic.com/iap/verify/public_key';\n/**\n * Clock skew - five minutes in seconds\n */\nOAuth2Client.CLOCK_SKEW_SECS_ = 300;\n/**\n * Max Token Lifetime is one day in seconds\n */\nOAuth2Client.MAX_TOKEN_LIFETIME_SECS_ = 86400;\n/**\n * The allowed oauth token issuers.\n */\nOAuth2Client.ISSUERS_ = [\n    'accounts.google.com',\n    'https://accounts.google.com',\n];\n//# sourceMappingURL=oauth2client.js.map","\"use strict\";\n// Copyright 2012 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthClient = void 0;\nconst events_1 = require(\"events\");\nconst transporters_1 = require(\"../transporters\");\nclass AuthClient extends events_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.transporter = new transporters_1.DefaultTransporter();\n        this.credentials = {};\n    }\n    /**\n     * Sets the auth credentials.\n     */\n    setCredentials(credentials) {\n        this.credentials = credentials;\n    }\n    /**\n     * Append additional headers, e.g., x-goog-user-project, shared across the\n     * classes inheriting AuthClient. This method should be used by any method\n     * that overrides getRequestMetadataAsync(), which is a shared helper for\n     * setting request information in both gRPC and HTTP API calls.\n     *\n     * @param headers objedcdt to append additional headers to.\n     */\n    addSharedMetadataHeaders(headers) {\n        // quota_project_id, stored in application_default_credentials.json, is set in\n        // the x-goog-user-project header, to indicate an alternate account for\n        // billing and quota:\n        if (!headers['x-goog-user-project'] && // don't override a value the user sets.\n            this.quotaProjectId) {\n            headers['x-goog-user-project'] = this.quotaProjectId;\n        }\n        return headers;\n    }\n}\nexports.AuthClient = AuthClient;\n//# sourceMappingURL=authclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBrowserCrypto = exports.createCrypto = void 0;\nconst crypto_1 = require(\"./browser/crypto\");\nconst crypto_2 = require(\"./node/crypto\");\nfunction createCrypto() {\n    if (hasBrowserCrypto()) {\n        return new crypto_1.BrowserCrypto();\n    }\n    return new crypto_2.NodeCrypto();\n}\nexports.createCrypto = createCrypto;\nfunction hasBrowserCrypto() {\n    return (typeof window !== 'undefined' &&\n        typeof window.crypto !== 'undefined' &&\n        typeof window.crypto.subtle !== 'undefined');\n}\nexports.hasBrowserCrypto = hasBrowserCrypto;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = void 0;\n// Accepts an options object passed from the user to the API.  In the\n// previous version of the API, it referred to a `Request` options object.\n// Now it refers to an Axiox Request Config object.  This is here to help\n// ensure users don't pass invalid options when they upgrade from 0.x to 1.x.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validate(options) {\n    const vpairs = [\n        { invalid: 'uri', expected: 'url' },\n        { invalid: 'json', expected: 'data' },\n        { invalid: 'qs', expected: 'params' },\n    ];\n    for (const pair of vpairs) {\n        if (options[pair.invalid]) {\n            const e = `'${pair.invalid}' is not a valid configuration option. Please use '${pair.expected}' instead. This library is using Axios for requests. Please see https://github.com/axios/axios to learn more about the valid request options.`;\n            throw new Error(e);\n        }\n    }\n}\nexports.validate = validate;\n//# sourceMappingURL=options.js.map","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IAMAuth = void 0;\nclass IAMAuth {\n    /**\n     * IAM credentials.\n     *\n     * @param selector the iam authority selector\n     * @param token the token\n     * @constructor\n     */\n    constructor(selector, token) {\n        this.selector = selector;\n        this.token = token;\n        this.selector = selector;\n        this.token = token;\n    }\n    /**\n     * Acquire the HTTP headers required to make an authenticated request.\n     */\n    getRequestHeaders() {\n        return {\n            'x-goog-iam-authority-selector': this.selector,\n            'x-goog-iam-authorization-token': this.token,\n        };\n    }\n}\nexports.IAMAuth = IAMAuth;\n//# sourceMappingURL=iam.js.map","\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdTokenClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n    /**\n     * Google ID Token client\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options) {\n        super();\n        this.targetAudience = options.targetAudience;\n        this.idTokenProvider = options.idTokenProvider;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        if (!this.credentials.id_token ||\n            (this.credentials.expiry_date || 0) < Date.now()) {\n            const idToken = await this.idTokenProvider.fetchIdToken(this.targetAudience);\n            this.credentials = {\n                id_token: idToken,\n                expiry_date: this.getIdTokenExpiryDate(idToken),\n            };\n        }\n        const headers = {\n            Authorization: 'Bearer ' + this.credentials.id_token,\n        };\n        return { headers };\n    }\n    getIdTokenExpiryDate(idToken) {\n        const payloadB64 = idToken.split('.')[1];\n        if (payloadB64) {\n            const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n            return payload.exp * 1000;\n        }\n    }\n}\nexports.IdTokenClient = IdTokenClient;\n//# sourceMappingURL=idtokenclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserCrypto = void 0;\n// This file implements crypto functions we need using in-browser\n// SubtleCrypto interface `window.crypto.subtle`.\nconst base64js = require(\"base64-js\");\n// Not all browsers support `TextEncoder`. The following `require` will\n// provide a fast UTF8-only replacement for those browsers that don't support\n// text encoding natively.\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\nif (typeof process === 'undefined' && typeof TextEncoder === 'undefined') {\n    require('fast-text-encoding');\n}\nclass BrowserCrypto {\n    constructor() {\n        if (typeof window === 'undefined' ||\n            window.crypto === undefined ||\n            window.crypto.subtle === undefined) {\n            throw new Error(\"SubtleCrypto not found. Make sure it's an https:// website.\");\n        }\n    }\n    async sha256DigestBase64(str) {\n        // SubtleCrypto digest() method is async, so we must make\n        // this method async as well.\n        // To calculate SHA256 digest using SubtleCrypto, we first\n        // need to convert an input string to an ArrayBuffer:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const inputBuffer = new TextEncoder().encode(str);\n        // Result is ArrayBuffer as well.\n        const outputBuffer = await window.crypto.subtle.digest('SHA-256', inputBuffer);\n        return base64js.fromByteArray(new Uint8Array(outputBuffer));\n    }\n    randomBytesBase64(count) {\n        const array = new Uint8Array(count);\n        window.crypto.getRandomValues(array);\n        return base64js.fromByteArray(array);\n    }\n    static padBase64(base64) {\n        // base64js requires padding, so let's add some '='\n        while (base64.length % 4 !== 0) {\n            base64 += '=';\n        }\n        return base64;\n    }\n    async verify(pubkey, data, signature) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const signatureArray = base64js.toByteArray(BrowserCrypto.padBase64(signature));\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', pubkey, algo, true, ['verify']);\n        // SubtleCrypto's verify method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.verify(algo, cryptoKey, signatureArray, dataArray);\n        return result;\n    }\n    async sign(privateKey, data) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', privateKey, algo, true, ['sign']);\n        // SubtleCrypto's sign method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.sign(algo, cryptoKey, dataArray);\n        return base64js.fromByteArray(new Uint8Array(result));\n    }\n    decodeBase64StringUtf8(base64) {\n        const uint8array = base64js.toByteArray(BrowserCrypto.padBase64(base64));\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const result = new TextDecoder().decode(uint8array);\n        return result;\n    }\n    encodeBase64StringUtf8(text) {\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const uint8array = new TextEncoder().encode(text);\n        const result = base64js.fromByteArray(uint8array);\n        return result;\n    }\n}\nexports.BrowserCrypto = BrowserCrypto;\n//# sourceMappingURL=crypto.js.map","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWTAccess = void 0;\nconst jws = require(\"jws\");\nconst LRU = require(\"lru-cache\");\nconst DEFAULT_HEADER = {\n    alg: 'RS256',\n    typ: 'JWT',\n};\nclass JWTAccess {\n    /**\n     * JWTAccess service account credentials.\n     *\n     * Create a new access token by using the credential to create a new JWT token\n     * that's recognized as the access token.\n     *\n     * @param email the service account email address.\n     * @param key the private key that will be used to sign the token.\n     * @param keyId the ID of the private key used to sign the token.\n     */\n    constructor(email, key, keyId, eagerRefreshThresholdMillis) {\n        this.cache = new LRU({\n            max: 500,\n            maxAge: 60 * 60 * 1000,\n        });\n        this.email = email;\n        this.key = key;\n        this.keyId = keyId;\n        this.eagerRefreshThresholdMillis = eagerRefreshThresholdMillis !== null && eagerRefreshThresholdMillis !== void 0 ? eagerRefreshThresholdMillis : 5 * 60 * 1000;\n    }\n    /**\n     * Get a non-expired access token, after refreshing if necessary.\n     *\n     * @param url The URI being authorized.\n     * @param additionalClaims An object with a set of additional claims to\n     * include in the payload.\n     * @returns An object that includes the authorization header.\n     */\n    getRequestHeaders(url, additionalClaims) {\n        // Return cached authorization headers, unless we are within\n        // eagerRefreshThresholdMillis ms of them expiring:\n        const cachedToken = this.cache.get(url);\n        const now = Date.now();\n        if (cachedToken &&\n            cachedToken.expiration - now > this.eagerRefreshThresholdMillis) {\n            return cachedToken.headers;\n        }\n        const iat = Math.floor(Date.now() / 1000);\n        const exp = JWTAccess.getExpirationTime(iat);\n        // The payload used for signed JWT headers has:\n        // iss == sub == <client email>\n        // aud == <the authorization uri>\n        const defaultClaims = {\n            iss: this.email,\n            sub: this.email,\n            aud: url,\n            exp,\n            iat,\n        };\n        // if additionalClaims are provided, ensure they do not collide with\n        // other required claims.\n        if (additionalClaims) {\n            for (const claim in defaultClaims) {\n                if (additionalClaims[claim]) {\n                    throw new Error(`The '${claim}' property is not allowed when passing additionalClaims. This claim is included in the JWT by default.`);\n                }\n            }\n        }\n        const header = this.keyId\n            ? { ...DEFAULT_HEADER, kid: this.keyId }\n            : DEFAULT_HEADER;\n        const payload = Object.assign(defaultClaims, additionalClaims);\n        // Sign the jwt and add it to the cache\n        const signedJWT = jws.sign({ header, payload, secret: this.key });\n        const headers = { Authorization: `Bearer ${signedJWT}` };\n        this.cache.set(url, {\n            expiration: exp * 1000,\n            headers,\n        });\n        return headers;\n    }\n    /**\n     * Returns an expiration time for the JWT token.\n     *\n     * @param iat The issued at time for the JWT.\n     * @returns An expiration time for the JWT.\n     */\n    static getExpirationTime(iat) {\n        const exp = iat + 3600; // 3600 seconds = 1 hour\n        return exp;\n    }\n    /**\n     * Create a JWTAccess credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                reject(new Error('Must pass in a stream containing the service account auth settings.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('data', chunk => (s += chunk))\n                .on('error', reject)\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        });\n    }\n}\nexports.JWTAccess = JWTAccess;\n//# sourceMappingURL=jwtaccess.js.map","\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWT = void 0;\nconst gtoken_1 = require(\"gtoken\");\nconst jwtaccess_1 = require(\"./jwtaccess\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass JWT extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrEmail, keyFile, key, scopes, subject, keyId) {\n        const opts = optionsOrEmail && typeof optionsOrEmail === 'object'\n            ? optionsOrEmail\n            : { email: optionsOrEmail, keyFile, key, keyId, scopes, subject };\n        super({\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this.email = opts.email;\n        this.keyFile = opts.keyFile;\n        this.key = opts.key;\n        this.keyId = opts.keyId;\n        this.scopes = opts.scopes;\n        this.subject = opts.subject;\n        this.additionalClaims = opts.additionalClaims;\n        this.credentials = { refresh_token: 'jwt-placeholder', expiry_date: 1 };\n    }\n    /**\n     * Creates a copy of the credential with the specified scopes.\n     * @param scopes List of requested scopes or a single scope.\n     * @return The cloned instance.\n     */\n    createScoped(scopes) {\n        return new JWT({\n            email: this.email,\n            keyFile: this.keyFile,\n            key: this.key,\n            keyId: this.keyId,\n            scopes,\n            subject: this.subject,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Obtains the metadata to be sent with the request.\n     *\n     * @param url the URI being authorized.\n     */\n    async getRequestMetadataAsync(url) {\n        if (!this.apiKey && !this.hasUserScopes() && url) {\n            if (this.additionalClaims &&\n                this.additionalClaims.target_audience) {\n                const { tokens } = await this.refreshToken();\n                return {\n                    headers: this.addSharedMetadataHeaders({\n                        Authorization: `Bearer ${tokens.id_token}`,\n                    }),\n                };\n            }\n            else {\n                // no scopes have been set, but a uri has been provided. Use JWTAccess\n                // credentials.\n                if (!this.access) {\n                    this.access = new jwtaccess_1.JWTAccess(this.email, this.key, this.keyId, this.eagerRefreshThresholdMillis);\n                }\n                const headers = await this.access.getRequestHeaders(url, this.additionalClaims);\n                return { headers: this.addSharedMetadataHeaders(headers) };\n            }\n        }\n        else if (this.hasAnyScopes() || this.apiKey) {\n            return super.getRequestMetadataAsync(url);\n        }\n        else {\n            // If no audience, apiKey, or scopes are provided, we should not attempt\n            // to populate any headers:\n            return { headers: {} };\n        }\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        // Create a new gToken for fetching an ID token\n        const gtoken = new gtoken_1.GoogleToken({\n            iss: this.email,\n            sub: this.subject,\n            scope: this.scopes || this.defaultScopes,\n            keyFile: this.keyFile,\n            key: this.key,\n            additionalClaims: { target_audience: targetAudience },\n        });\n        await gtoken.getToken({\n            forceRefresh: true,\n        });\n        if (!gtoken.idToken) {\n            throw new Error('Unknown error: Failed to fetch ID token');\n        }\n        return gtoken.idToken;\n    }\n    /**\n     * Determine if there are currently scopes available.\n     */\n    hasUserScopes() {\n        if (!this.scopes) {\n            return false;\n        }\n        return this.scopes.length > 0;\n    }\n    /**\n     * Are there any default or user scopes defined.\n     */\n    hasAnyScopes() {\n        if (this.scopes && this.scopes.length > 0)\n            return true;\n        if (this.defaultScopes && this.defaultScopes.length > 0)\n            return true;\n        return false;\n    }\n    authorize(callback) {\n        if (callback) {\n            this.authorizeAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.authorizeAsync();\n        }\n    }\n    async authorizeAsync() {\n        const result = await this.refreshToken();\n        if (!result) {\n            throw new Error('No result returned');\n        }\n        this.credentials = result.tokens;\n        this.credentials.refresh_token = 'jwt-placeholder';\n        this.key = this.gtoken.key;\n        this.email = this.gtoken.iss;\n        return result.tokens;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken ignored\n     * @private\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const gtoken = this.createGToken();\n        const token = await gtoken.getToken({\n            forceRefresh: this.isTokenExpiring(),\n        });\n        const tokens = {\n            access_token: token.access_token,\n            token_type: 'Bearer',\n            expiry_date: gtoken.expiresAt,\n            id_token: gtoken.idToken,\n        };\n        this.emit('tokens', tokens);\n        return { res: null, tokens };\n    }\n    /**\n     * Create a gToken if it doesn't already exist.\n     */\n    createGToken() {\n        if (!this.gtoken) {\n            this.gtoken = new gtoken_1.GoogleToken({\n                iss: this.email,\n                sub: this.subject,\n                scope: this.scopes || this.defaultScopes,\n                keyFile: this.keyFile,\n                key: this.key,\n                additionalClaims: this.additionalClaims,\n            });\n        }\n        return this.gtoken;\n    }\n    /**\n     * Create a JWT credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the service account auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    /**\n     * Creates a JWT credentials instance using an API Key for authentication.\n     * @param apiKey The API Key in string form.\n     */\n    fromAPIKey(apiKey) {\n        if (typeof apiKey !== 'string') {\n            throw new Error('Must provide an API Key string.');\n        }\n        this.apiKey = apiKey;\n    }\n    /**\n     * Using the key or keyFile on the JWT client, obtain an object that contains\n     * the key and the client email.\n     */\n    async getCredentials() {\n        if (this.key) {\n            return { private_key: this.key, client_email: this.email };\n        }\n        else if (this.keyFile) {\n            const gtoken = this.createGToken();\n            const creds = await gtoken.getCredentials(this.keyFile);\n            return { private_key: creds.privateKey, client_email: creds.clientEmail };\n        }\n        throw new Error('A key or a keyFile must be provided to getCredentials.');\n    }\n}\nexports.JWT = JWT;\n//# sourceMappingURL=jwtclient.js.map","\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compute = void 0;\nconst arrify = require(\"arrify\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass Compute extends oauth2client_1.OAuth2Client {\n    /**\n     * Google Compute Engine service account credentials.\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options = {}) {\n        super(options);\n        // Start with an expired refresh token, which will automatically be\n        // refreshed before the first API call is made.\n        this.credentials = { expiry_date: 1, refresh_token: 'compute-placeholder' };\n        this.serviceAccountEmail = options.serviceAccountEmail || 'default';\n        this.scopes = arrify(options.scopes);\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken Unused parameter\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const tokenPath = `service-accounts/${this.serviceAccountEmail}/token`;\n        let data;\n        try {\n            const instanceOptions = {\n                property: tokenPath,\n            };\n            if (this.scopes.length > 0) {\n                instanceOptions.params = {\n                    scopes: this.scopes.join(','),\n                };\n            }\n            data = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not refresh access token: ${e.message}`;\n            this.wrapError(e);\n            throw e;\n        }\n        const tokens = data;\n        if (data && data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res: null };\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        const idTokenPath = `service-accounts/${this.serviceAccountEmail}/identity` +\n            `?format=full&audience=${targetAudience}`;\n        let idToken;\n        try {\n            const instanceOptions = {\n                property: idTokenPath,\n            };\n            idToken = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not fetch ID token: ${e.message}`;\n            throw e;\n        }\n        return idToken;\n    }\n    wrapError(e) {\n        const res = e.response;\n        if (res && res.status) {\n            e.code = res.status.toString();\n            if (res.status === 403) {\n                e.message =\n                    'A Forbidden error was returned while attempting to retrieve an access ' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have the correct permission scopes specified: ' +\n                        e.message;\n            }\n            else if (res.status === 404) {\n                e.message =\n                    'A Not Found error was returned while attempting to retrieve an access' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have any permission scopes specified: ' +\n                        e.message;\n            }\n        }\n    }\n}\nexports.Compute = Compute;\n//# sourceMappingURL=computeclient.js.map","\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeCrypto = void 0;\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n    async sha256DigestBase64(str) {\n        return crypto.createHash('sha256').update(str).digest('base64');\n    }\n    randomBytesBase64(count) {\n        return crypto.randomBytes(count).toString('base64');\n    }\n    async verify(pubkey, data, signature) {\n        const verifier = crypto.createVerify('sha256');\n        verifier.update(data);\n        verifier.end();\n        return verifier.verify(pubkey, signature, 'base64');\n    }\n    async sign(privateKey, data) {\n        const signer = crypto.createSign('RSA-SHA256');\n        signer.update(data);\n        signer.end();\n        return signer.sign(privateKey, 'base64');\n    }\n    decodeBase64StringUtf8(base64) {\n        return Buffer.from(base64, 'base64').toString('utf-8');\n    }\n    encodeBase64StringUtf8(text) {\n        return Buffer.from(text, 'utf-8').toString('base64');\n    }\n}\nexports.NodeCrypto = NodeCrypto;\n//# sourceMappingURL=crypto.js.map"],"sourceRoot":""}